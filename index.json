{"repository_name":"github.com/andrewc910/contrive","body":"# Contrive\n\nContrive is a shard similar for devise with rails. Contrive handles everything authentication. Currently amber is the only supported framework with both granite and jennifer orms being supported. I am open to other frameworks being supported but there is a lot to do before that. If you want this to work with lucky, you'll have to open a pull request right now.\n\nContrive takes the same approach as devise which is modularity. No need to load up code you aren't planning on using. The CLI generator makes installation easy. Please give a thanks to the amber core team for their CLI. I have...shamelessly...ripped it out of amber for contrive. Contrive CLI probably wouldn't even be possible if it weren't for the amber team.\n\n> **Note:** Only the class 'User' is supported right now. This will change in future releases.\n\nCurrently, contrive has 3 modules:  \n\n1. **Authentication**\n  - Just like amber or lucky, this is basic authentication. Sign up, sign in, sign out.  \n  - Mandatory columns:  \n    - email & password_digest\n  > **Note:** Contrive also puts 'password' and 'new_password' in as attributes, however we don't want these saved in plain text so do not add them as columns.\n\n2. **Confirmable**  \n  - Users are required to confirm their email prior to activation. Contrive generates a UUID for each user and sends an email.\n  - Mandatory columns:  \n    - token, confirmed & confirmed_at.\n  \n3. **Omniauth**  \n  - Users can sign up with google, facebook, github, twitter or vk.\n  - Manadatory columns:\n    - uid\n\n## Installation  \n\n1. Add the dependency to your `shard.yml`:  \n\n   ```yaml\n   dependencies:\n     contrive:\n       github: andrewc910/contrive\n   ```\n\n2. Run `shards install`  \n\n3. Move onto usage.\n\n## Usage\n### Authentication  \n\n1. Run the generator in console depending on your ORM:  \n\n    **Granite:**  \n    ```bash\n    contrive g auth user granite\n    ```  \n\n    or  \n\n    **Jennifer:**  \n    ```bash\n    contrive g auth user jennifer\n    ```  \n\n2. Migrate:  \n\n    **Granite:**  \n    ```bash\n    amber db migrate\n    ```\n\n    or\n\n    **Jennifer:**  \n    ```bash\n    crystal sam.cr -- db:migrate\n    ```  \n\n### Confirmation  \n\n1. Run the generator in console depending on your ORM:  \n\n    **Granite:**  \n    ```bash\n    contrive g confirm user granite\n    ```  \n\n    or\n\n    **Jennifer:**  \n    ```bash\n    contrive g confirm user jennifer\n    ```  \n\n2. Migrate\n\n3. Uncomment the commented lines in your user model that talk about confirmable.\n\n4. Open `contrive.cr` in initializers. Change `config.confirmable_enabled` to `true`.\n\n5. Configure SMTP - Please follow amber guides for this.  \n\n> **Note:** Amber will print out the token in console even if smtp is disabled. Find it, and paste with `your_url/registration/confrim?token=` to activate an account if you don't want to configure smtp on local.\n\n### Omniauth  \n\n1. Run the generator in console depending on your ORM:  \n\n    **Granite:**  \n    ```bash\n    contrive g omni user granite\n    ```\n\n    or  \n\n    **Jennifer:**  \n    ```bash\n    contrive g omni user jennifer\n    ```  \n\n2. Migrate\n\n3. Open up `contrive.cr` in initializers\n  - Configure you auth providers app id and secret key\n  - Uncomment the 'requires' for any providers you need\n\n4. Add `<a href=\"/omniauth/github\">Sign in with Github</a>` to a view and test. Replace `github` in the href for any providers you configured.\n\n5. Uncomment the commented line in pipes/authenticate.cr\n\n6. Add `include_providers()` to your authenticable model along with the providers names you required in step 3. EX: `include_providers(:facebook, :google)`\n\n## Roadmap\n\n- Tests: Nothing is stable without comprehensive tests and a beta release will not happen until this is done.\n- CLI: A lot of values are hardcoded. Fixing this will open up the door to other classes being supported.\n- I am sure more will come\n\n## Contributing\n\n1. Fork it (<https://github.com/andrewc910/contrive/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [andrewc910](https://github.com/andrewc910) - creator and maintainer\n","program":{"html_id":"github.com/andrewc910/contrive/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/andrewc910/contrive","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/andrewc910/contrive/Command","path":"Command.html","kind":"class","full_name":"Command","name":"Command","abstract":true,"superclass":{"html_id":"github.com/andrewc910/contrive/Cli/Command","kind":"class","full_name":"Cli::Command","name":"Command"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Cli/Command","kind":"class","full_name":"Cli::Command","name":"Command"},{"html_id":"github.com/andrewc910/contrive/Cli/CommandBase","kind":"class","full_name":"Cli::CommandBase","name":"CommandBase"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/cli/commands/command.cr","line_number":3,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/command.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/MainCommand/Generate","kind":"class","full_name":"Contrive::CLI::MainCommand::Generate","name":"Generate"}],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"after_exit(name=nil,&block:Command,Cli::Exit->Nil)-class-method","html_id":"after_exit(name=nil,&amp;block:Command,Cli::Exit-&gt;Nil)-class-method","name":"after_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command, Cli::Exit -> Nil)","source_link":null,"def":{"name":"after_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__after(proc, name)\n"}},{"id":"after_exit(proc:::Proc(Command,Cli::Exit,Nil))-class-method","html_id":"after_exit(proc:::Proc(Command,Cli::Exit,Nil))-class-method","name":"after_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Command, Cli::Exit, Nil))","source_link":null,"def":{"name":"after_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__after(proc, nil)"}},{"id":"after_exit(name,proc:::Proc(Command,Cli::Exit,Nil))-class-method","html_id":"after_exit(name,proc:::Proc(Command,Cli::Exit,Nil))-class-method","name":"after_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Command, Cli::Exit, Nil))","source_link":null,"def":{"name":"after_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__after(proc, name)"}},{"id":"after_initialize(name,proc:::Proc(Command,Nil))-class-method","html_id":"after_initialize(name,proc:::Proc(Command,Nil))-class-method","name":"after_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"args_string":"(name, proc : ::Proc(Command, Nil))","source_link":null,"def":{"name":"after_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__after(proc, name)"}},{"id":"after_initialize(proc:::Proc(Command,Nil))-class-method","html_id":"after_initialize(proc:::Proc(Command,Nil))-class-method","name":"after_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"args_string":"(proc : ::Proc(Command, Nil))","source_link":null,"def":{"name":"after_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__after(proc, nil)"}},{"id":"after_initialize(name=nil,&block:Command->Nil)-class-method","html_id":"after_initialize(name=nil,&amp;block:Command-&gt;Nil)-class-method","name":"after_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command -> Nil)","source_link":null,"def":{"name":"after_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command) do\n  block.call(_1)\nend\nappend_callback_for_initialize__after(proc, name)\n"}},{"id":"around_exit(name=nil,&block:Command,Cli::Exit->Nil)-class-method","html_id":"around_exit(name=nil,&amp;block:Command,Cli::Exit-&gt;Nil)-class-method","name":"around_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command, Cli::Exit -> Nil)","source_link":null,"def":{"name":"around_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__around(proc, name)\n"}},{"id":"around_exit(proc:::Proc(Command,Cli::Exit,Nil))-class-method","html_id":"around_exit(proc:::Proc(Command,Cli::Exit,Nil))-class-method","name":"around_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Command, Cli::Exit, Nil))","source_link":null,"def":{"name":"around_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__around(proc, nil)"}},{"id":"around_exit(name,proc:::Proc(Command,Cli::Exit,Nil))-class-method","html_id":"around_exit(name,proc:::Proc(Command,Cli::Exit,Nil))-class-method","name":"around_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Command, Cli::Exit, Nil))","source_link":null,"def":{"name":"around_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__around(proc, name)"}},{"id":"around_initialize(name,proc:::Proc(Command,Nil))-class-method","html_id":"around_initialize(name,proc:::Proc(Command,Nil))-class-method","name":"around_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"args_string":"(name, proc : ::Proc(Command, Nil))","source_link":null,"def":{"name":"around_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__around(proc, name)"}},{"id":"around_initialize(proc:::Proc(Command,Nil))-class-method","html_id":"around_initialize(proc:::Proc(Command,Nil))-class-method","name":"around_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"args_string":"(proc : ::Proc(Command, Nil))","source_link":null,"def":{"name":"around_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__around(proc, nil)"}},{"id":"around_initialize(name=nil,&block:Command->Nil)-class-method","html_id":"around_initialize(name=nil,&amp;block:Command-&gt;Nil)-class-method","name":"around_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command -> Nil)","source_link":null,"def":{"name":"around_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command) do\n  block.call(_1)\nend\nappend_callback_for_initialize__around(proc, name)\n"}},{"id":"before_exit(name,proc:::Proc(Command,Cli::Exit,Nil))-class-method","html_id":"before_exit(name,proc:::Proc(Command,Cli::Exit,Nil))-class-method","name":"before_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Command, Cli::Exit, Nil))","source_link":null,"def":{"name":"before_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__before(proc, name)"}},{"id":"before_exit(proc:::Proc(Command,Cli::Exit,Nil))-class-method","html_id":"before_exit(proc:::Proc(Command,Cli::Exit,Nil))-class-method","name":"before_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Command, Cli::Exit, Nil))","source_link":null,"def":{"name":"before_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__before(proc, nil)"}},{"id":"before_exit(name=nil,&block:Command,Cli::Exit->Nil)-class-method","html_id":"before_exit(name=nil,&amp;block:Command,Cli::Exit-&gt;Nil)-class-method","name":"before_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command, Cli::Exit -> Nil)","source_link":null,"def":{"name":"before_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__before(proc, name)\n"}},{"id":"before_initialize(name,proc:::Proc(Command,Nil))-class-method","html_id":"before_initialize(name,proc:::Proc(Command,Nil))-class-method","name":"before_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"args_string":"(name, proc : ::Proc(Command, Nil))","source_link":null,"def":{"name":"before_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__before(proc, name)"}},{"id":"before_initialize(name=nil,&block:Command->Nil)-class-method","html_id":"before_initialize(name=nil,&amp;block:Command-&gt;Nil)-class-method","name":"before_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command -> Nil)","source_link":null,"def":{"name":"before_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command) do\n  block.call(_1)\nend\nappend_callback_for_initialize__before(proc, name)\n"}},{"id":"before_initialize(proc:::Proc(Command,Nil))-class-method","html_id":"before_initialize(proc:::Proc(Command,Nil))-class-method","name":"before_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"args_string":"(proc : ::Proc(Command, Nil))","source_link":null,"def":{"name":"before_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__before(proc, nil)"}},{"id":"on_exit(name,proc:::Proc(Command,Cli::Exit,Nil))-class-method","html_id":"on_exit(name,proc:::Proc(Command,Cli::Exit,Nil))-class-method","name":"on_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Command, Cli::Exit, Nil))","source_link":null,"def":{"name":"on_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__on(proc, name)"}},{"id":"on_exit(proc:::Proc(Command,Cli::Exit,Nil))-class-method","html_id":"on_exit(proc:::Proc(Command,Cli::Exit,Nil))-class-method","name":"on_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Command, Cli::Exit, Nil))","source_link":null,"def":{"name":"on_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__on(proc, nil)"}},{"id":"on_exit(name=nil,&block:Command,Cli::Exit->Nil)-class-method","html_id":"on_exit(name=nil,&amp;block:Command,Cli::Exit-&gt;Nil)-class-method","name":"on_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command, Cli::Exit -> Nil)","source_link":null,"def":{"name":"on_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__on(proc, name)\n"}},{"id":"on_initialize(name=nil,&block:Command->Nil)-class-method","html_id":"on_initialize(name=nil,&amp;block:Command-&gt;Nil)-class-method","name":"on_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command -> Nil)","source_link":null,"def":{"name":"on_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command) do\n  block.call(_1)\nend\nappend_callback_for_initialize__on(proc, name)\n"}},{"id":"on_initialize(proc:::Proc(Command,Nil))-class-method","html_id":"on_initialize(proc:::Proc(Command,Nil))-class-method","name":"on_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"args_string":"(proc : ::Proc(Command, Nil))","source_link":null,"def":{"name":"on_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__on(proc, nil)"}},{"id":"on_initialize(name,proc:::Proc(Command,Nil))-class-method","html_id":"on_initialize(name,proc:::Proc(Command,Nil))-class-method","name":"on_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"args_string":"(name, proc : ::Proc(Command, Nil))","source_link":null,"def":{"name":"on_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__on(proc, name)"}},{"id":"run(argv:Array(String)=[]of::String,&block:Command->)-class-method","html_id":"run(argv:Array(String)=[]of::String,&amp;block:Command-&gt;)-class-method","name":"run","doc":"Run the command.\n\nThis method is automatically defined by the Crystal CLI library.","summary":"<p>Run the command.</p>","abstract":false,"args":[{"name":"argv","doc":null,"default_value":"[] of ::String","external_name":"argv","restriction":"Array(String)"}],"args_string":"(argv : Array(String) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">::</span><span class=\"t\">String</span>, &block : Command -> )","source_link":null,"def":{"name":"run","args":[{"name":"argv","doc":null,"default_value":"[] of ::String","external_name":"argv","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command -> )"},"return_type":"","visibility":"Public","body":"__klass.command__run(argv, &block)"}}],"constructors":[],"instance_methods":[{"id":"after_exit(name=nil,&block:Command,Cli::Exit->Nil)-instance-method","html_id":"after_exit(name=nil,&amp;block:Command,Cli::Exit-&gt;Nil)-instance-method","name":"after_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command, Cli::Exit -> Nil)","source_link":null,"def":{"name":"after_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__after(proc, name)\n"}},{"id":"after_exit(name,proc:::Proc(Command,Cli::Exit,Nil))-instance-method","html_id":"after_exit(name,proc:::Proc(Command,Cli::Exit,Nil))-instance-method","name":"after_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Command, Cli::Exit, Nil))","source_link":null,"def":{"name":"after_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__after(proc, name)"}},{"id":"after_exit(proc:::Proc(Command,Cli::Exit,Nil))-instance-method","html_id":"after_exit(proc:::Proc(Command,Cli::Exit,Nil))-instance-method","name":"after_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Command, Cli::Exit, Nil))","source_link":null,"def":{"name":"after_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__after(proc, nil)"}},{"id":"after_initialize(proc:::Proc(Command,Nil))-instance-method","html_id":"after_initialize(proc:::Proc(Command,Nil))-instance-method","name":"after_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"args_string":"(proc : ::Proc(Command, Nil))","source_link":null,"def":{"name":"after_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__after(proc, nil)"}},{"id":"after_initialize(name=nil,&block:Command->Nil)-instance-method","html_id":"after_initialize(name=nil,&amp;block:Command-&gt;Nil)-instance-method","name":"after_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command -> Nil)","source_link":null,"def":{"name":"after_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command) do\n  block.call(_1)\nend\nappend_callback_for_initialize__after(proc, name)\n"}},{"id":"after_initialize(name,proc:::Proc(Command,Nil))-instance-method","html_id":"after_initialize(name,proc:::Proc(Command,Nil))-instance-method","name":"after_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"args_string":"(name, proc : ::Proc(Command, Nil))","source_link":null,"def":{"name":"after_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__after(proc, name)"}},{"id":"around_exit(proc:::Proc(Command,Cli::Exit,Nil))-instance-method","html_id":"around_exit(proc:::Proc(Command,Cli::Exit,Nil))-instance-method","name":"around_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Command, Cli::Exit, Nil))","source_link":null,"def":{"name":"around_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__around(proc, nil)"}},{"id":"around_exit(name=nil,&block:Command,Cli::Exit->Nil)-instance-method","html_id":"around_exit(name=nil,&amp;block:Command,Cli::Exit-&gt;Nil)-instance-method","name":"around_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command, Cli::Exit -> Nil)","source_link":null,"def":{"name":"around_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__around(proc, name)\n"}},{"id":"around_exit(name,proc:::Proc(Command,Cli::Exit,Nil))-instance-method","html_id":"around_exit(name,proc:::Proc(Command,Cli::Exit,Nil))-instance-method","name":"around_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Command, Cli::Exit, Nil))","source_link":null,"def":{"name":"around_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__around(proc, name)"}},{"id":"around_initialize(name=nil,&block:Command->Nil)-instance-method","html_id":"around_initialize(name=nil,&amp;block:Command-&gt;Nil)-instance-method","name":"around_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command -> Nil)","source_link":null,"def":{"name":"around_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command) do\n  block.call(_1)\nend\nappend_callback_for_initialize__around(proc, name)\n"}},{"id":"around_initialize(proc:::Proc(Command,Nil))-instance-method","html_id":"around_initialize(proc:::Proc(Command,Nil))-instance-method","name":"around_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"args_string":"(proc : ::Proc(Command, Nil))","source_link":null,"def":{"name":"around_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__around(proc, nil)"}},{"id":"around_initialize(name,proc:::Proc(Command,Nil))-instance-method","html_id":"around_initialize(name,proc:::Proc(Command,Nil))-instance-method","name":"around_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"args_string":"(name, proc : ::Proc(Command, Nil))","source_link":null,"def":{"name":"around_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__around(proc, name)"}},{"id":"before_exit(name,proc:::Proc(Command,Cli::Exit,Nil))-instance-method","html_id":"before_exit(name,proc:::Proc(Command,Cli::Exit,Nil))-instance-method","name":"before_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Command, Cli::Exit, Nil))","source_link":null,"def":{"name":"before_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__before(proc, name)"}},{"id":"before_exit(proc:::Proc(Command,Cli::Exit,Nil))-instance-method","html_id":"before_exit(proc:::Proc(Command,Cli::Exit,Nil))-instance-method","name":"before_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Command, Cli::Exit, Nil))","source_link":null,"def":{"name":"before_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__before(proc, nil)"}},{"id":"before_exit(name=nil,&block:Command,Cli::Exit->Nil)-instance-method","html_id":"before_exit(name=nil,&amp;block:Command,Cli::Exit-&gt;Nil)-instance-method","name":"before_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command, Cli::Exit -> Nil)","source_link":null,"def":{"name":"before_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__before(proc, name)\n"}},{"id":"before_initialize(name=nil,&block:Command->Nil)-instance-method","html_id":"before_initialize(name=nil,&amp;block:Command-&gt;Nil)-instance-method","name":"before_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command -> Nil)","source_link":null,"def":{"name":"before_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command) do\n  block.call(_1)\nend\nappend_callback_for_initialize__before(proc, name)\n"}},{"id":"before_initialize(proc:::Proc(Command,Nil))-instance-method","html_id":"before_initialize(proc:::Proc(Command,Nil))-instance-method","name":"before_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"args_string":"(proc : ::Proc(Command, Nil))","source_link":null,"def":{"name":"before_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__before(proc, nil)"}},{"id":"before_initialize(name,proc:::Proc(Command,Nil))-instance-method","html_id":"before_initialize(name,proc:::Proc(Command,Nil))-instance-method","name":"before_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"args_string":"(name, proc : ::Proc(Command, Nil))","source_link":null,"def":{"name":"before_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__before(proc, name)"}},{"id":"callback_results:Hash(String,Callback::ResultSet(Nil))-instance-method","html_id":"callback_results:Hash(String,Callback::ResultSet(Nil))-instance-method","name":"callback_results","doc":"Returns callback results.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Returns callback results.</p>","abstract":false,"args":[],"args_string":" : Hash(String, Callback::ResultSet(Nil))","source_link":null,"def":{"name":"callback_results","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@callback_results"}},{"id":"callback_results_for_exit-instance-method","html_id":"callback_results_for_exit-instance-method","name":"callback_results_for_exit","doc":"Returns callback results of the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Returns callback results of the exit group.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"callback_results_for_exit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@callback_results[\"exit\"]? || (@callback_results[\"exit\"] = ::Callback::ResultSet(Nil).new)).as(::Callback::ResultSet(Nil))"}},{"id":"callback_results_for_initialize-instance-method","html_id":"callback_results_for_initialize-instance-method","name":"callback_results_for_initialize","doc":"Returns callback results of the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Returns callback results of the initialize group.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"callback_results_for_initialize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@callback_results[\"initialize\"]? || (@callback_results[\"initialize\"] = ::Callback::ResultSet(::Nil).new)).as(::Callback::ResultSet(::Nil))"}},{"id":"error(msg)-instance-method","html_id":"error(msg)-instance-method","name":"error","doc":null,"summary":null,"abstract":false,"args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"args_string":"(msg)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/command.cr#L10","def":{"name":"error","args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"log = Logger.new(STDOUT)\nlog.error(msg)\n"}},{"id":"info(msg)-instance-method","html_id":"info(msg)-instance-method","name":"info","doc":null,"summary":null,"abstract":false,"args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"args_string":"(msg)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/command.cr#L4","def":{"name":"info","args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"log = Logger.new(STDOUT)\nlog.info(msg)\n"}},{"id":"on_exit(name,proc:::Proc(Command,Cli::Exit,Nil))-instance-method","html_id":"on_exit(name,proc:::Proc(Command,Cli::Exit,Nil))-instance-method","name":"on_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Command, Cli::Exit, Nil))","source_link":null,"def":{"name":"on_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__on(proc, name)"}},{"id":"on_exit(proc:::Proc(Command,Cli::Exit,Nil))-instance-method","html_id":"on_exit(proc:::Proc(Command,Cli::Exit,Nil))-instance-method","name":"on_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Command, Cli::Exit, Nil))","source_link":null,"def":{"name":"on_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__on(proc, nil)"}},{"id":"on_exit(name=nil,&block:Command,Cli::Exit->Nil)-instance-method","html_id":"on_exit(name=nil,&amp;block:Command,Cli::Exit-&gt;Nil)-instance-method","name":"on_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command, Cli::Exit -> Nil)","source_link":null,"def":{"name":"on_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__on(proc, name)\n"}},{"id":"on_initialize(name=nil,&block:Command->Nil)-instance-method","html_id":"on_initialize(name=nil,&amp;block:Command-&gt;Nil)-instance-method","name":"on_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command -> Nil)","source_link":null,"def":{"name":"on_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command) do\n  block.call(_1)\nend\nappend_callback_for_initialize__on(proc, name)\n"}},{"id":"on_initialize(proc:::Proc(Command,Nil))-instance-method","html_id":"on_initialize(proc:::Proc(Command,Nil))-instance-method","name":"on_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"args_string":"(proc : ::Proc(Command, Nil))","source_link":null,"def":{"name":"on_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__on(proc, nil)"}},{"id":"on_initialize(name,proc:::Proc(Command,Nil))-instance-method","html_id":"on_initialize(name,proc:::Proc(Command,Nil))-instance-method","name":"on_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"args_string":"(name, proc : ::Proc(Command, Nil))","source_link":null,"def":{"name":"on_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__on(proc, name)"}},{"id":"run_callbacks_for_exit(*args,&)-instance-method","html_id":"run_callbacks_for_exit(*args,&amp;)-instance-method","name":"run_callbacks_for_exit","doc":"Invokes all callbacks of the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Invokes all callbacks of the exit group.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, &)","source_link":null,"def":{"name":"run_callbacks_for_exit","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"results = renew_callback_results_for_exit\nrun_callbacks_for_exit__before(results, self, *args)\nrun_callbacks_for_exit__around(results, self, *args)\nrun_callbacks_for_exit__on(results, self, *args)\nresult = yield results\nrun_callbacks_for_exit__around(results, self, *args)\nrun_callbacks_for_exit__after(results, self, *args)\nresult\n"}},{"id":"run_callbacks_for_initialize(*args,&)-instance-method","html_id":"run_callbacks_for_initialize(*args,&amp;)-instance-method","name":"run_callbacks_for_initialize","doc":"Invokes all callbacks of the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Invokes all callbacks of the initialize group.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, &)","source_link":null,"def":{"name":"run_callbacks_for_initialize","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"results = renew_callback_results_for_initialize\nrun_callbacks_for_initialize__before(results, self, *args)\nrun_callbacks_for_initialize__around(results, self, *args)\nrun_callbacks_for_initialize__on(results, self, *args)\nresult = yield results\nrun_callbacks_for_initialize__around(results, self, *args)\nrun_callbacks_for_initialize__after(results, self, *args)\nresult\n"}}],"macros":[],"types":[{"html_id":"github.com/andrewc910/contrive/Command/Help","path":"Command/Help.html","kind":"class","full_name":"Command::Help","name":"Help","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/cli/commands/command.cr","line_number":3,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/command.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Command","kind":"class","full_name":"Command","name":"Command"},"doc":"Configures help message attributes for the `Command` class.\n\nThis class is automatically defined by the Crystal CLI library.","summary":"<p>Configures help message attributes for the <code><a href=\"../Command.html\">Command</a></code> class.</p>","class_methods":[{"id":"caption(s:String)-class-method","html_id":"caption(s:String)-class-method","name":"caption","doc":"Sets the caption.","summary":"<p>Sets the caption.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/command.cr#L3","def":{"name":"caption","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Command.__klass.caption = s"}},{"id":"footer(s:String)-class-method","html_id":"footer(s:String)-class-method","name":"footer","doc":"Sets the footer.","summary":"<p>Sets the footer.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/command.cr#L3","def":{"name":"footer","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Command.__klass.footer = s"}},{"id":"header(s:String)-class-method","html_id":"header(s:String)-class-method","name":"header","doc":"Sets the header.","summary":"<p>Sets the header.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/command.cr#L3","def":{"name":"header","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Command.__klass.header = s"}},{"id":"title(s:String)-class-method","html_id":"title(s:String)-class-method","name":"title","doc":"Sets the title.","summary":"<p>Sets the title.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/command.cr#L3","def":{"name":"title","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Command.__klass.title = s"}},{"id":"unparsed_args(s)-class-method","html_id":"unparsed_args(s)-class-method","name":"unparsed_args","doc":"Sets the string for unparsed arguments.","summary":"<p>Sets the string for unparsed arguments.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/command.cr#L3","def":{"name":"unparsed_args","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Command.__klass.unparsed_args = s"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/andrewc910/contrive/Command/Options","path":"Command/Options.html","kind":"class","full_name":"Command::Options","name":"Options","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Cli/OptionModel","kind":"class","full_name":"Cli::OptionModel","name":"OptionModel"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Cli/OptionModel","kind":"class","full_name":"Cli::OptionModel","name":"OptionModel"},{"html_id":"github.com/andrewc910/contrive/Optarg/Model","kind":"class","full_name":"Optarg::Model","name":"Model"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/cli/commands/command.cr","line_number":3,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/command.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/MainCommand/Generate/Options","kind":"class","full_name":"Contrive::CLI::MainCommand::Generate::Options","name":"Options"}],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Command","kind":"class","full_name":"Command","name":"Command"},"doc":"The dedicated Cli::OptionModel subclass for the `Command` class.\n\nThis class is automatically defined by the Crystal CLI library.","summary":"<p>The dedicated Cli::OptionModel subclass for the <code><a href=\"../Command.html\">Command</a></code> class.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/andrewc910/contrive/Command/Options/Parser","path":"Command/Options/Parser.html","kind":"class","full_name":"Command::Options::Parser","name":"Parser","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Cli/OptionModel/Parser","kind":"class","full_name":"Cli::OptionModel::Parser","name":"Parser"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Cli/OptionModel/Parser","kind":"class","full_name":"Cli::OptionModel::Parser","name":"Parser"},{"html_id":"github.com/andrewc910/contrive/Optarg/Parser","kind":"class","full_name":"Optarg::Parser","name":"Parser"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/MainCommand/Generate/Options/Parser","kind":"class","full_name":"Contrive::CLI::MainCommand::Generate::Options::Parser","name":"Parser"}],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Command/Options","kind":"class","full_name":"Command::Options","name":"Options"},"doc":"The dedicated Optarg::Parser subclass for the `Options` class.\n\nThis class is automatically defined by the optarg library.","summary":"<p>The dedicated Optarg::Parser subclass for the <code><a href=\"../../Command/Options.html\">Options</a></code> class.</p>","class_methods":[{"id":"after_validate(name,proc:::Proc(Command::Options::Parser,Command::Options,Nil))-class-method","html_id":"after_validate(name,proc:::Proc(Command::Options::Parser,Command::Options,Nil))-class-method","name":"after_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Command::Options::Parser, Command::Options, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, name)"}},{"id":"after_validate(proc:::Proc(Command::Options::Parser,Command::Options,Nil))-class-method","html_id":"after_validate(proc:::Proc(Command::Options::Parser,Command::Options,Nil))-class-method","name":"after_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Command::Options::Parser, Command::Options, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, nil)"}},{"id":"after_validate(name=nil,&block:Command::Options::Parser,Command::Options->Nil)-class-method","html_id":"after_validate(name=nil,&amp;block:Command::Options::Parser,Command::Options-&gt;Nil)-class-method","name":"after_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command::Options::Parser, Command::Options -> Nil)","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command::Options::Parser, ::Command::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command::Options::Parser, _2 : ::Command::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__after(proc, name)\n"}},{"id":"around_validate(name,proc:::Proc(Command::Options::Parser,Command::Options,Nil))-class-method","html_id":"around_validate(name,proc:::Proc(Command::Options::Parser,Command::Options,Nil))-class-method","name":"around_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Command::Options::Parser, Command::Options, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, name)"}},{"id":"around_validate(proc:::Proc(Command::Options::Parser,Command::Options,Nil))-class-method","html_id":"around_validate(proc:::Proc(Command::Options::Parser,Command::Options,Nil))-class-method","name":"around_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Command::Options::Parser, Command::Options, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, nil)"}},{"id":"around_validate(name=nil,&block:Command::Options::Parser,Command::Options->Nil)-class-method","html_id":"around_validate(name=nil,&amp;block:Command::Options::Parser,Command::Options-&gt;Nil)-class-method","name":"around_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command::Options::Parser, Command::Options -> Nil)","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command::Options::Parser, ::Command::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command::Options::Parser, _2 : ::Command::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__around(proc, name)\n"}},{"id":"before_validate(name,proc:::Proc(Command::Options::Parser,Command::Options,Nil))-class-method","html_id":"before_validate(name,proc:::Proc(Command::Options::Parser,Command::Options,Nil))-class-method","name":"before_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Command::Options::Parser, Command::Options, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, name)"}},{"id":"before_validate(proc:::Proc(Command::Options::Parser,Command::Options,Nil))-class-method","html_id":"before_validate(proc:::Proc(Command::Options::Parser,Command::Options,Nil))-class-method","name":"before_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Command::Options::Parser, Command::Options, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, nil)"}},{"id":"before_validate(name=nil,&block:Command::Options::Parser,Command::Options->Nil)-class-method","html_id":"before_validate(name=nil,&amp;block:Command::Options::Parser,Command::Options-&gt;Nil)-class-method","name":"before_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command::Options::Parser, Command::Options -> Nil)","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command::Options::Parser, ::Command::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command::Options::Parser, _2 : ::Command::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__before(proc, name)\n"}},{"id":"on_validate(name,proc:::Proc(Command::Options::Parser,Command::Options,Nil))-class-method","html_id":"on_validate(name,proc:::Proc(Command::Options::Parser,Command::Options,Nil))-class-method","name":"on_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Command::Options::Parser, Command::Options, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, name)"}},{"id":"on_validate(proc:::Proc(Command::Options::Parser,Command::Options,Nil))-class-method","html_id":"on_validate(proc:::Proc(Command::Options::Parser,Command::Options,Nil))-class-method","name":"on_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Command::Options::Parser, Command::Options, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, nil)"}},{"id":"on_validate(name=nil,&block:Command::Options::Parser,Command::Options->Nil)-class-method","html_id":"on_validate(name=nil,&amp;block:Command::Options::Parser,Command::Options-&gt;Nil)-class-method","name":"on_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command::Options::Parser, Command::Options -> Nil)","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command::Options::Parser, ::Command::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command::Options::Parser, _2 : ::Command::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__on(proc, name)\n"}}],"constructors":[],"instance_methods":[{"id":"after_validate(name,proc:::Proc(Command::Options::Parser,Command::Options,Nil))-instance-method","html_id":"after_validate(name,proc:::Proc(Command::Options::Parser,Command::Options,Nil))-instance-method","name":"after_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Command::Options::Parser, Command::Options, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, name)"}},{"id":"after_validate(proc:::Proc(Command::Options::Parser,Command::Options,Nil))-instance-method","html_id":"after_validate(proc:::Proc(Command::Options::Parser,Command::Options,Nil))-instance-method","name":"after_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Command::Options::Parser, Command::Options, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, nil)"}},{"id":"after_validate(name=nil,&block:Command::Options::Parser,Command::Options->Nil)-instance-method","html_id":"after_validate(name=nil,&amp;block:Command::Options::Parser,Command::Options-&gt;Nil)-instance-method","name":"after_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command::Options::Parser, Command::Options -> Nil)","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command::Options::Parser, ::Command::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command::Options::Parser, _2 : ::Command::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__after(proc, name)\n"}},{"id":"around_validate(name,proc:::Proc(Command::Options::Parser,Command::Options,Nil))-instance-method","html_id":"around_validate(name,proc:::Proc(Command::Options::Parser,Command::Options,Nil))-instance-method","name":"around_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Command::Options::Parser, Command::Options, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, name)"}},{"id":"around_validate(proc:::Proc(Command::Options::Parser,Command::Options,Nil))-instance-method","html_id":"around_validate(proc:::Proc(Command::Options::Parser,Command::Options,Nil))-instance-method","name":"around_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Command::Options::Parser, Command::Options, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, nil)"}},{"id":"around_validate(name=nil,&block:Command::Options::Parser,Command::Options->Nil)-instance-method","html_id":"around_validate(name=nil,&amp;block:Command::Options::Parser,Command::Options-&gt;Nil)-instance-method","name":"around_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command::Options::Parser, Command::Options -> Nil)","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command::Options::Parser, ::Command::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command::Options::Parser, _2 : ::Command::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__around(proc, name)\n"}},{"id":"before_validate(name,proc:::Proc(Command::Options::Parser,Command::Options,Nil))-instance-method","html_id":"before_validate(name,proc:::Proc(Command::Options::Parser,Command::Options,Nil))-instance-method","name":"before_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Command::Options::Parser, Command::Options, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, name)"}},{"id":"before_validate(proc:::Proc(Command::Options::Parser,Command::Options,Nil))-instance-method","html_id":"before_validate(proc:::Proc(Command::Options::Parser,Command::Options,Nil))-instance-method","name":"before_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Command::Options::Parser, Command::Options, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, nil)"}},{"id":"before_validate(name=nil,&block:Command::Options::Parser,Command::Options->Nil)-instance-method","html_id":"before_validate(name=nil,&amp;block:Command::Options::Parser,Command::Options-&gt;Nil)-instance-method","name":"before_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command::Options::Parser, Command::Options -> Nil)","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command::Options::Parser, ::Command::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command::Options::Parser, _2 : ::Command::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__before(proc, name)\n"}},{"id":"callback_results_for_validate-instance-method","html_id":"callback_results_for_validate-instance-method","name":"callback_results_for_validate","doc":"Returns callback results of the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Returns callback results of the validate group.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"callback_results_for_validate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@callback_results[\"validate\"]? || (@callback_results[\"validate\"] = ::Callback::ResultSet(::Nil).new)).as(::Callback::ResultSet(::Nil))"}},{"id":"data:Command::Options-instance-method","html_id":"data:Command::Options-instance-method","name":"data","doc":"Returns a target model instance.","summary":"<p>Returns a target model instance.</p>","abstract":false,"args":[],"args_string":" : Command::Options","source_link":null,"def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Command::Options","visibility":"Public","body":"@data.as(::Command::Options)"}},{"id":"on_validate(name,proc:::Proc(Command::Options::Parser,Command::Options,Nil))-instance-method","html_id":"on_validate(name,proc:::Proc(Command::Options::Parser,Command::Options,Nil))-instance-method","name":"on_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Command::Options::Parser, Command::Options, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, name)"}},{"id":"on_validate(proc:::Proc(Command::Options::Parser,Command::Options,Nil))-instance-method","html_id":"on_validate(proc:::Proc(Command::Options::Parser,Command::Options,Nil))-instance-method","name":"on_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Command::Options::Parser, Command::Options, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Command::Options::Parser, ::Command::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, nil)"}},{"id":"on_validate(name=nil,&block:Command::Options::Parser,Command::Options->Nil)-instance-method","html_id":"on_validate(name=nil,&amp;block:Command::Options::Parser,Command::Options-&gt;Nil)-instance-method","name":"on_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Command::Options::Parser, Command::Options -> Nil)","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Command::Options::Parser, ::Command::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Command::Options::Parser, _2 : ::Command::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__on(proc, name)\n"}},{"id":"run_callbacks_for_validate(*args,&)-instance-method","html_id":"run_callbacks_for_validate(*args,&amp;)-instance-method","name":"run_callbacks_for_validate","doc":"Invokes all callbacks of the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Invokes all callbacks of the validate group.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, &)","source_link":null,"def":{"name":"run_callbacks_for_validate","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"results = renew_callback_results_for_validate\nrun_callbacks_for_validate__before(results, self, *args)\nrun_callbacks_for_validate__around(results, self, *args)\nrun_callbacks_for_validate__on(results, self, *args)\nresult = yield results\nrun_callbacks_for_validate__around(results, self, *args)\nrun_callbacks_for_validate__after(results, self, *args)\nresult\n"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/andrewc910/contrive/Contrive","path":"Contrive.html","kind":"module","full_name":"Contrive","name":"Contrive","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"contrive/configuration.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/configuration.cr"},{"filename":"contrive.cr","line_number":4,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive.cr"},{"filename":"contrive/version.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/version.cr"},{"filename":"contrive/omniauth/configuration.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr"},{"filename":"contrive/controllers/contrive_controller.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/controllers/contrive_controller.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"TODO: Write documentation for `Contrive`","summary":"<p><span class=\"flag orange\">TODO</span>  Write documentation for <code><a href=\"Contrive.html\">Contrive</a></code></p>","class_methods":[{"id":"configuration-class-method","html_id":"configuration-class-method","name":"configuration","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive.cr#L7","def":{"name":"configuration","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@configuration"}},{"id":"setup(&)-class-method","html_id":"setup(&amp;)-class-method","name":"setup","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive.cr#L11","def":{"name":"setup","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"yield @@configuration"}}],"constructors":[],"instance_methods":[],"macros":[{"id":"testing(class_name)-macro","html_id":"testing(class_name)-macro","name":"testing","doc":null,"summary":null,"abstract":false,"args":[{"name":"class_name","doc":null,"default_value":"","external_name":"class_name","restriction":""}],"args_string":"(class_name)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/controllers/contrive_controller.cr#L2","def":{"name":"testing","args":[{"name":"class_name","doc":null,"default_value":"","external_name":"class_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    class ContriveController < \n{{ class_name }}\n\n    \nend\n  \n"}}],"types":[{"html_id":"github.com/andrewc910/contrive/Contrive/Authenticable","path":"Contrive/Authenticable.html","kind":"module","full_name":"Contrive::Authenticable","name":"Authenticable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"contrive/authenticable/validations/granite.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/authenticable/validations/granite.cr"},{"filename":"contrive/authenticable/authenticable.cr","line_number":5,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/authenticable/authenticable.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive","kind":"module","full_name":"Contrive","name":"Contrive"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"authenticate(password:String)-instance-method","html_id":"authenticate(password:String)-instance-method","name":"authenticate","doc":null,"summary":null,"abstract":false,"args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"}],"args_string":"(password : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/authenticable/authenticable.cr#L33","def":{"name":"authenticate","args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(bcrypt_pass = password_hash) ? bcrypt_pass.verify(password) : false"}},{"id":"confirmed?-instance-method","html_id":"confirmed?-instance-method","name":"confirmed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/authenticable/authenticable.cr#L8","def":{"name":"confirmed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@confirmed"}},{"id":"password=(password:String)-instance-method","html_id":"password=(password:String)-instance-method","name":"password=","doc":null,"summary":null,"abstract":false,"args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"}],"args_string":"(password : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/authenticable/authenticable.cr#L16","def":{"name":"password=","args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@new_password = password\nself.password_digest = (Crypto::Bcrypt::Password.create(password, cost: 10)).to_s\n"}},{"id":"password_changed?-instance-method","html_id":"password_changed?-instance-method","name":"password_changed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/authenticable/authenticable.cr#L25","def":{"name":"password_changed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_password ? true : false"}},{"id":"password_hash-instance-method","html_id":"password_hash-instance-method","name":"password_hash","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/authenticable/authenticable.cr#L21","def":{"name":"password_hash","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(hash = password_digest) ? Crypto::Bcrypt::Password.new(hash) : nil"}},{"id":"password_to_short?-instance-method","html_id":"password_to_short?-instance-method","name":"password_to_short?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/authenticable/authenticable.cr#L12","def":{"name":"password_to_short?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"password_changed? ? valid_password_size? : true"}},{"id":"valid_password_size?-instance-method","html_id":"valid_password_size?-instance-method","name":"valid_password_size?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/authenticable/authenticable.cr#L29","def":{"name":"valid_password_size?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(pass = new_password) ? pass.size >= 8 : false"}}],"macros":[],"types":[{"html_id":"github.com/andrewc910/contrive/Contrive/Authenticable/Validations","path":"Contrive/Authenticable/Validations.html","kind":"module","full_name":"Contrive::Authenticable::Validations","name":"Validations","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"contrive/authenticable/validations/granite.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/authenticable/validations/granite.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/Authenticable","kind":"module","full_name":"Contrive::Authenticable","name":"Authenticable"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/andrewc910/contrive/Contrive/Authenticable/Validations/Granite","path":"Contrive/Authenticable/Validations/Granite.html","kind":"module","full_name":"Contrive::Authenticable::Validations::Granite","name":"Granite","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"contrive/authenticable/validations/granite.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/authenticable/validations/granite.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/Authenticable/Validations","kind":"module","full_name":"Contrive::Authenticable::Validations","name":"Validations"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"with_validations-macro","html_id":"with_validations-macro","name":"with_validations","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/authenticable/validations/granite.cr#L2","def":{"name":"with_validations","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    validate :email, \"is required\", ->(user : User) do\n      (\nemail = user.email) ? !email.empty? : false\n    \nend\n\n    validate :email, \"already in use\", ->(user : User) do\n      \nexisting = User.find_by \nemail: user.email\n      !existing || \nexisting.id == user.id\n    \nend\n\n    validate :password, \"is too short\", ->(user : User) do\n      user.password_changed? ? user.valid_password_size? : true\n    \nend\n  \n"}}],"types":[]},{"html_id":"github.com/andrewc910/contrive/Contrive/Authenticable/Validations/Jennifer","path":"Contrive/Authenticable/Validations/Jennifer.html","kind":"module","full_name":"Contrive::Authenticable::Validations::Jennifer","name":"Jennifer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"contrive/authenticable/validations/jennifer.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/authenticable/validations/jennifer.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/Authenticable/Validations","kind":"module","full_name":"Contrive::Authenticable::Validations","name":"Validations"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"with_validations-macro","html_id":"with_validations-macro","name":"with_validations","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/authenticable/validations/jennifer.cr#L2","def":{"name":"with_validations","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    validates_presence :email\n    validates_uniqueness :email\n    validates_with_method :password_to_short?\n  "}}],"types":[]}]}]},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI","path":"Contrive/CLI.html","kind":"module","full_name":"Contrive::CLI","name":"CLI","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"contrive/cli/config.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/config.cr"},{"filename":"contrive/cli/generators/field.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/field.cr"},{"filename":"contrive/cli/generators/generator.cr","line_number":5,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr"},{"filename":"contrive/cli/generators/auth.cr","line_number":4,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr"},{"filename":"contrive/cli/generators/confirm.cr","line_number":4,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/confirm.cr"},{"filename":"contrive/cli/generators/omniauth.cr","line_number":4,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/omniauth.cr"},{"filename":"contrive/cli/generators.cr","line_number":9,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr"},{"filename":"contrive/cli/commands/generate.cr","line_number":3,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr"},{"filename":"contrive/cli/commands.cr","line_number":6,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive","kind":"module","full_name":"Contrive","name":"Contrive"},"doc":null,"summary":null,"class_methods":[{"id":"color-class-method","html_id":"color-class-method","name":"color","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr#L4","def":{"name":"color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@color"}},{"id":"color=(color)-class-method","html_id":"color=(color)-class-method","name":"color=","doc":null,"summary":null,"abstract":false,"args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":""}],"args_string":"(color)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr#L4","def":{"name":"color=","args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@color = color"}},{"id":"config-class-method","html_id":"config-class-method","name":"config","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/config.cr#L2","def":{"name":"config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Config.new"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Auth","path":"Contrive/CLI/Auth.html","kind":"class","full_name":"Contrive::CLI::Auth","name":"Auth","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Generator","kind":"class","full_name":"Contrive::CLI::Generator","name":"Generator"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Generator","kind":"class","full_name":"Contrive::CLI::Generator","name":"Generator"},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers","kind":"module","full_name":"Contrive::CLI::Helpers","name":"Helpers"},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers/Jennifer/Migration","kind":"module","full_name":"Contrive::CLI::Helpers::Jennifer::Migration","name":"Migration"},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers/Migration","kind":"module","full_name":"Contrive::CLI::Helpers::Migration","name":"Migration"},{"html_id":"github.com/andrewc910/contrive/Teeplate/FileTree","kind":"class","full_name":"Teeplate::FileTree","name":"FileTree"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/cli/generators/auth.cr","line_number":5,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI","kind":"module","full_name":"Contrive::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,fields,orm:String)-class-method","html_id":"new(name,fields,orm:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"","external_name":"orm","restriction":"String"}],"args_string":"(name, fields, orm : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L12","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"","external_name":"orm","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, fields, orm)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"____collect_files(____files)-instance-method","html_id":"____collect_files(____files)-instance-method","name":"____collect_files","doc":":nodoc:","summary":"<p>:nodoc:</p>","abstract":false,"args":[{"name":"____files","doc":null,"default_value":"","external_name":"____files","restriction":""}],"args_string":"(____files)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L7","def":{"name":"____collect_files","args":[{"name":"____files","doc":null,"default_value":"","external_name":"____files","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io = IO::Memory.new\n__ecr0(io)\n____files << (::Teeplate::StringData.new(\"src/views/layouts/+_session.slang\", io.to_s, File::Permissions.from_value(420)))\nio = IO::Memory.new\n__ecr2(io)\n____files << (::Teeplate::StringData.new(\"src/views/layouts/+_session.ecr\", io.to_s, File::Permissions.from_value(420)))\nio = IO::Memory.new\n__ecr4(io)\n____files << (::Teeplate::StringData.new(\"src/views/#{@name}/show.slang\", io.to_s, File::Permissions.from_value(420)))\nio = IO::Memory.new\n__ecr6(io)\n____files << (::Teeplate::StringData.new(\"src/views/#{@name}/edit.ecr\", io.to_s, File::Permissions.from_value(420)))\nio = IO::Memory.new\n__ecr8(io)\n____files << (::Teeplate::StringData.new(\"src/views/#{@name}/new.ecr\", io.to_s, File::Permissions.from_value(420)))\nio = IO::Memory.new\n__ecr10(io)\n____files << (::Teeplate::StringData.new(\"src/views/#{@name}/new.slang\", io.to_s, File::Permissions.from_value(420)))\nio = IO::Memory.new\n__ecr12(io)\n____files << (::Teeplate::StringData.new(\"src/views/#{@name}/edit.slang\", io.to_s, File::Permissions.from_value(420)))\nio = IO::Memory.new\n__ecr14(io)\n____files << (::Teeplate::StringData.new(\"src/views/#{@name}/show.ecr\", io.to_s, File::Permissions.from_value(420)))\nio = IO::Memory.new\n__ecr16(io)\n____files << (::Teeplate::StringData.new(\"src/views/session/new.ecr\", io.to_s, File::Permissions.from_value(420)))\nio = IO::Memory.new\n__ecr18(io)\n____files << (::Teeplate::StringData.new(\"src/views/session/new.slang\", io.to_s, File::Permissions.from_value(420)))\nio = IO::Memory.new\n__ecr20(io)\n____files << (::Teeplate::StringData.new(\"src/controllers/session_controller.cr\", io.to_s, File::Permissions.from_value(420)))\nio = IO::Memory.new\n__ecr22(io)\n____files << (::Teeplate::StringData.new(\"src/controllers/#{@name}_controller.cr\", io.to_s, File::Permissions.from_value(420)))\nio = IO::Memory.new\n__ecr24(io)\n____files << (::Teeplate::StringData.new(\"src/pipes/authenticate.cr\", io.to_s, File::Permissions.from_value(420)))\nio = IO::Memory.new\n__ecr26(io)\n____files << (::Teeplate::StringData.new(\"src/models/#{@name}.cr\", io.to_s, File::Permissions.from_value(420)))\nio = IO::Memory.new\n__ecr28(io)\n____files << (::Teeplate::StringData.new(\"spec/controllers/spec_helper.cr\", io.to_s, File::Permissions.from_value(420)))\nio = IO::Memory.new\n__ecr30(io)\n____files << (::Teeplate::StringData.new(\"spec/models/#{@name}_spec.cr\", io.to_s, File::Permissions.from_value(420)))\nio = IO::Memory.new\n__ecr32(io)\n____files << (::Teeplate::StringData.new(\"spec/models/spec_helper.cr\", io.to_s, File::Permissions.from_value(420)))\nio = IO::Memory.new\n__ecr34(io)\n____files << (::Teeplate::StringData.new(\"config/initializers/contrive.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr36(io)\n____files << (::Teeplate::StringData.new(\"db/migrations/#{@timestamp}_create_#{@name}.#{@migration_extension}\", io.to_s, File::Permissions.from_value(420)))\nio = IO::Memory.new\n__ecr38(io)\n____files << (::Teeplate::StringData.new(\"db/+seeds.cr\", io.to_s, File::Permissions.from_value(420)))\n"}},{"id":"__ecr0(____io)-instance-method","html_id":"__ecr0(____io)-instance-method","name":"__ecr0","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L7","def":{"name":"__ecr0","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/auth/src/views/layouts/+_session.slang.ecr\", \"____io\")"}},{"id":"__ecr10(____io)-instance-method","html_id":"__ecr10(____io)-instance-method","name":"__ecr10","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L7","def":{"name":"__ecr10","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/auth/src/views/{{name}}/new.slang.ecr\", \"____io\")"}},{"id":"__ecr12(____io)-instance-method","html_id":"__ecr12(____io)-instance-method","name":"__ecr12","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L7","def":{"name":"__ecr12","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/auth/src/views/{{name}}/edit.slang.ecr\", \"____io\")"}},{"id":"__ecr14(____io)-instance-method","html_id":"__ecr14(____io)-instance-method","name":"__ecr14","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L7","def":{"name":"__ecr14","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/auth/src/views/{{name}}/show.ecr.ecr\", \"____io\")"}},{"id":"__ecr16(____io)-instance-method","html_id":"__ecr16(____io)-instance-method","name":"__ecr16","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L7","def":{"name":"__ecr16","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/auth/src/views/session/new.ecr.ecr\", \"____io\")"}},{"id":"__ecr18(____io)-instance-method","html_id":"__ecr18(____io)-instance-method","name":"__ecr18","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L7","def":{"name":"__ecr18","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/auth/src/views/session/new.slang.ecr\", \"____io\")"}},{"id":"__ecr2(____io)-instance-method","html_id":"__ecr2(____io)-instance-method","name":"__ecr2","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L7","def":{"name":"__ecr2","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/auth/src/views/layouts/+_session.ecr.ecr\", \"____io\")"}},{"id":"__ecr20(____io)-instance-method","html_id":"__ecr20(____io)-instance-method","name":"__ecr20","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L7","def":{"name":"__ecr20","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/auth/src/controllers/session_controller.cr.ecr\", \"____io\")"}},{"id":"__ecr22(____io)-instance-method","html_id":"__ecr22(____io)-instance-method","name":"__ecr22","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L7","def":{"name":"__ecr22","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/auth/src/controllers/{{name}}_controller.cr.ecr\", \"____io\")"}},{"id":"__ecr24(____io)-instance-method","html_id":"__ecr24(____io)-instance-method","name":"__ecr24","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L7","def":{"name":"__ecr24","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/auth/src/pipes/authenticate.cr.ecr\", \"____io\")"}},{"id":"__ecr26(____io)-instance-method","html_id":"__ecr26(____io)-instance-method","name":"__ecr26","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L7","def":{"name":"__ecr26","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/auth/src/models/{{name}}.cr.ecr\", \"____io\")"}},{"id":"__ecr28(____io)-instance-method","html_id":"__ecr28(____io)-instance-method","name":"__ecr28","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L7","def":{"name":"__ecr28","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/auth/spec/controllers/spec_helper.cr.ecr\", \"____io\")"}},{"id":"__ecr30(____io)-instance-method","html_id":"__ecr30(____io)-instance-method","name":"__ecr30","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L7","def":{"name":"__ecr30","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/auth/spec/models/{{name}}_spec.cr.ecr\", \"____io\")"}},{"id":"__ecr32(____io)-instance-method","html_id":"__ecr32(____io)-instance-method","name":"__ecr32","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L7","def":{"name":"__ecr32","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/auth/spec/models/spec_helper.cr.ecr\", \"____io\")"}},{"id":"__ecr34(____io)-instance-method","html_id":"__ecr34(____io)-instance-method","name":"__ecr34","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L7","def":{"name":"__ecr34","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/auth/config/initializers/contrive.cr.ecr\", \"____io\")"}},{"id":"__ecr36(____io)-instance-method","html_id":"__ecr36(____io)-instance-method","name":"__ecr36","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L7","def":{"name":"__ecr36","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/auth/db/migrations/{{timestamp}}_create_{{name}}.{{migration_extension}}.ecr\", \"____io\")"}},{"id":"__ecr38(____io)-instance-method","html_id":"__ecr38(____io)-instance-method","name":"__ecr38","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L7","def":{"name":"__ecr38","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/auth/db/+seeds.cr.ecr\", \"____io\")"}},{"id":"__ecr4(____io)-instance-method","html_id":"__ecr4(____io)-instance-method","name":"__ecr4","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L7","def":{"name":"__ecr4","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/auth/src/views/{{name}}/show.slang.ecr\", \"____io\")"}},{"id":"__ecr6(____io)-instance-method","html_id":"__ecr6(____io)-instance-method","name":"__ecr6","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L7","def":{"name":"__ecr6","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/auth/src/views/{{name}}/edit.ecr.ecr\", \"____io\")"}},{"id":"__ecr8(____io)-instance-method","html_id":"__ecr8(____io)-instance-method","name":"__ecr8","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L7","def":{"name":"__ecr8","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/auth/src/views/{{name}}/new.ecr.ecr\", \"____io\")"}},{"id":"fields:Array(Field)-instance-method","html_id":"fields:Array(Field)-instance-method","name":"fields","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Field)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L9","def":{"name":"fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Field)","visibility":"Public","body":"@fields"}},{"id":"fields=(fields:Array(Field))-instance-method","html_id":"fields=(fields:Array(Field))-instance-method","name":"fields=","doc":null,"summary":null,"abstract":false,"args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"args_string":"(fields : Array(Field))","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L9","def":{"name":"fields=","args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fields = fields"}},{"id":"migration_extension:String-instance-method","html_id":"migration_extension:String-instance-method","name":"migration_extension","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L10","def":{"name":"migration_extension","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@migration_extension"}},{"id":"pre_render(directory,**args)-instance-method","html_id":"pre_render(directory,**args)-instance-method","name":"pre_render","doc":null,"summary":null,"abstract":false,"args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"args_string":"(directory, **args)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/auth.cr#L19","def":{"name":"pre_render","args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_plugs\ninherit_plug(:web, :auth)\nadd_routes\nadd_dependencies\ninject_application_controller_methods\n"}}],"macros":[],"types":[]},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Config","path":"Contrive/CLI/Config.html","kind":"class","full_name":"Contrive::CLI::Config","name":"Config","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/cli/config.cr","line_number":6,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/config.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DEFAULT_NAME","name":"DEFAULT_NAME","value":"\"[process_name]\"","doc":null,"summary":null},{"id":"SHARD_YML","name":"SHARD_YML","value":"\"shard.yml\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI","kind":"module","full_name":"Contrive::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[{"id":"get_name-class-method","html_id":"get_name-class-method","name":"get_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/config.cr#L28","def":{"name":"get_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ((File.exists?(SHARD_YML)) && (yaml = YAML.parse(File.read(SHARD_YML)))) && (name = yaml[\"name\"]?)\n  name.as_s\nelse\n  DEFAULT_NAME\nend"}}],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\nif instance.responds_to?(:finalize)\n  GC.add_finalizer(instance)\nend\ninstance\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/config.cr#L17","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"database:String-instance-method","html_id":"database:String-instance-method","name":"database","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"database","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@database"}},{"id":"database=(_database:String)-instance-method","html_id":"database=(_database:String)-instance-method","name":"database=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_database","doc":null,"default_value":"","external_name":"_database","restriction":"String"}],"args_string":"(_database : String)","source_link":null,"def":{"name":"database=","args":[{"name":"_database","doc":null,"default_value":"","external_name":"_database","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@database = _database"}},{"id":"language:String-instance-method","html_id":"language:String-instance-method","name":"language","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"language","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@language"}},{"id":"language=(_language:String)-instance-method","html_id":"language=(_language:String)-instance-method","name":"language=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_language","doc":null,"default_value":"","external_name":"_language","restriction":"String"}],"args_string":"(_language : String)","source_link":null,"def":{"name":"language=","args":[{"name":"_language","doc":null,"default_value":"","external_name":"_language","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@language = _language"}},{"id":"model:String-instance-method","html_id":"model:String-instance-method","name":"model","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"model","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@model"}},{"id":"model=(_model:String)-instance-method","html_id":"model=(_model:String)-instance-method","name":"model=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_model","doc":null,"default_value":"","external_name":"_model","restriction":"String"}],"args_string":"(_model : String)","source_link":null,"def":{"name":"model=","args":[{"name":"_model","doc":null,"default_value":"","external_name":"_model","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@model = _model"}},{"id":"recipe:String?-instance-method","html_id":"recipe:String?-instance-method","name":"recipe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"recipe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@recipe"}},{"id":"recipe=(_recipe:String?)-instance-method","html_id":"recipe=(_recipe:String?)-instance-method","name":"recipe=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_recipe","doc":null,"default_value":"","external_name":"_recipe","restriction":"String | Nil"}],"args_string":"(_recipe : String?)","source_link":null,"def":{"name":"recipe=","args":[{"name":"_recipe","doc":null,"default_value":"","external_name":"_recipe","restriction":"String | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@recipe = _recipe"}},{"id":"recipe_source:String?-instance-method","html_id":"recipe_source:String?-instance-method","name":"recipe_source","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"recipe_source","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@recipe_source"}},{"id":"recipe_source=(_recipe_source:String?)-instance-method","html_id":"recipe_source=(_recipe_source:String?)-instance-method","name":"recipe_source=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_recipe_source","doc":null,"default_value":"","external_name":"_recipe_source","restriction":"String | Nil"}],"args_string":"(_recipe_source : String?)","source_link":null,"def":{"name":"recipe_source=","args":[{"name":"_recipe_source","doc":null,"default_value":"","external_name":"_recipe_source","restriction":"String | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@recipe_source = _recipe_source"}},{"id":"to_yaml(__temp_38:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_38:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_38","doc":null,"default_value":"","external_name":"__temp_38","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_38 : YAML::Nodes::Builder)","source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_38","doc":null,"default_value":"","external_name":"__temp_38","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_38.mapping(reference: self) do\n  _database = @database\n  if _database.nil?\n  else\n    \"database\".to_yaml(__temp_38)\n    _database.to_yaml(__temp_38)\n  end\n  _language = @language\n  if _language.nil?\n  else\n    \"language\".to_yaml(__temp_38)\n    _language.to_yaml(__temp_38)\n  end\n  _model = @model\n  if _model.nil?\n  else\n    \"model\".to_yaml(__temp_38)\n    _model.to_yaml(__temp_38)\n  end\n  _recipe = @recipe\n  if _recipe.nil?\n  else\n    \"recipe\".to_yaml(__temp_38)\n    _recipe.to_yaml(__temp_38)\n  end\n  _recipe_source = @recipe_source\n  if _recipe_source.nil?\n  else\n    \"recipe_source\".to_yaml(__temp_38)\n    _recipe_source.to_yaml(__temp_38)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Confirm","path":"Contrive/CLI/Confirm.html","kind":"class","full_name":"Contrive::CLI::Confirm","name":"Confirm","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Generator","kind":"class","full_name":"Contrive::CLI::Generator","name":"Generator"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Generator","kind":"class","full_name":"Contrive::CLI::Generator","name":"Generator"},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers","kind":"module","full_name":"Contrive::CLI::Helpers","name":"Helpers"},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers/Jennifer/Migration","kind":"module","full_name":"Contrive::CLI::Helpers::Jennifer::Migration","name":"Migration"},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers/Migration","kind":"module","full_name":"Contrive::CLI::Helpers::Migration","name":"Migration"},{"html_id":"github.com/andrewc910/contrive/Teeplate/FileTree","kind":"class","full_name":"Teeplate::FileTree","name":"FileTree"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/cli/generators/confirm.cr","line_number":5,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/confirm.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI","kind":"module","full_name":"Contrive::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,fields,orm:String)-class-method","html_id":"new(name,fields,orm:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"","external_name":"orm","restriction":"String"}],"args_string":"(name, fields, orm : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/confirm.cr#L12","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"","external_name":"orm","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, fields, orm)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"____collect_files(____files)-instance-method","html_id":"____collect_files(____files)-instance-method","name":"____collect_files","doc":":nodoc:","summary":"<p>:nodoc:</p>","abstract":false,"args":[{"name":"____files","doc":null,"default_value":"","external_name":"____files","restriction":""}],"args_string":"(____files)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/confirm.cr#L7","def":{"name":"____collect_files","args":[{"name":"____files","doc":null,"default_value":"","external_name":"____files","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io = IO::Memory.new\n__ecr0(io)\n____files << (::Teeplate::StringData.new(\"src/controllers/registration_controller.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr2(io)\n____files << (::Teeplate::StringData.new(\"src/mailers/confirmation_mailer.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr4(io)\n____files << (::Teeplate::StringData.new(\"src/mailers/confirmation_mailer.text.ecr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr6(io)\n____files << (::Teeplate::StringData.new(\"db/migrations/#{@timestamp}_add_confirmable_to_#{@name}.#{@migration_extension}\", io.to_s, File::Permissions.from_value(420)))\n"}},{"id":"__ecr0(____io)-instance-method","html_id":"__ecr0(____io)-instance-method","name":"__ecr0","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/confirm.cr#L7","def":{"name":"__ecr0","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/confirm/src/controllers/registration_controller.cr.ecr\", \"____io\")"}},{"id":"__ecr2(____io)-instance-method","html_id":"__ecr2(____io)-instance-method","name":"__ecr2","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/confirm.cr#L7","def":{"name":"__ecr2","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/confirm/src/mailers/confirmation_mailer.cr.ecr\", \"____io\")"}},{"id":"__ecr4(____io)-instance-method","html_id":"__ecr4(____io)-instance-method","name":"__ecr4","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/confirm.cr#L7","def":{"name":"__ecr4","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/confirm/src/mailers/confirmation_mailer.text.ecr.ecr\", \"____io\")"}},{"id":"__ecr6(____io)-instance-method","html_id":"__ecr6(____io)-instance-method","name":"__ecr6","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/confirm.cr#L7","def":{"name":"__ecr6","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/confirm/db/migrations/{{timestamp}}_add_confirmable_to_{{name}}.{{migration_extension}}.ecr\", \"____io\")"}},{"id":"fields:Array(Field)-instance-method","html_id":"fields:Array(Field)-instance-method","name":"fields","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Field)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/confirm.cr#L9","def":{"name":"fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Field)","visibility":"Public","body":"@fields"}},{"id":"fields=(fields:Array(Field))-instance-method","html_id":"fields=(fields:Array(Field))-instance-method","name":"fields=","doc":null,"summary":null,"abstract":false,"args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"args_string":"(fields : Array(Field))","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/confirm.cr#L9","def":{"name":"fields=","args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fields = fields"}},{"id":"migration_extension:String-instance-method","html_id":"migration_extension:String-instance-method","name":"migration_extension","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/confirm.cr#L10","def":{"name":"migration_extension","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@migration_extension"}},{"id":"pre_render(directory,**args)-instance-method","html_id":"pre_render(directory,**args)-instance-method","name":"pre_render","doc":null,"summary":null,"abstract":false,"args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"args_string":"(directory, **args)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/confirm.cr#L19","def":{"name":"pre_render","args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_routes\ninject_require_confirmable\n"}}],"macros":[],"types":[]},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Field","path":"Contrive/CLI/Field.html","kind":"class","full_name":"Contrive::CLI::Field","name":"Field","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/cli/generators/field.cr","line_number":2,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/field.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"TYPE_MAPPING","name":"TYPE_MAPPING","value":"{common: {string: [\"string\", \"String\", \"VARCHAR\"], text: [\"text\", \"String\", \"TEXT\"], int: [\"integer\", \"Int32\", \"INT\"], int32: [\"integer\", \"Int32\", \"INT\"], integer: [\"integer\", \"Int32\", \"INT\"], int64: [\"bigint\", \"Int64\", \"BIGINT\"], bigint: [\"bigint\", \"Int64\", \"BIGINT\"], float: [\"float\", \"Float64\", \"FLOAT\"], float64: [\"real\", \"Float64\", \"FLOAT\"], real: [\"real\", \"Float64\", \"REAL\"], bool: [\"boolean\", \"Bool\", \"BOOL\"], boolean: [\"boolean\", \"Bool\", \"BOOL\"], date: [\"date\", \"Time\", \"DATE\"], time: [\"time\", \"Time\", \"TIMESTAMP\"], timestamp: [\"time\", \"Time\", \"TIMESTAMP\"], password: [\"password\", \"String\", \"VARCHAR\"], ref: [\"reference\", \"Int64\", \"BIGINT\"], belongs_to: [\"reference\", \"Int64\", \"BIGINT\"], reference: [\"reference\", \"Int64\", \"BIGINT\"], references: [\"reference\", \"Int64\", \"BIGINT\"]}, mysql: {string: [\"string\", \"String\", \"VARCHAR(255)\"], float: [\"float\", \"Float32\", \"FLOAT\"], password: [\"password\", \"String\", \"VARCHAR(255)\"], time: [\"time\", \"Time\", \"TIMESTAMP NULL\"], timestamp: [\"time\", \"Time\", \"TIMESTAMP NULL\"]}, sqlite: {int: [\"bigint\", \"Int64\", \"INT\"], int32: [\"bigint\", \"Int64\", \"INT\"], integer: [\"bigint\", \"Int64\", \"INT\"], int64: [\"bigint\", \"Int64\", \"INT\"], bigint: [\"bigint\", \"Int64\", \"INT\"], bool: [\"boolean\", \"Int64\", \"BOOL\"], boolean: [\"boolean\", \"Int64\", \"BOOL\"], date: [\"date_as_var\", \"String\", \"DATE\"], time: [\"time_as_var\", \"String\", \"TIMESTAMP\"], timestamp: [\"time_as_var\", \"String\", \"TIMESTAMP\"]}}","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI","kind":"module","full_name":"Contrive::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(field,hidden=false,database=&quot;pg&quot;)-class-method","html_id":"new(field,hidden=false,database=&amp;quot;pg&amp;quot;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"hidden","doc":null,"default_value":"false","external_name":"hidden","restriction":""},{"name":"database","doc":null,"default_value":"\"pg\"","external_name":"database","restriction":""}],"args_string":"(field, hidden = <span class=\"n\">false</span>, database = <span class=\"s\">&quot;pg&quot;</span>)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/field.cr#L54","def":{"name":"new","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"hidden","doc":null,"default_value":"false","external_name":"hidden","restriction":""},{"name":"database","doc":null,"default_value":"\"pg\"","external_name":"database","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(field, hidden, database)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"class_name-instance-method","html_id":"class_name-instance-method","name":"class_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/field.cr#L91","def":{"name":"class_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Inflector.classify(@name)"}},{"id":"cr_type:String-instance-method","html_id":"cr_type:String-instance-method","name":"cr_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/field.cr#L49","def":{"name":"cr_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@cr_type"}},{"id":"cr_type=(cr_type:String)-instance-method","html_id":"cr_type=(cr_type:String)-instance-method","name":"cr_type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"cr_type","doc":null,"default_value":"","external_name":"cr_type","restriction":"String"}],"args_string":"(cr_type : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/field.cr#L49","def":{"name":"cr_type=","args":[{"name":"cr_type","doc":null,"default_value":"","external_name":"cr_type","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cr_type = cr_type"}},{"id":"database:String-instance-method","html_id":"database:String-instance-method","name":"database","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/field.cr#L52","def":{"name":"database","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@database"}},{"id":"database=(database:String)-instance-method","html_id":"database=(database:String)-instance-method","name":"database=","doc":null,"summary":null,"abstract":false,"args":[{"name":"database","doc":null,"default_value":"","external_name":"database","restriction":"String"}],"args_string":"(database : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/field.cr#L52","def":{"name":"database=","args":[{"name":"database","doc":null,"default_value":"","external_name":"database","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@database = database"}},{"id":"db_type:String-instance-method","html_id":"db_type:String-instance-method","name":"db_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/field.cr#L50","def":{"name":"db_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@db_type"}},{"id":"db_type=(db_type:String)-instance-method","html_id":"db_type=(db_type:String)-instance-method","name":"db_type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"db_type","doc":null,"default_value":"","external_name":"db_type","restriction":"String"}],"args_string":"(db_type : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/field.cr#L50","def":{"name":"db_type=","args":[{"name":"db_type","doc":null,"default_value":"","external_name":"db_type","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@db_type = db_type"}},{"id":"hidden:Bool-instance-method","html_id":"hidden:Bool-instance-method","name":"hidden","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/field.cr#L51","def":{"name":"hidden","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@hidden"}},{"id":"hidden=(hidden:Bool)-instance-method","html_id":"hidden=(hidden:Bool)-instance-method","name":"hidden=","doc":null,"summary":null,"abstract":false,"args":[{"name":"hidden","doc":null,"default_value":"","external_name":"hidden","restriction":"Bool"}],"args_string":"(hidden : Bool)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/field.cr#L51","def":{"name":"hidden=","args":[{"name":"hidden","doc":null,"default_value":"","external_name":"hidden","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@hidden = hidden"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/field.cr#L47","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"name=(name:String)-instance-method","html_id":"name=(name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/field.cr#L47","def":{"name":"name=","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = name"}},{"id":"reference?-instance-method","html_id":"reference?-instance-method","name":"reference?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/field.cr#L87","def":{"name":"reference?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.type == \"reference\""}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/field.cr#L75","def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  json.field(\"name\", name)\n  json.field(\"type\", type)\n  json.field(\"cr_type\", cr_type)\n  json.field(\"db_type\", db_type)\n  json.field(\"hidden\", hidden)\n  json.field(\"database\", database)\nend\njson.to_s\n"}},{"id":"type:String-instance-method","html_id":"type:String-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/field.cr#L48","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@type"}},{"id":"type=(type:String)-instance-method","html_id":"type=(type:String)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"}],"args_string":"(type : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/field.cr#L48","def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type = type"}},{"id":"type_mapping(type=&quot;string&quot;)-instance-method","html_id":"type_mapping(type=&amp;quot;string&amp;quot;)-instance-method","name":"type_mapping","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"\"string\"","external_name":"type","restriction":""}],"args_string":"(type = <span class=\"s\">&quot;string&quot;</span>)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/field.cr#L62","def":{"name":"type_mapping","args":[{"name":"type","doc":null,"default_value":"\"string\"","external_name":"type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if type_mapping = TYPE_MAPPING[@database]?\n  if mapping = type_mapping[@type]?\n    return mapping\n  end\nend\nif mapping = TYPE_MAPPING[\"common\"][@type]?\n  mapping\nelse\n  raise(\"type #{@type} not available\")\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Generator","path":"Contrive/CLI/Generator.html","kind":"class","full_name":"Contrive::CLI::Generator","name":"Generator","abstract":true,"superclass":{"html_id":"github.com/andrewc910/contrive/Teeplate/FileTree","kind":"class","full_name":"Teeplate::FileTree","name":"FileTree"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers","kind":"module","full_name":"Contrive::CLI::Helpers","name":"Helpers"},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers/Jennifer/Migration","kind":"module","full_name":"Contrive::CLI::Helpers::Jennifer::Migration","name":"Migration"},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers/Migration","kind":"module","full_name":"Contrive::CLI::Helpers::Migration","name":"Migration"},{"html_id":"github.com/andrewc910/contrive/Teeplate/FileTree","kind":"class","full_name":"Teeplate::FileTree","name":"FileTree"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/cli/generators/generator.cr","line_number":6,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers","kind":"module","full_name":"Contrive::CLI::Helpers","name":"Helpers"},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers/Jennifer/Migration","kind":"module","full_name":"Contrive::CLI::Helpers::Jennifer::Migration","name":"Migration"},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers/Migration","kind":"module","full_name":"Contrive::CLI::Helpers::Migration","name":"Migration"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Auth","kind":"class","full_name":"Contrive::CLI::Auth","name":"Auth"},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Confirm","kind":"class","full_name":"Contrive::CLI::Confirm","name":"Confirm"},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Omniauth","kind":"class","full_name":"Contrive::CLI::Omniauth","name":"Omniauth"}],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI","kind":"module","full_name":"Contrive::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[{"id":"registered_commands-class-method","html_id":"registered_commands-class-method","name":"registered_commands","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr#L7","def":{"name":"registered_commands","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@registered_commands"}}],"constructors":[{"id":"new(name,params)-class-method","html_id":"new(name,params)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"args_string":"(name, params)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr#L24","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, params)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_timestamp_fields-instance-method","html_id":"add_timestamp_fields-instance-method","name":"add_timestamp_fields","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr#L48","def":{"name":"add_timestamp_fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fields = @fields + ([\"created_at:time\", \"updated_at:time\"] of ::String).map do |f|\n  Field.new(f, hidden: true, database: config.database)\nend"}},{"id":"config:Contrive::CLI::Config-instance-method","html_id":"config:Contrive::CLI::Config-instance-method","name":"config","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Contrive::CLI::Config","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr#L20","def":{"name":"config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Contrive::CLI::Config","visibility":"Public","body":"@config"}},{"id":"config=(config:Contrive::CLI::Config)-instance-method","html_id":"config=(config:Contrive::CLI::Config)-instance-method","name":"config=","doc":null,"summary":null,"abstract":false,"args":[{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":"Contrive::CLI::Config"}],"args_string":"(config : Contrive::CLI::Config)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr#L20","def":{"name":"config=","args":[{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":"Contrive::CLI::Config"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@config = config"}},{"id":"fields:Array(Field)-instance-method","html_id":"fields:Array(Field)-instance-method","name":"fields","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Field)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr#L18","def":{"name":"fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Field)","visibility":"Public","body":"@fields"}},{"id":"fields=(fields:Array(Field))-instance-method","html_id":"fields=(fields:Array(Field))-instance-method","name":"fields=","doc":null,"summary":null,"abstract":false,"args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"args_string":"(fields : Array(Field))","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr#L18","def":{"name":"fields=","args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fields = fields"}},{"id":"fields_hash:Hash(String,String)-instance-method","html_id":"fields_hash:Hash(String,String)-instance-method","name":"fields_hash","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr#L19","def":{"name":"fields_hash","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"@fields_hash"}},{"id":"fields_hash=(fields_hash:Hash(String,String))-instance-method","html_id":"fields_hash=(fields_hash:Hash(String,String))-instance-method","name":"fields_hash=","doc":null,"summary":null,"abstract":false,"args":[{"name":"fields_hash","doc":null,"default_value":"","external_name":"fields_hash","restriction":"Hash(String, String)"}],"args_string":"(fields_hash : Hash(String, String))","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr#L19","def":{"name":"fields_hash=","args":[{"name":"fields_hash","doc":null,"default_value":"","external_name":"fields_hash","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fields_hash = fields_hash"}},{"id":"filter(entries)-instance-method","html_id":"filter(entries)-instance-method","name":"filter","doc":"Override to filter files rendered","summary":"<p>Override to filter files rendered</p>","abstract":false,"args":[{"name":"entries","doc":null,"default_value":"","external_name":"entries","restriction":""}],"args_string":"(entries)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr#L32","def":{"name":"filter","args":[{"name":"entries","doc":null,"default_value":"","external_name":"entries","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"entries.reject do |entry|\n  (entry.path.includes?(\"src/views\")) && (!(entry.path.includes?(\"#{config.language}\")))\nend"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr#L17","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"name=(name:String)-instance-method","html_id":"name=(name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr#L17","def":{"name":"name=","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = name"}},{"id":"post_render(directory,**args)-instance-method","html_id":"post_render(directory,**args)-instance-method","name":"post_render","doc":null,"summary":null,"abstract":false,"args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"args_string":"(directory, **args)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr#L45","def":{"name":"post_render","args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"pre_render(directory,**args)-instance-method","html_id":"pre_render(directory,**args)-instance-method","name":"pre_render","doc":null,"summary":null,"abstract":false,"args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"args_string":"(directory, **args)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr#L42","def":{"name":"pre_render","args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"render(directory,**args)-instance-method","html_id":"render(directory,**args)-instance-method","name":"render","doc":"Renders all collected file entries.\n\nFor more information about the arguments, see `Renderer`.","summary":"<p>Renders all collected file entries.</p>","abstract":false,"args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"args_string":"(directory, **args)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr#L36","def":{"name":"render","args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pre_render(directory, **args)\nsuper(directory, **args)\npost_render(directory, **args)\n"}},{"id":"table_name:String?-instance-method","html_id":"table_name:String?-instance-method","name":"table_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr#L21","def":{"name":"table_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@table_name"}},{"id":"table_name=(table_name:String?)-instance-method","html_id":"table_name=(table_name:String?)-instance-method","name":"table_name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"String | ::Nil"}],"args_string":"(table_name : String?)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr#L21","def":{"name":"table_name=","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@table_name = table_name"}},{"id":"timestamp:String-instance-method","html_id":"timestamp:String-instance-method","name":"timestamp","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr#L22","def":{"name":"timestamp","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@timestamp"}},{"id":"timestamp=(timestamp:String)-instance-method","html_id":"timestamp=(timestamp:String)-instance-method","name":"timestamp=","doc":null,"summary":null,"abstract":false,"args":[{"name":"timestamp","doc":null,"default_value":"","external_name":"timestamp","restriction":"String"}],"args_string":"(timestamp : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr#L22","def":{"name":"timestamp=","args":[{"name":"timestamp","doc":null,"default_value":"","external_name":"timestamp","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@timestamp = timestamp"}}],"macros":[{"id":"command(name)-macro","html_id":"command(name)-macro","name":"command","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/generator.cr#L9","def":{"name":"command","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      Contrive::CLI::Generator.registered_commands[\n{{ name.id.stringify }}\n] = \n{{ @type.id }}\n\n    \n"}}],"types":[]},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Generators","path":"Contrive/CLI/Generators.html","kind":"class","full_name":"Contrive::CLI::Generators","name":"Generators","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/cli/generators.cr","line_number":10,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"KEYWORDS","name":"KEYWORDS","value":"{\"abstract\", \"do\", \"if\", \"nil?\", \"select\", \"union\", \"alias\", \"else\", \"in\", \"of\", \"self\", \"unless\", \"as\", \"elsif\", \"include\", \"out\", \"sizeof\", \"until\", \"instance_sizeof\", \"as?\", \"pointerof\", \"struct\", \"end\", \"verbatim\", \"asm\", \"ensure\", \"is_a?\", \"private\", \"super\", \"begin\", \"enum\", \"when\", \"lib\", \"protected\", \"then\", \"while\", \"break\", \"extend\", \"macro\", \"require\", \"true\", \"with\", \"case\", \"false\", \"module\", \"rescue\", \"type\", \"yield\", \"class\", \"for\", \"next\", \"responds_to?\", \"typeof\", \"def\", \"fun\", \"nil\", \"return\", \"uninitialized\", \"adler32\", \"argumenterror\", \"array\", \"atomic\", \"base64\", \"benchmark\", \"bigdecimal\", \"bigfloat\", \"bigint\", \"bigrational\", \"bitarray\", \"bool\", \"box\", \"bytes\", \"channel\", \"char\", \"class\", \"colorize\", \"comparable\", \"complex\", \"concurrent\", \"concurrentexecutionexception\", \"crc32\", \"crypto\", \"crystal\", \"csv\", \"debug\", \"deprecated\", \"deque\", \"digest\", \"dir\", \"divisionbyzeroerror\", \"dl\", \"ecr\", \"enum\", \"enumerable\", \"env\", \"errno\", \"exception\", \"fiber\", \"file\", \"fileutils\", \"flags\", \"flate\", \"float\", \"float32\", \"float64\", \"gc\", \"gzip\", \"hash\", \"html\", \"http\", \"indexable\", \"indexerror\", \"ini\", \"int\", \"int128\", \"int16\", \"int32\", \"int64\", \"int8\", \"invalidbigdecimalexception\", \"invalidbytesequenceerror\", \"io\", \"ipsocket\", \"iterable\", \"iterator\", \"json\", \"keyerror\", \"levenshtein\", \"link\", \"llvm\", \"logger\", \"markdown\", \"math\", \"mime\", \"mutex\", \"namedtuple\", \"nil\", \"nilassertionerror\", \"notimplementederror\", \"number\", \"oauth\", \"oauth2\", \"object\", \"openssl\", \"optionparser\", \"overflowerror\", \"partialcomparable\", \"path\", \"pointer\", \"prettyprint\", \"proc\", \"process\", \"random\", \"range\", \"readline\", \"reference\", \"reflect\", \"regex\", \"semanticversion\", \"set\", \"signal\", \"slice\", \"socket\", \"spec\", \"staticarray\", \"string\", \"stringpool\", \"stringscanner\", \"struct\", \"symbol\", \"system\", \"tcpserver\", \"tcpsocket\", \"termios\", \"time\", \"tuple\", \"typecasterror\", \"udpsocket\", \"uint128\", \"uint16\", \"uint32\", \"uint64\", \"uint8\", \"union\", \"unixserver\", \"unixsocket\", \"uri\", \"uuid\", \"valist\", \"value\", \"weakref\", \"xml\", \"yaml\", \"zip\", \"zlib\"}","doc":"Keywords from https://github.com/crystal-lang/crystal/wiki/Crystal-for-Rubyists#available-keywords as of May 6th, 2019","summary":"<p>Keywords from https://github.com/crystal-lang/crystal/wiki/Crystal-for-Rubyists#available-keywords as of May 6th, 2019</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI","kind":"module","full_name":"Contrive::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name:String,directory:String,fields=[]ofString,orm:String=&quot;jennifer&quot;)-class-method","html_id":"new(name:String,directory:String,fields=[]ofString,orm:String=&amp;quot;jennifer&amp;quot;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":"String"},{"name":"fields","doc":null,"default_value":"[] of String","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"\"jennifer\"","external_name":"orm","restriction":"String"}],"args_string":"(name : String, directory : String, fields = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>, orm : String = <span class=\"s\">&quot;jennifer&quot;</span>)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr#L215","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":"String"},{"name":"fields","doc":null,"default_value":"[] of String","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"\"jennifer\"","external_name":"orm","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, directory, fields, orm)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"directory:String-instance-method","html_id":"directory:String-instance-method","name":"directory","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr#L12","def":{"name":"directory","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@directory"}},{"id":"error(msg)-instance-method","html_id":"error(msg)-instance-method","name":"error","doc":null,"summary":null,"abstract":false,"args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"args_string":"(msg)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr#L266","def":{"name":"error","args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"log = Logger.new(STDOUT)\nlog.error(msg)\n"}},{"id":"fields:Array(String)-instance-method","html_id":"fields:Array(String)-instance-method","name":"fields","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr#L13","def":{"name":"fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@fields"}},{"id":"generate(command:String,options)-instance-method","html_id":"generate(command:String,options)-instance-method","name":"generate","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""}],"args_string":"(command : String, options)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr#L245","def":{"name":"generate","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if gen_class = Contrive::CLI::Generator.registered_commands[command]?\n  info(\"Generating #{gen_class}\")\n  (gen_class.new(name, fields, orm)).render(directory, list: true, interactive: !options.assume_yes?, color: options.no_color?)\nelse\n  log = Logger.new(STDOUT)\n  log.info(\"Generator for #{command} not found\")\nend"}},{"id":"info(msg)-instance-method","html_id":"info(msg)-instance-method","name":"info","doc":null,"summary":null,"abstract":false,"args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"args_string":"(msg)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr#L260","def":{"name":"info","args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"log = Logger.new(STDOUT)\nlog.info(msg)\n"}},{"id":"model-instance-method","html_id":"model-instance-method","name":"model","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr#L256","def":{"name":"model","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"CLI.config.model"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr#L11","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"orm:String-instance-method","html_id":"orm:String-instance-method","name":"orm","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr#L14","def":{"name":"orm","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@orm"}}],"macros":[],"types":[]},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers","path":"Contrive/CLI/Helpers.html","kind":"module","full_name":"Contrive::CLI::Helpers","name":"Helpers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"contrive/cli/helpers/helpers.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/helpers/helpers.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Generator","kind":"class","full_name":"Contrive::CLI::Generator","name":"Generator"}],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI","kind":"module","full_name":"Contrive::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[{"id":"run(command,wait=true,shell=true)-class-method","html_id":"run(command,wait=true,shell=true)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"wait","doc":null,"default_value":"true","external_name":"wait","restriction":""},{"name":"shell","doc":null,"default_value":"true","external_name":"shell","restriction":""}],"args_string":"(command, wait = <span class=\"n\">true</span>, shell = <span class=\"n\">true</span>)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/helpers/helpers.cr#L77","def":{"name":"run","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"wait","doc":null,"default_value":"true","external_name":"wait","restriction":""},{"name":"shell","doc":null,"default_value":"true","external_name":"shell","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  if wait\n    Process.run(command, shell: shell, output: Process::Redirect::Inherit, error: Process::Redirect::Inherit)\n  else\n    Process.new(command, shell: shell, output: Process::Redirect::Inherit, error: Process::Redirect::Inherit)\n  end\nrescue ex : Errno\n  ex\nend"}}],"constructors":[],"instance_methods":[{"id":"add_dependencies(dependencies)-instance-method","html_id":"add_dependencies(dependencies)-instance-method","name":"add_dependencies","doc":null,"summary":null,"abstract":false,"args":[{"name":"dependencies","doc":null,"default_value":"","external_name":"dependencies","restriction":""}],"args_string":"(dependencies)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/helpers/helpers.cr#L63","def":{"name":"add_dependencies","args":[{"name":"dependencies","doc":null,"default_value":"","external_name":"dependencies","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"app_file_path = \"./config/application.cr\"\ninjection_marker = \"# Start Generator Dependencies: Don't modify.\"\napplication = File.read(app_file_path)\ndeps = (dependencies.split(\"\\n\")).reject do |d|\n  application.includes?(d)\nend\nreplacement = \"#{injection_marker}\\n#{deps.join(\"\\n\")}\"\nif deps.size > 0\n  File.write(app_file_path, application.gsub(injection_marker, replacement))\nend\n"}},{"id":"add_plugs(pipeline,plug)-instance-method","html_id":"add_plugs(pipeline,plug)-instance-method","name":"add_plugs","doc":null,"summary":null,"abstract":false,"args":[{"name":"pipeline","doc":null,"default_value":"","external_name":"pipeline","restriction":""},{"name":"plug","doc":null,"default_value":"","external_name":"plug","restriction":""}],"args_string":"(pipeline, plug)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/helpers/helpers.cr#L31","def":{"name":"add_plugs","args":[{"name":"pipeline","doc":null,"default_value":"","external_name":"pipeline","restriction":""},{"name":"plug","doc":null,"default_value":"","external_name":"plug","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"routes_file = File.read(\"./config/routes.cr\")\nif routes_file.includes?(plug)\n  return\nend\npipes = routes_file.match(/pipeline :#{pipeline.to_s}(.*?) do(.+?)end/m)\nif pipes\n  replacement = \"pipeline :#{pipeline.to_s}#{pipes[1]} do\\n  #{pipes[2]}\\n  #{plug}\\nend\"\n  File.write(\"./config/routes.cr\", routes_file.gsub(pipes[0], replacement))\nelse\n  web_pipes = routes_file.match(/pipeline :web(.*?) do(.+?)end/m)\n  if web_pipes\n    replacement = \"pipeline :web#{web_pipes[1]} do\\n  #{web_pipes[2]}\\nend\\n\\npipeline :#{pipeline.to_s} do\\n  #{plug}\\nend\"\n    File.write(\"./config/routes.cr\", routes_file.gsub(web_pipes[0], replacement))\n  end\nend\nsystem(\"crystal tool format ./config/routes.cr\")\n"}},{"id":"add_routes(pipeline,route)-instance-method","html_id":"add_routes(pipeline,route)-instance-method","name":"add_routes","doc":null,"summary":null,"abstract":false,"args":[{"name":"pipeline","doc":null,"default_value":"","external_name":"pipeline","restriction":""},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":""}],"args_string":"(pipeline, route)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/helpers/helpers.cr#L2","def":{"name":"add_routes","args":[{"name":"pipeline","doc":null,"default_value":"","external_name":"pipeline","restriction":""},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"routes_file = File.read(\"./config/routes.cr\")\nroutes = routes_file.match(/routes :#{pipeline.to_s}(.*?) do(.+?)end/m)\nif routes\n  replacement = \"  routes :#{pipeline.to_s}#{routes[1]} do\\n    #{routes[2]}\\n    #{route}\\n  end\"\n  File.write(\"./config/routes.cr\", routes_file.gsub(routes[0], replacement))\nelse\n  web_routes = routes_file.match(/routes :web(.*?) do(.+?)end/m)\n  if web_routes\n    replacement = \"routes :web#{web_routes[1]} do\\n  #{web_routes[2]}\\nend\\n\\nroutes :#{pipeline.to_s} do\\n  #{route}\\nend\"\n    File.write(\"./config/routes.cr\", routes_file.gsub(web_routes[0], replacement))\n  end\nend\nsystem(\"crystal tool format ./config/routes.cr\")\n"}}],"macros":[],"types":[{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers/Jennifer","path":"Contrive/CLI/Helpers/Jennifer.html","kind":"module","full_name":"Contrive::CLI::Helpers::Jennifer","name":"Jennifer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"contrive/cli/helpers/jennifer/migration.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/helpers/jennifer/migration.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers","kind":"module","full_name":"Contrive::CLI::Helpers","name":"Helpers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers/Jennifer/Migration","path":"Contrive/CLI/Helpers/Jennifer/Migration.html","kind":"module","full_name":"Contrive::CLI::Helpers::Jennifer::Migration","name":"Migration","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"contrive/cli/helpers/jennifer/migration.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/helpers/jennifer/migration.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Generator","kind":"class","full_name":"Contrive::CLI::Generator","name":"Generator"}],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers/Jennifer","kind":"module","full_name":"Contrive::CLI::Helpers::Jennifer","name":"Jennifer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"create_jennifer_heading-instance-method","html_id":"create_jennifer_heading-instance-method","name":"create_jennifer_heading","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/helpers/jennifer/migration.cr#L2","def":{"name":"create_jennifer_heading","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"\""}}],"macros":[],"types":[]}]},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers/Migration","path":"Contrive/CLI/Helpers/Migration.html","kind":"module","full_name":"Contrive::CLI::Helpers::Migration","name":"Migration","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"contrive/cli/helpers/granite/migration.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/helpers/granite/migration.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Generator","kind":"class","full_name":"Contrive::CLI::Generator","name":"Generator"}],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers","kind":"module","full_name":"Contrive::CLI::Helpers","name":"Helpers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"create_index_for_reference_fields_sql-instance-method","html_id":"create_index_for_reference_fields_sql-instance-method","name":"create_index_for_reference_fields_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/helpers/granite/migration.cr#L2","def":{"name":"create_index_for_reference_fields_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sql_statements = reference_fields.map do |field|\n  create_index_for_reference_field_sql(field)\nend\nsql_statements.join(\"\\n\")\n"}},{"id":"create_table_sql-instance-method","html_id":"create_table_sql-instance-method","name":"create_table_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/helpers/granite/migration.cr#L9","def":{"name":"create_table_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"CREATE TABLE #{name_plural} (\\n  #{primary_key},\\n  #{create_table_fields_sql}\\n);\""}},{"id":"drop_table_sql-instance-method","html_id":"drop_table_sql-instance-method","name":"drop_table_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/helpers/granite/migration.cr#L18","def":{"name":"drop_table_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"DROP TABLE IF EXISTS #{name_plural};\""}},{"id":"primary_key-instance-method","html_id":"primary_key-instance-method","name":"primary_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/helpers/granite/migration.cr#L22","def":{"name":"primary_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case CLI.config.database\nwhen \"pg\"\n  \"id BIGSERIAL PRIMARY KEY\"\nwhen \"mysql\"\n  \"id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY\"\nwhen \"sqlite\"\n  \"id INTEGER NOT NULL PRIMARY KEY\"\nelse\n  \"id INTEGER NOT NULL PRIMARY KEY\"\nend"}}],"macros":[],"types":[]}]},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/MainCommand","path":"Contrive/CLI/MainCommand.html","kind":"class","full_name":"Contrive::CLI::MainCommand","name":"MainCommand","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Cli/Supercommand","kind":"class","full_name":"Cli::Supercommand","name":"Supercommand"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Cli/Supercommand","kind":"class","full_name":"Cli::Supercommand","name":"Supercommand"},{"html_id":"github.com/andrewc910/contrive/Cli/CommandBase","kind":"class","full_name":"Cli::CommandBase","name":"CommandBase"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/cli/commands/generate.cr","line_number":6,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr"},{"filename":"contrive/cli/commands.cr","line_number":8,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ACCEPTABLE_ORMS","name":"ACCEPTABLE_ORMS","value":"[\"g\", \"granite\", \"j\", \"jennifer\"]","doc":null,"summary":null},{"id":"ORM_FULL_NAME","name":"ORM_FULL_NAME","value":"{\"g\" => \"granite\", \"j\" => \"jennifer\"}","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI","kind":"module","full_name":"Contrive::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[{"id":"after_exit(name=nil,&block:Contrive::CLI::MainCommand,Cli::Exit->Nil)-class-method","html_id":"after_exit(name=nil,&amp;block:Contrive::CLI::MainCommand,Cli::Exit-&gt;Nil)-class-method","name":"after_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand, Cli::Exit -> Nil)","source_link":null,"def":{"name":"after_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__after(proc, name)\n"}},{"id":"after_exit(proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-class-method","html_id":"after_exit(proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-class-method","name":"after_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"after_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__after(proc, nil)"}},{"id":"after_exit(name,proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-class-method","html_id":"after_exit(name,proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-class-method","name":"after_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"after_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__after(proc, name)"}},{"id":"after_initialize(name,proc:::Proc(Contrive::CLI::MainCommand,Nil))-class-method","html_id":"after_initialize(name,proc:::Proc(Contrive::CLI::MainCommand,Nil))-class-method","name":"after_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"after_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__after(proc, name)"}},{"id":"after_initialize(proc:::Proc(Contrive::CLI::MainCommand,Nil))-class-method","html_id":"after_initialize(proc:::Proc(Contrive::CLI::MainCommand,Nil))-class-method","name":"after_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"after_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__after(proc, nil)"}},{"id":"after_initialize(name=nil,&block:Contrive::CLI::MainCommand->Nil)-class-method","html_id":"after_initialize(name=nil,&amp;block:Contrive::CLI::MainCommand-&gt;Nil)-class-method","name":"after_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand -> Nil)","source_link":null,"def":{"name":"after_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand) do\n  block.call(_1)\nend\nappend_callback_for_initialize__after(proc, name)\n"}},{"id":"around_exit(name=nil,&block:Contrive::CLI::MainCommand,Cli::Exit->Nil)-class-method","html_id":"around_exit(name=nil,&amp;block:Contrive::CLI::MainCommand,Cli::Exit-&gt;Nil)-class-method","name":"around_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand, Cli::Exit -> Nil)","source_link":null,"def":{"name":"around_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__around(proc, name)\n"}},{"id":"around_exit(proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-class-method","html_id":"around_exit(proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-class-method","name":"around_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"around_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__around(proc, nil)"}},{"id":"around_exit(name,proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-class-method","html_id":"around_exit(name,proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-class-method","name":"around_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"around_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__around(proc, name)"}},{"id":"around_initialize(name,proc:::Proc(Contrive::CLI::MainCommand,Nil))-class-method","html_id":"around_initialize(name,proc:::Proc(Contrive::CLI::MainCommand,Nil))-class-method","name":"around_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"around_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__around(proc, name)"}},{"id":"around_initialize(proc:::Proc(Contrive::CLI::MainCommand,Nil))-class-method","html_id":"around_initialize(proc:::Proc(Contrive::CLI::MainCommand,Nil))-class-method","name":"around_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"around_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__around(proc, nil)"}},{"id":"around_initialize(name=nil,&block:Contrive::CLI::MainCommand->Nil)-class-method","html_id":"around_initialize(name=nil,&amp;block:Contrive::CLI::MainCommand-&gt;Nil)-class-method","name":"around_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand -> Nil)","source_link":null,"def":{"name":"around_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand) do\n  block.call(_1)\nend\nappend_callback_for_initialize__around(proc, name)\n"}},{"id":"before_exit(name=nil,&block:Contrive::CLI::MainCommand,Cli::Exit->Nil)-class-method","html_id":"before_exit(name=nil,&amp;block:Contrive::CLI::MainCommand,Cli::Exit-&gt;Nil)-class-method","name":"before_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand, Cli::Exit -> Nil)","source_link":null,"def":{"name":"before_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__before(proc, name)\n"}},{"id":"before_exit(name,proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-class-method","html_id":"before_exit(name,proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-class-method","name":"before_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"before_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__before(proc, name)"}},{"id":"before_exit(proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-class-method","html_id":"before_exit(proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-class-method","name":"before_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"before_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__before(proc, nil)"}},{"id":"before_initialize(name,proc:::Proc(Contrive::CLI::MainCommand,Nil))-class-method","html_id":"before_initialize(name,proc:::Proc(Contrive::CLI::MainCommand,Nil))-class-method","name":"before_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"before_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__before(proc, name)"}},{"id":"before_initialize(name=nil,&block:Contrive::CLI::MainCommand->Nil)-class-method","html_id":"before_initialize(name=nil,&amp;block:Contrive::CLI::MainCommand-&gt;Nil)-class-method","name":"before_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand -> Nil)","source_link":null,"def":{"name":"before_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand) do\n  block.call(_1)\nend\nappend_callback_for_initialize__before(proc, name)\n"}},{"id":"before_initialize(proc:::Proc(Contrive::CLI::MainCommand,Nil))-class-method","html_id":"before_initialize(proc:::Proc(Contrive::CLI::MainCommand,Nil))-class-method","name":"before_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"before_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__before(proc, nil)"}},{"id":"on_exit(name,proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-class-method","html_id":"on_exit(name,proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-class-method","name":"on_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"on_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__on(proc, name)"}},{"id":"on_exit(proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-class-method","html_id":"on_exit(proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-class-method","name":"on_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"on_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__on(proc, nil)"}},{"id":"on_exit(name=nil,&block:Contrive::CLI::MainCommand,Cli::Exit->Nil)-class-method","html_id":"on_exit(name=nil,&amp;block:Contrive::CLI::MainCommand,Cli::Exit-&gt;Nil)-class-method","name":"on_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand, Cli::Exit -> Nil)","source_link":null,"def":{"name":"on_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__on(proc, name)\n"}},{"id":"on_initialize(name=nil,&block:Contrive::CLI::MainCommand->Nil)-class-method","html_id":"on_initialize(name=nil,&amp;block:Contrive::CLI::MainCommand-&gt;Nil)-class-method","name":"on_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand -> Nil)","source_link":null,"def":{"name":"on_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand) do\n  block.call(_1)\nend\nappend_callback_for_initialize__on(proc, name)\n"}},{"id":"on_initialize(proc:::Proc(Contrive::CLI::MainCommand,Nil))-class-method","html_id":"on_initialize(proc:::Proc(Contrive::CLI::MainCommand,Nil))-class-method","name":"on_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"on_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__on(proc, nil)"}},{"id":"on_initialize(name,proc:::Proc(Contrive::CLI::MainCommand,Nil))-class-method","html_id":"on_initialize(name,proc:::Proc(Contrive::CLI::MainCommand,Nil))-class-method","name":"on_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"on_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__on(proc, name)"}},{"id":"run(argv:Array(String)=[]of::String,&block:Contrive::CLI::MainCommand->)-class-method","html_id":"run(argv:Array(String)=[]of::String,&amp;block:Contrive::CLI::MainCommand-&gt;)-class-method","name":"run","doc":"Run the command.\n\nThis method is automatically defined by the Crystal CLI library.","summary":"<p>Run the command.</p>","abstract":false,"args":[{"name":"argv","doc":null,"default_value":"[] of ::String","external_name":"argv","restriction":"Array(String)"}],"args_string":"(argv : Array(String) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">::</span><span class=\"t\">String</span>, &block : Contrive::CLI::MainCommand -> )","source_link":null,"def":{"name":"run","args":[{"name":"argv","doc":null,"default_value":"[] of ::String","external_name":"argv","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand -> )"},"return_type":"","visibility":"Public","body":"__klass.contrive_cli_main_command__run(argv, &block)"}},{"id":"run(argv:Array(String))-class-method","html_id":"run(argv:Array(String))-class-method","name":"run","doc":"Run the command.\n\nThis method is automatically defined by the Crystal CLI library.","summary":"<p>Run the command.</p>","abstract":false,"args":[{"name":"argv","doc":null,"default_value":"","external_name":"argv","restriction":"Array(String)"}],"args_string":"(argv : Array(String))","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr#L6","def":{"name":"run","args":[{"name":"argv","doc":null,"default_value":"","external_name":"argv","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__klass.contrive_cli_main_command__run(argv)"}},{"id":"run(previous:Cli::CommandBase,argv:Array(String)=[]of::String)-class-method","html_id":"run(previous:Cli::CommandBase,argv:Array(String)=[]of::String)-class-method","name":"run","doc":"Run the command.\n\nThis method is automatically defined by the Crystal CLI library.","summary":"<p>Run the command.</p>","abstract":false,"args":[{"name":"previous","doc":null,"default_value":"","external_name":"previous","restriction":"::Cli::CommandBase"},{"name":"argv","doc":null,"default_value":"[] of ::String","external_name":"argv","restriction":"Array(String)"}],"args_string":"(previous : Cli::CommandBase, argv : Array(String) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">::</span><span class=\"t\">String</span>)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr#L6","def":{"name":"run","args":[{"name":"previous","doc":null,"default_value":"","external_name":"previous","restriction":"::Cli::CommandBase"},{"name":"argv","doc":null,"default_value":"[] of ::String","external_name":"argv","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__klass.contrive_cli_main_command__run(previous, argv)"}},{"id":"run-class-method","html_id":"run-class-method","name":"run","doc":"Run the command.\n\nThis method is automatically defined by the Crystal CLI library.","summary":"<p>Run the command.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr#L6","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"run([] of ::String)"}}],"constructors":[],"instance_methods":[{"id":"after_exit(name,proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-instance-method","html_id":"after_exit(name,proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-instance-method","name":"after_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"after_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__after(proc, name)"}},{"id":"after_exit(proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-instance-method","html_id":"after_exit(proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-instance-method","name":"after_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"after_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__after(proc, nil)"}},{"id":"after_exit(name=nil,&block:Contrive::CLI::MainCommand,Cli::Exit->Nil)-instance-method","html_id":"after_exit(name=nil,&amp;block:Contrive::CLI::MainCommand,Cli::Exit-&gt;Nil)-instance-method","name":"after_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand, Cli::Exit -> Nil)","source_link":null,"def":{"name":"after_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__after(proc, name)\n"}},{"id":"after_initialize(name=nil,&block:Contrive::CLI::MainCommand->Nil)-instance-method","html_id":"after_initialize(name=nil,&amp;block:Contrive::CLI::MainCommand-&gt;Nil)-instance-method","name":"after_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand -> Nil)","source_link":null,"def":{"name":"after_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand) do\n  block.call(_1)\nend\nappend_callback_for_initialize__after(proc, name)\n"}},{"id":"after_initialize(proc:::Proc(Contrive::CLI::MainCommand,Nil))-instance-method","html_id":"after_initialize(proc:::Proc(Contrive::CLI::MainCommand,Nil))-instance-method","name":"after_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"after_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__after(proc, nil)"}},{"id":"after_initialize(name,proc:::Proc(Contrive::CLI::MainCommand,Nil))-instance-method","html_id":"after_initialize(name,proc:::Proc(Contrive::CLI::MainCommand,Nil))-instance-method","name":"after_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"after_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__after(proc, name)"}},{"id":"around_exit(proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-instance-method","html_id":"around_exit(proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-instance-method","name":"around_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"around_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__around(proc, nil)"}},{"id":"around_exit(name,proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-instance-method","html_id":"around_exit(name,proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-instance-method","name":"around_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"around_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__around(proc, name)"}},{"id":"around_exit(name=nil,&block:Contrive::CLI::MainCommand,Cli::Exit->Nil)-instance-method","html_id":"around_exit(name=nil,&amp;block:Contrive::CLI::MainCommand,Cli::Exit-&gt;Nil)-instance-method","name":"around_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand, Cli::Exit -> Nil)","source_link":null,"def":{"name":"around_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__around(proc, name)\n"}},{"id":"around_initialize(name=nil,&block:Contrive::CLI::MainCommand->Nil)-instance-method","html_id":"around_initialize(name=nil,&amp;block:Contrive::CLI::MainCommand-&gt;Nil)-instance-method","name":"around_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand -> Nil)","source_link":null,"def":{"name":"around_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand) do\n  block.call(_1)\nend\nappend_callback_for_initialize__around(proc, name)\n"}},{"id":"around_initialize(proc:::Proc(Contrive::CLI::MainCommand,Nil))-instance-method","html_id":"around_initialize(proc:::Proc(Contrive::CLI::MainCommand,Nil))-instance-method","name":"around_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"around_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__around(proc, nil)"}},{"id":"around_initialize(name,proc:::Proc(Contrive::CLI::MainCommand,Nil))-instance-method","html_id":"around_initialize(name,proc:::Proc(Contrive::CLI::MainCommand,Nil))-instance-method","name":"around_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"around_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__around(proc, name)"}},{"id":"before_exit(name,proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-instance-method","html_id":"before_exit(name,proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-instance-method","name":"before_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"before_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__before(proc, name)"}},{"id":"before_exit(proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-instance-method","html_id":"before_exit(proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-instance-method","name":"before_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"before_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__before(proc, nil)"}},{"id":"before_exit(name=nil,&block:Contrive::CLI::MainCommand,Cli::Exit->Nil)-instance-method","html_id":"before_exit(name=nil,&amp;block:Contrive::CLI::MainCommand,Cli::Exit-&gt;Nil)-instance-method","name":"before_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand, Cli::Exit -> Nil)","source_link":null,"def":{"name":"before_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__before(proc, name)\n"}},{"id":"before_initialize(name=nil,&block:Contrive::CLI::MainCommand->Nil)-instance-method","html_id":"before_initialize(name=nil,&amp;block:Contrive::CLI::MainCommand-&gt;Nil)-instance-method","name":"before_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand -> Nil)","source_link":null,"def":{"name":"before_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand) do\n  block.call(_1)\nend\nappend_callback_for_initialize__before(proc, name)\n"}},{"id":"before_initialize(proc:::Proc(Contrive::CLI::MainCommand,Nil))-instance-method","html_id":"before_initialize(proc:::Proc(Contrive::CLI::MainCommand,Nil))-instance-method","name":"before_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"before_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__before(proc, nil)"}},{"id":"before_initialize(name,proc:::Proc(Contrive::CLI::MainCommand,Nil))-instance-method","html_id":"before_initialize(name,proc:::Proc(Contrive::CLI::MainCommand,Nil))-instance-method","name":"before_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"before_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__before(proc, name)"}},{"id":"callback_results:Hash(String,Callback::ResultSet(Nil))-instance-method","html_id":"callback_results:Hash(String,Callback::ResultSet(Nil))-instance-method","name":"callback_results","doc":"Returns callback results.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Returns callback results.</p>","abstract":false,"args":[],"args_string":" : Hash(String, Callback::ResultSet(Nil))","source_link":null,"def":{"name":"callback_results","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@callback_results"}},{"id":"callback_results_for_exit-instance-method","html_id":"callback_results_for_exit-instance-method","name":"callback_results_for_exit","doc":"Returns callback results of the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Returns callback results of the exit group.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"callback_results_for_exit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@callback_results[\"exit\"]? || (@callback_results[\"exit\"] = ::Callback::ResultSet(Nil).new)).as(::Callback::ResultSet(Nil))"}},{"id":"callback_results_for_initialize-instance-method","html_id":"callback_results_for_initialize-instance-method","name":"callback_results_for_initialize","doc":"Returns callback results of the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Returns callback results of the initialize group.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"callback_results_for_initialize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@callback_results[\"initialize\"]? || (@callback_results[\"initialize\"] = ::Callback::ResultSet(::Nil).new)).as(::Callback::ResultSet(::Nil))"}},{"id":"on_exit(name,proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-instance-method","html_id":"on_exit(name,proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-instance-method","name":"on_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"on_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__on(proc, name)"}},{"id":"on_exit(proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-instance-method","html_id":"on_exit(proc:::Proc(Contrive::CLI::MainCommand,Cli::Exit,Nil))-instance-method","name":"on_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"on_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__on(proc, nil)"}},{"id":"on_exit(name=nil,&block:Contrive::CLI::MainCommand,Cli::Exit->Nil)-instance-method","html_id":"on_exit(name=nil,&amp;block:Contrive::CLI::MainCommand,Cli::Exit-&gt;Nil)-instance-method","name":"on_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand, Cli::Exit -> Nil)","source_link":null,"def":{"name":"on_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__on(proc, name)\n"}},{"id":"on_initialize(proc:::Proc(Contrive::CLI::MainCommand,Nil))-instance-method","html_id":"on_initialize(proc:::Proc(Contrive::CLI::MainCommand,Nil))-instance-method","name":"on_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"on_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__on(proc, nil)"}},{"id":"on_initialize(name,proc:::Proc(Contrive::CLI::MainCommand,Nil))-instance-method","html_id":"on_initialize(name,proc:::Proc(Contrive::CLI::MainCommand,Nil))-instance-method","name":"on_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"on_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__on(proc, name)"}},{"id":"on_initialize(name=nil,&block:Contrive::CLI::MainCommand->Nil)-instance-method","html_id":"on_initialize(name=nil,&amp;block:Contrive::CLI::MainCommand-&gt;Nil)-instance-method","name":"on_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand -> Nil)","source_link":null,"def":{"name":"on_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand) do\n  block.call(_1)\nend\nappend_callback_for_initialize__on(proc, name)\n"}},{"id":"run_callbacks_for_exit(*args,&)-instance-method","html_id":"run_callbacks_for_exit(*args,&amp;)-instance-method","name":"run_callbacks_for_exit","doc":"Invokes all callbacks of the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Invokes all callbacks of the exit group.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, &)","source_link":null,"def":{"name":"run_callbacks_for_exit","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"results = renew_callback_results_for_exit\nrun_callbacks_for_exit__before(results, self, *args)\nrun_callbacks_for_exit__around(results, self, *args)\nrun_callbacks_for_exit__on(results, self, *args)\nresult = yield results\nrun_callbacks_for_exit__around(results, self, *args)\nrun_callbacks_for_exit__after(results, self, *args)\nresult\n"}},{"id":"run_callbacks_for_initialize(*args,&)-instance-method","html_id":"run_callbacks_for_initialize(*args,&amp;)-instance-method","name":"run_callbacks_for_initialize","doc":"Invokes all callbacks of the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Invokes all callbacks of the initialize group.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, &)","source_link":null,"def":{"name":"run_callbacks_for_initialize","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"results = renew_callback_results_for_initialize\nrun_callbacks_for_initialize__before(results, self, *args)\nrun_callbacks_for_initialize__around(results, self, *args)\nrun_callbacks_for_initialize__on(results, self, *args)\nresult = yield results\nrun_callbacks_for_initialize__around(results, self, *args)\nrun_callbacks_for_initialize__after(results, self, *args)\nresult\n"}}],"macros":[],"types":[{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/MainCommand/Generate","path":"Contrive/CLI/MainCommand/Generate.html","kind":"class","full_name":"Contrive::CLI::MainCommand::Generate","name":"Generate","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Command","kind":"class","full_name":"Command","name":"Command"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Command","kind":"class","full_name":"Command","name":"Command"},{"html_id":"github.com/andrewc910/contrive/Cli/Command","kind":"class","full_name":"Cli::Command","name":"Command"},{"html_id":"github.com/andrewc910/contrive/Cli/CommandBase","kind":"class","full_name":"Cli::CommandBase","name":"CommandBase"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/cli/commands/generate.cr","line_number":13,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/MainCommand","kind":"class","full_name":"Contrive::CLI::MainCommand","name":"MainCommand"},"doc":null,"summary":null,"class_methods":[{"id":"after_exit(name=nil,&block:Contrive::CLI::MainCommand::Generate,Cli::Exit->Nil)-class-method","html_id":"after_exit(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate,Cli::Exit-&gt;Nil)-class-method","name":"after_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate, Cli::Exit -> Nil)","source_link":null,"def":{"name":"after_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__after(proc, name)\n"}},{"id":"after_exit(proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","html_id":"after_exit(proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","name":"after_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"after_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__after(proc, nil)"}},{"id":"after_exit(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","html_id":"after_exit(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","name":"after_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"after_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__after(proc, name)"}},{"id":"after_initialize(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-class-method","html_id":"after_initialize(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-class-method","name":"after_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"after_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__after(proc, name)"}},{"id":"after_initialize(proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-class-method","html_id":"after_initialize(proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-class-method","name":"after_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"after_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__after(proc, nil)"}},{"id":"after_initialize(name=nil,&block:Contrive::CLI::MainCommand::Generate->Nil)-class-method","html_id":"after_initialize(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate-&gt;Nil)-class-method","name":"after_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate -> Nil)","source_link":null,"def":{"name":"after_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate) do\n  block.call(_1)\nend\nappend_callback_for_initialize__after(proc, name)\n"}},{"id":"around_exit(name=nil,&block:Contrive::CLI::MainCommand::Generate,Cli::Exit->Nil)-class-method","html_id":"around_exit(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate,Cli::Exit-&gt;Nil)-class-method","name":"around_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate, Cli::Exit -> Nil)","source_link":null,"def":{"name":"around_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__around(proc, name)\n"}},{"id":"around_exit(proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","html_id":"around_exit(proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","name":"around_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"around_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__around(proc, nil)"}},{"id":"around_exit(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","html_id":"around_exit(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","name":"around_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"around_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__around(proc, name)"}},{"id":"around_initialize(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-class-method","html_id":"around_initialize(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-class-method","name":"around_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"around_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__around(proc, name)"}},{"id":"around_initialize(proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-class-method","html_id":"around_initialize(proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-class-method","name":"around_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"around_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__around(proc, nil)"}},{"id":"around_initialize(name=nil,&block:Contrive::CLI::MainCommand::Generate->Nil)-class-method","html_id":"around_initialize(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate-&gt;Nil)-class-method","name":"around_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate -> Nil)","source_link":null,"def":{"name":"around_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate) do\n  block.call(_1)\nend\nappend_callback_for_initialize__around(proc, name)\n"}},{"id":"before_exit(name=nil,&block:Contrive::CLI::MainCommand::Generate,Cli::Exit->Nil)-class-method","html_id":"before_exit(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate,Cli::Exit-&gt;Nil)-class-method","name":"before_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate, Cli::Exit -> Nil)","source_link":null,"def":{"name":"before_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__before(proc, name)\n"}},{"id":"before_exit(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","html_id":"before_exit(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","name":"before_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"before_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__before(proc, name)"}},{"id":"before_exit(proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","html_id":"before_exit(proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","name":"before_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"before_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__before(proc, nil)"}},{"id":"before_initialize(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-class-method","html_id":"before_initialize(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-class-method","name":"before_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"before_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__before(proc, name)"}},{"id":"before_initialize(name=nil,&block:Contrive::CLI::MainCommand::Generate->Nil)-class-method","html_id":"before_initialize(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate-&gt;Nil)-class-method","name":"before_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate -> Nil)","source_link":null,"def":{"name":"before_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate) do\n  block.call(_1)\nend\nappend_callback_for_initialize__before(proc, name)\n"}},{"id":"before_initialize(proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-class-method","html_id":"before_initialize(proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-class-method","name":"before_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"before_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__before(proc, nil)"}},{"id":"on_exit(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","html_id":"on_exit(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","name":"on_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"on_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__on(proc, name)"}},{"id":"on_exit(proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","html_id":"on_exit(proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","name":"on_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"on_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__on(proc, nil)"}},{"id":"on_exit(name=nil,&block:Contrive::CLI::MainCommand::Generate,Cli::Exit->Nil)-class-method","html_id":"on_exit(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate,Cli::Exit-&gt;Nil)-class-method","name":"on_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate, Cli::Exit -> Nil)","source_link":null,"def":{"name":"on_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__on(proc, name)\n"}},{"id":"on_initialize(name=nil,&block:Contrive::CLI::MainCommand::Generate->Nil)-class-method","html_id":"on_initialize(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate-&gt;Nil)-class-method","name":"on_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate -> Nil)","source_link":null,"def":{"name":"on_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate) do\n  block.call(_1)\nend\nappend_callback_for_initialize__on(proc, name)\n"}},{"id":"on_initialize(proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-class-method","html_id":"on_initialize(proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-class-method","name":"on_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"on_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__on(proc, nil)"}},{"id":"on_initialize(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-class-method","html_id":"on_initialize(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-class-method","name":"on_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"on_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__on(proc, name)"}},{"id":"run(argv:Array(String)=[]of::String,&block:Contrive::CLI::MainCommand::Generate->)-class-method","html_id":"run(argv:Array(String)=[]of::String,&amp;block:Contrive::CLI::MainCommand::Generate-&gt;)-class-method","name":"run","doc":"Run the command.\n\nThis method is automatically defined by the Crystal CLI library.","summary":"<p>Run the command.</p>","abstract":false,"args":[{"name":"argv","doc":null,"default_value":"[] of ::String","external_name":"argv","restriction":"Array(String)"}],"args_string":"(argv : Array(String) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">::</span><span class=\"t\">String</span>, &block : Contrive::CLI::MainCommand::Generate -> )","source_link":null,"def":{"name":"run","args":[{"name":"argv","doc":null,"default_value":"[] of ::String","external_name":"argv","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate -> )"},"return_type":"","visibility":"Public","body":"__klass.contrive_cli_main_command_generate__run(argv, &block)"}},{"id":"run(argv:Array(String))-class-method","html_id":"run(argv:Array(String))-class-method","name":"run","doc":"Run the command.\n\nThis method is automatically defined by the Crystal CLI library.","summary":"<p>Run the command.</p>","abstract":false,"args":[{"name":"argv","doc":null,"default_value":"","external_name":"argv","restriction":"Array(String)"}],"args_string":"(argv : Array(String))","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr#L13","def":{"name":"run","args":[{"name":"argv","doc":null,"default_value":"","external_name":"argv","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__klass.contrive_cli_main_command_generate__run(argv)"}},{"id":"run(previous:Cli::CommandBase,argv:Array(String)=[]of::String)-class-method","html_id":"run(previous:Cli::CommandBase,argv:Array(String)=[]of::String)-class-method","name":"run","doc":"Run the command.\n\nThis method is automatically defined by the Crystal CLI library.","summary":"<p>Run the command.</p>","abstract":false,"args":[{"name":"previous","doc":null,"default_value":"","external_name":"previous","restriction":"::Cli::CommandBase"},{"name":"argv","doc":null,"default_value":"[] of ::String","external_name":"argv","restriction":"Array(String)"}],"args_string":"(previous : Cli::CommandBase, argv : Array(String) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">::</span><span class=\"t\">String</span>)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr#L13","def":{"name":"run","args":[{"name":"previous","doc":null,"default_value":"","external_name":"previous","restriction":"::Cli::CommandBase"},{"name":"argv","doc":null,"default_value":"[] of ::String","external_name":"argv","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__klass.contrive_cli_main_command_generate__run(previous, argv)"}},{"id":"run-class-method","html_id":"run-class-method","name":"run","doc":"Run the command.\n\nThis method is automatically defined by the Crystal CLI library.","summary":"<p>Run the command.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr#L13","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"run([] of ::String)"}}],"constructors":[],"instance_methods":[{"id":"after_exit(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","html_id":"after_exit(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","name":"after_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"after_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__after(proc, name)"}},{"id":"after_exit(proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","html_id":"after_exit(proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","name":"after_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"after_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__after(proc, nil)"}},{"id":"after_exit(name=nil,&block:Contrive::CLI::MainCommand::Generate,Cli::Exit->Nil)-instance-method","html_id":"after_exit(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate,Cli::Exit-&gt;Nil)-instance-method","name":"after_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate, Cli::Exit -> Nil)","source_link":null,"def":{"name":"after_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__after(proc, name)\n"}},{"id":"after_initialize(name=nil,&block:Contrive::CLI::MainCommand::Generate->Nil)-instance-method","html_id":"after_initialize(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate-&gt;Nil)-instance-method","name":"after_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate -> Nil)","source_link":null,"def":{"name":"after_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate) do\n  block.call(_1)\nend\nappend_callback_for_initialize__after(proc, name)\n"}},{"id":"after_initialize(proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-instance-method","html_id":"after_initialize(proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-instance-method","name":"after_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"after_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__after(proc, nil)"}},{"id":"after_initialize(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-instance-method","html_id":"after_initialize(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-instance-method","name":"after_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"after_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__after(proc, name)"}},{"id":"around_exit(proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","html_id":"around_exit(proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","name":"around_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"around_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__around(proc, nil)"}},{"id":"around_exit(name=nil,&block:Contrive::CLI::MainCommand::Generate,Cli::Exit->Nil)-instance-method","html_id":"around_exit(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate,Cli::Exit-&gt;Nil)-instance-method","name":"around_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate, Cli::Exit -> Nil)","source_link":null,"def":{"name":"around_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__around(proc, name)\n"}},{"id":"around_exit(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","html_id":"around_exit(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","name":"around_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"around_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__around(proc, name)"}},{"id":"around_initialize(name=nil,&block:Contrive::CLI::MainCommand::Generate->Nil)-instance-method","html_id":"around_initialize(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate-&gt;Nil)-instance-method","name":"around_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate -> Nil)","source_link":null,"def":{"name":"around_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate) do\n  block.call(_1)\nend\nappend_callback_for_initialize__around(proc, name)\n"}},{"id":"around_initialize(proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-instance-method","html_id":"around_initialize(proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-instance-method","name":"around_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"around_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__around(proc, nil)"}},{"id":"around_initialize(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-instance-method","html_id":"around_initialize(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-instance-method","name":"around_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"around_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__around(proc, name)"}},{"id":"before_exit(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","html_id":"before_exit(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","name":"before_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"before_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__before(proc, name)"}},{"id":"before_exit(proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","html_id":"before_exit(proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","name":"before_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"before_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__before(proc, nil)"}},{"id":"before_exit(name=nil,&block:Contrive::CLI::MainCommand::Generate,Cli::Exit->Nil)-instance-method","html_id":"before_exit(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate,Cli::Exit-&gt;Nil)-instance-method","name":"before_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate, Cli::Exit -> Nil)","source_link":null,"def":{"name":"before_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__before(proc, name)\n"}},{"id":"before_initialize(name=nil,&block:Contrive::CLI::MainCommand::Generate->Nil)-instance-method","html_id":"before_initialize(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate-&gt;Nil)-instance-method","name":"before_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate -> Nil)","source_link":null,"def":{"name":"before_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate) do\n  block.call(_1)\nend\nappend_callback_for_initialize__before(proc, name)\n"}},{"id":"before_initialize(proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-instance-method","html_id":"before_initialize(proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-instance-method","name":"before_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"before_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__before(proc, nil)"}},{"id":"before_initialize(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-instance-method","html_id":"before_initialize(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-instance-method","name":"before_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"before_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__before(proc, name)"}},{"id":"callback_results_for_exit-instance-method","html_id":"callback_results_for_exit-instance-method","name":"callback_results_for_exit","doc":"Returns callback results of the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Returns callback results of the exit group.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"callback_results_for_exit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@callback_results[\"exit\"]? || (@callback_results[\"exit\"] = ::Callback::ResultSet(Nil).new)).as(::Callback::ResultSet(Nil))"}},{"id":"callback_results_for_initialize-instance-method","html_id":"callback_results_for_initialize-instance-method","name":"callback_results_for_initialize","doc":"Returns callback results of the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Returns callback results of the initialize group.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"callback_results_for_initialize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@callback_results[\"initialize\"]? || (@callback_results[\"initialize\"] = ::Callback::ResultSet(::Nil).new)).as(::Callback::ResultSet(::Nil))"}},{"id":"on_exit(proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","html_id":"on_exit(proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","name":"on_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"on_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__on(proc, nil)"}},{"id":"on_exit(name=nil,&block:Contrive::CLI::MainCommand::Generate,Cli::Exit->Nil)-instance-method","html_id":"on_exit(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate,Cli::Exit-&gt;Nil)-instance-method","name":"on_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate, Cli::Exit -> Nil)","source_link":null,"def":{"name":"on_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__on(proc, name)\n"}},{"id":"on_exit(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","html_id":"on_exit(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","name":"on_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"on_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__on(proc, name)"}},{"id":"on_initialize(proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-instance-method","html_id":"on_initialize(proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-instance-method","name":"on_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"on_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__on(proc, nil)"}},{"id":"on_initialize(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-instance-method","html_id":"on_initialize(name,proc:::Proc(Contrive::CLI::MainCommand::Generate,Nil))-instance-method","name":"on_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"on_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__on(proc, name)"}},{"id":"on_initialize(name=nil,&block:Contrive::CLI::MainCommand::Generate->Nil)-instance-method","html_id":"on_initialize(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate-&gt;Nil)-instance-method","name":"on_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate -> Nil)","source_link":null,"def":{"name":"on_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate) do\n  block.call(_1)\nend\nappend_callback_for_initialize__on(proc, name)\n"}},{"id":"recipe-instance-method","html_id":"recipe-instance-method","name":"recipe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr#L37","def":{"name":"recipe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"CLI.config.recipe"}},{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":"Runs the command.\n\nThis method is an entrypoint for running a command.\n\nSubclasses must override this method.","summary":"<p>Runs the command.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr#L29","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ensure_name_argument!\nensure_orm_argument!\nfull_orm_name = modify_orm_name\ngenerator = Generators.new(args.name, \".\", args.fields, full_orm_name)\ngenerator.generate(args.type, options)\n"}},{"id":"run_callbacks_for_exit(*args,&)-instance-method","html_id":"run_callbacks_for_exit(*args,&amp;)-instance-method","name":"run_callbacks_for_exit","doc":"Invokes all callbacks of the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Invokes all callbacks of the exit group.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, &)","source_link":null,"def":{"name":"run_callbacks_for_exit","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"results = renew_callback_results_for_exit\nrun_callbacks_for_exit__before(results, self, *args)\nrun_callbacks_for_exit__around(results, self, *args)\nrun_callbacks_for_exit__on(results, self, *args)\nresult = yield results\nrun_callbacks_for_exit__around(results, self, *args)\nrun_callbacks_for_exit__after(results, self, *args)\nresult\n"}},{"id":"run_callbacks_for_initialize(*args,&)-instance-method","html_id":"run_callbacks_for_initialize(*args,&amp;)-instance-method","name":"run_callbacks_for_initialize","doc":"Invokes all callbacks of the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Invokes all callbacks of the initialize group.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, &)","source_link":null,"def":{"name":"run_callbacks_for_initialize","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"results = renew_callback_results_for_initialize\nrun_callbacks_for_initialize__before(results, self, *args)\nrun_callbacks_for_initialize__around(results, self, *args)\nrun_callbacks_for_initialize__on(results, self, *args)\nresult = yield results\nrun_callbacks_for_initialize__around(results, self, *args)\nrun_callbacks_for_initialize__after(results, self, *args)\nresult\n"}}],"macros":[],"types":[{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/MainCommand/Generate/Help","path":"Contrive/CLI/MainCommand/Generate/Help.html","kind":"class","full_name":"Contrive::CLI::MainCommand::Generate::Help","name":"Help","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/cli/commands/generate.cr","line_number":13,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr"},{"filename":"contrive/cli/commands/generate.cr","line_number":24,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr"},{"filename":"contrive/cli/commands/generate.cr","line_number":64,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/MainCommand/Generate","kind":"class","full_name":"Contrive::CLI::MainCommand::Generate","name":"Generate"},"doc":"Configures help message attributes for the `Generate` class.\n\nThis class is automatically defined by the Crystal CLI library.","summary":"<p>Configures help message attributes for the <code><a href=\"../../../../Contrive/CLI/MainCommand/Generate.html\">Generate</a></code> class.</p>","class_methods":[{"id":"caption(s:String)-class-method","html_id":"caption(s:String)-class-method","name":"caption","doc":"Sets the caption.","summary":"<p>Sets the caption.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr#L13","def":{"name":"caption","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Contrive::CLI::MainCommand::Generate.__klass.caption = s"}},{"id":"footer(s:String)-class-method","html_id":"footer(s:String)-class-method","name":"footer","doc":"Sets the footer.","summary":"<p>Sets the footer.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr#L13","def":{"name":"footer","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Contrive::CLI::MainCommand::Generate.__klass.footer = s"}},{"id":"header(s:String)-class-method","html_id":"header(s:String)-class-method","name":"header","doc":"Sets the header.","summary":"<p>Sets the header.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr#L13","def":{"name":"header","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Contrive::CLI::MainCommand::Generate.__klass.header = s"}},{"id":"title(s:String)-class-method","html_id":"title(s:String)-class-method","name":"title","doc":"Sets the title.","summary":"<p>Sets the title.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr#L13","def":{"name":"title","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Contrive::CLI::MainCommand::Generate.__klass.title = s"}},{"id":"unparsed_args(s)-class-method","html_id":"unparsed_args(s)-class-method","name":"unparsed_args","doc":"Sets the string for unparsed arguments.","summary":"<p>Sets the string for unparsed arguments.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr#L13","def":{"name":"unparsed_args","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Contrive::CLI::MainCommand::Generate.__klass.unparsed_args = s"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/MainCommand/Generate/Options","path":"Contrive/CLI/MainCommand/Generate/Options.html","kind":"class","full_name":"Contrive::CLI::MainCommand::Generate::Options","name":"Options","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Command/Options","kind":"class","full_name":"Command::Options","name":"Options"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Command/Options","kind":"class","full_name":"Command::Options","name":"Options"},{"html_id":"github.com/andrewc910/contrive/Cli/OptionModel","kind":"class","full_name":"Cli::OptionModel","name":"OptionModel"},{"html_id":"github.com/andrewc910/contrive/Optarg/Model","kind":"class","full_name":"Optarg::Model","name":"Model"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/cli/commands/generate.cr","line_number":13,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr"},{"filename":"contrive/cli/commands/generate.cr","line_number":14,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/MainCommand/Generate","kind":"class","full_name":"Contrive::CLI::MainCommand::Generate","name":"Generate"},"doc":"The dedicated Cli::OptionModel subclass for the `Generate` class.\n\nThis class is automatically defined by the Crystal CLI library.","summary":"<p>The dedicated Cli::OptionModel subclass for the <code><a href=\"../../../../Contrive/CLI/MainCommand/Generate.html\">Generate</a></code> class.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"assume_yes?-instance-method","html_id":"assume_yes?-instance-method","name":"assume_yes?","doc":"Returns the -y option value.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the -y option value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"assume_yes?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!self[::Optarg::Definitions::BoolOption::Typed::Type][\"-y\"]?)"}},{"id":"fields-instance-method","html_id":"fields-instance-method","name":"fields","doc":"Returns the FIELDS argument value.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the FIELDS argument value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[::Optarg::Definitions::StringArrayArgument::Typed::Type][\"fields\"]"}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":"Returns the NAME argument value.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the NAME argument value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[::Optarg::Definitions::StringArgument::Typed::Type][\"name\"]"}},{"id":"name?-instance-method","html_id":"name?-instance-method","name":"name?","doc":"Returns the NAME argument value.\n\nReturns nil, if the value is undefined.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the NAME argument value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"name?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[::Optarg::Definitions::StringArgument::Typed::Type][\"name\"]?"}},{"id":"no_color?-instance-method","html_id":"no_color?-instance-method","name":"no_color?","doc":"Returns the --no-color option value.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the --no-color option value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"no_color?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!self[::Optarg::Definitions::BoolOption::Typed::Type][\"--no-color\"]?)"}},{"id":"orm-instance-method","html_id":"orm-instance-method","name":"orm","doc":"Returns the ORM argument value.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the ORM argument value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"orm","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[::Optarg::Definitions::StringArgument::Typed::Type][\"orm\"]"}},{"id":"orm?-instance-method","html_id":"orm?-instance-method","name":"orm?","doc":"Returns the ORM argument value.\n\nReturns nil, if the value is undefined.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the ORM argument value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"orm?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[::Optarg::Definitions::StringArgument::Typed::Type][\"orm\"]?"}},{"id":"type-instance-method","html_id":"type-instance-method","name":"type","doc":"Returns the TYPE argument value.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the TYPE argument value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[::Optarg::Definitions::StringArgument::Typed::Type][\"type\"]"}},{"id":"type?-instance-method","html_id":"type?-instance-method","name":"type?","doc":"Returns the TYPE argument value.\n\nReturns nil, if the value is undefined.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the TYPE argument value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"type?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[::Optarg::Definitions::StringArgument::Typed::Type][\"type\"]?"}},{"id":"y?-instance-method","html_id":"y?-instance-method","name":"y?","doc":"Returns the -y option value.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the -y option value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"y?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!self[::Optarg::Definitions::BoolOption::Typed::Type][\"-y\"]?)"}}],"macros":[],"types":[{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/MainCommand/Generate/Options/Parser","path":"Contrive/CLI/MainCommand/Generate/Options/Parser.html","kind":"class","full_name":"Contrive::CLI::MainCommand::Generate::Options::Parser","name":"Parser","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Command/Options/Parser","kind":"class","full_name":"Command::Options::Parser","name":"Parser"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Command/Options/Parser","kind":"class","full_name":"Command::Options::Parser","name":"Parser"},{"html_id":"github.com/andrewc910/contrive/Cli/OptionModel/Parser","kind":"class","full_name":"Cli::OptionModel::Parser","name":"Parser"},{"html_id":"github.com/andrewc910/contrive/Optarg/Parser","kind":"class","full_name":"Optarg::Parser","name":"Parser"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/MainCommand/Generate/Options","kind":"class","full_name":"Contrive::CLI::MainCommand::Generate::Options","name":"Options"},"doc":"The dedicated Optarg::Parser subclass for the `Options` class.\n\nThis class is automatically defined by the optarg library.","summary":"<p>The dedicated Optarg::Parser subclass for the <code><a href=\"../../../../../Contrive/CLI/MainCommand/Generate/Options.html\">Options</a></code> class.</p>","class_methods":[{"id":"after_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-class-method","html_id":"after_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-class-method","name":"after_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, name)"}},{"id":"after_validate(proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-class-method","html_id":"after_validate(proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-class-method","name":"after_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, nil)"}},{"id":"after_validate(name=nil,&block:Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options->Nil)-class-method","html_id":"after_validate(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options-&gt;Nil)-class-method","name":"after_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options -> Nil)","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate::Options::Parser, _2 : ::Contrive::CLI::MainCommand::Generate::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__after(proc, name)\n"}},{"id":"around_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-class-method","html_id":"around_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-class-method","name":"around_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, name)"}},{"id":"around_validate(proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-class-method","html_id":"around_validate(proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-class-method","name":"around_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, nil)"}},{"id":"around_validate(name=nil,&block:Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options->Nil)-class-method","html_id":"around_validate(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options-&gt;Nil)-class-method","name":"around_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options -> Nil)","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate::Options::Parser, _2 : ::Contrive::CLI::MainCommand::Generate::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__around(proc, name)\n"}},{"id":"before_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-class-method","html_id":"before_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-class-method","name":"before_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, name)"}},{"id":"before_validate(proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-class-method","html_id":"before_validate(proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-class-method","name":"before_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, nil)"}},{"id":"before_validate(name=nil,&block:Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options->Nil)-class-method","html_id":"before_validate(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options-&gt;Nil)-class-method","name":"before_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options -> Nil)","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate::Options::Parser, _2 : ::Contrive::CLI::MainCommand::Generate::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__before(proc, name)\n"}},{"id":"on_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-class-method","html_id":"on_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-class-method","name":"on_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, name)"}},{"id":"on_validate(proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-class-method","html_id":"on_validate(proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-class-method","name":"on_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, nil)"}},{"id":"on_validate(name=nil,&block:Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options->Nil)-class-method","html_id":"on_validate(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options-&gt;Nil)-class-method","name":"on_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options -> Nil)","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate::Options::Parser, _2 : ::Contrive::CLI::MainCommand::Generate::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__on(proc, name)\n"}}],"constructors":[],"instance_methods":[{"id":"after_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-instance-method","html_id":"after_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-instance-method","name":"after_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, name)"}},{"id":"after_validate(proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-instance-method","html_id":"after_validate(proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-instance-method","name":"after_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, nil)"}},{"id":"after_validate(name=nil,&block:Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options->Nil)-instance-method","html_id":"after_validate(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options-&gt;Nil)-instance-method","name":"after_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options -> Nil)","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate::Options::Parser, _2 : ::Contrive::CLI::MainCommand::Generate::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__after(proc, name)\n"}},{"id":"around_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-instance-method","html_id":"around_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-instance-method","name":"around_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, name)"}},{"id":"around_validate(proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-instance-method","html_id":"around_validate(proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-instance-method","name":"around_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, nil)"}},{"id":"around_validate(name=nil,&block:Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options->Nil)-instance-method","html_id":"around_validate(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options-&gt;Nil)-instance-method","name":"around_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options -> Nil)","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate::Options::Parser, _2 : ::Contrive::CLI::MainCommand::Generate::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__around(proc, name)\n"}},{"id":"before_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-instance-method","html_id":"before_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-instance-method","name":"before_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, name)"}},{"id":"before_validate(proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-instance-method","html_id":"before_validate(proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-instance-method","name":"before_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, nil)"}},{"id":"before_validate(name=nil,&block:Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options->Nil)-instance-method","html_id":"before_validate(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options-&gt;Nil)-instance-method","name":"before_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options -> Nil)","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate::Options::Parser, _2 : ::Contrive::CLI::MainCommand::Generate::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__before(proc, name)\n"}},{"id":"callback_results_for_validate-instance-method","html_id":"callback_results_for_validate-instance-method","name":"callback_results_for_validate","doc":"Returns callback results of the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Returns callback results of the validate group.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"callback_results_for_validate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@callback_results[\"validate\"]? || (@callback_results[\"validate\"] = ::Callback::ResultSet(::Nil).new)).as(::Callback::ResultSet(::Nil))"}},{"id":"data:Contrive::CLI::MainCommand::Generate::Options-instance-method","html_id":"data:Contrive::CLI::MainCommand::Generate::Options-instance-method","name":"data","doc":"Returns a target model instance.","summary":"<p>Returns a target model instance.</p>","abstract":false,"args":[],"args_string":" : Contrive::CLI::MainCommand::Generate::Options","source_link":null,"def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Contrive::CLI::MainCommand::Generate::Options","visibility":"Public","body":"@data.as(::Contrive::CLI::MainCommand::Generate::Options)"}},{"id":"on_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-instance-method","html_id":"on_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-instance-method","name":"on_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, name)"}},{"id":"on_validate(proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-instance-method","html_id":"on_validate(proc:::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options,Nil))-instance-method","name":"on_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, nil)"}},{"id":"on_validate(name=nil,&block:Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options->Nil)-instance-method","html_id":"on_validate(name=nil,&amp;block:Contrive::CLI::MainCommand::Generate::Options::Parser,Contrive::CLI::MainCommand::Generate::Options-&gt;Nil)-instance-method","name":"on_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Generate::Options::Parser, Contrive::CLI::MainCommand::Generate::Options -> Nil)","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Generate::Options::Parser, ::Contrive::CLI::MainCommand::Generate::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Generate::Options::Parser, _2 : ::Contrive::CLI::MainCommand::Generate::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__on(proc, name)\n"}},{"id":"run_callbacks_for_validate(*args,&)-instance-method","html_id":"run_callbacks_for_validate(*args,&amp;)-instance-method","name":"run_callbacks_for_validate","doc":"Invokes all callbacks of the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Invokes all callbacks of the validate group.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, &)","source_link":null,"def":{"name":"run_callbacks_for_validate","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"results = renew_callback_results_for_validate\nrun_callbacks_for_validate__before(results, self, *args)\nrun_callbacks_for_validate__around(results, self, *args)\nrun_callbacks_for_validate__on(results, self, *args)\nresult = yield results\nrun_callbacks_for_validate__around(results, self, *args)\nrun_callbacks_for_validate__after(results, self, *args)\nresult\n"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/MainCommand/Help","path":"Contrive/CLI/MainCommand/Help.html","kind":"class","full_name":"Contrive::CLI::MainCommand::Help","name":"Help","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/cli/commands/generate.cr","line_number":6,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr"},{"filename":"contrive/cli/commands.cr","line_number":12,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/MainCommand","kind":"class","full_name":"Contrive::CLI::MainCommand","name":"MainCommand"},"doc":"Configures help message attributes for the `MainCommand` class.\n\nThis class is automatically defined by the Crystal CLI library.","summary":"<p>Configures help message attributes for the <code><a href=\"../../../Contrive/CLI/MainCommand.html\">MainCommand</a></code> class.</p>","class_methods":[{"id":"caption(s:String)-class-method","html_id":"caption(s:String)-class-method","name":"caption","doc":"Sets the caption.","summary":"<p>Sets the caption.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr#L6","def":{"name":"caption","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Contrive::CLI::MainCommand.__klass.caption = s"}},{"id":"footer(s:String)-class-method","html_id":"footer(s:String)-class-method","name":"footer","doc":"Sets the footer.","summary":"<p>Sets the footer.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr#L6","def":{"name":"footer","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Contrive::CLI::MainCommand.__klass.footer = s"}},{"id":"header(s:String)-class-method","html_id":"header(s:String)-class-method","name":"header","doc":"Sets the header.","summary":"<p>Sets the header.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr#L6","def":{"name":"header","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Contrive::CLI::MainCommand.__klass.header = s"}},{"id":"title(s:String)-class-method","html_id":"title(s:String)-class-method","name":"title","doc":"Sets the title.","summary":"<p>Sets the title.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr#L6","def":{"name":"title","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Contrive::CLI::MainCommand.__klass.title = s"}},{"id":"unparsed_args(s)-class-method","html_id":"unparsed_args(s)-class-method","name":"unparsed_args","doc":"Sets the string for unparsed arguments.","summary":"<p>Sets the string for unparsed arguments.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr#L6","def":{"name":"unparsed_args","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Contrive::CLI::MainCommand.__klass.unparsed_args = s"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/MainCommand/Options","path":"Contrive/CLI/MainCommand/Options.html","kind":"class","full_name":"Contrive::CLI::MainCommand::Options","name":"Options","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Cli/OptionModel","kind":"class","full_name":"Cli::OptionModel","name":"OptionModel"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Cli/OptionModel","kind":"class","full_name":"Cli::OptionModel","name":"OptionModel"},{"html_id":"github.com/andrewc910/contrive/Optarg/Model","kind":"class","full_name":"Optarg::Model","name":"Model"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/cli/commands/generate.cr","line_number":6,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands/generate.cr"},{"filename":"contrive/cli/commands.cr","line_number":25,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/commands.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/MainCommand","kind":"class","full_name":"Contrive::CLI::MainCommand","name":"MainCommand"},"doc":"The dedicated Cli::OptionModel subclass for the `MainCommand` class.\n\nThis class is automatically defined by the Crystal CLI library.","summary":"<p>The dedicated Cli::OptionModel subclass for the <code><a href=\"../../../Contrive/CLI/MainCommand.html\">MainCommand</a></code> class.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/MainCommand/Options/Parser","path":"Contrive/CLI/MainCommand/Options/Parser.html","kind":"class","full_name":"Contrive::CLI::MainCommand::Options::Parser","name":"Parser","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Cli/OptionModel/Parser","kind":"class","full_name":"Cli::OptionModel::Parser","name":"Parser"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Cli/OptionModel/Parser","kind":"class","full_name":"Cli::OptionModel::Parser","name":"Parser"},{"html_id":"github.com/andrewc910/contrive/Optarg/Parser","kind":"class","full_name":"Optarg::Parser","name":"Parser"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/MainCommand/Options","kind":"class","full_name":"Contrive::CLI::MainCommand::Options","name":"Options"},"doc":"The dedicated Optarg::Parser subclass for the `Options` class.\n\nThis class is automatically defined by the optarg library.","summary":"<p>The dedicated Optarg::Parser subclass for the <code><a href=\"../../../../Contrive/CLI/MainCommand/Options.html\">Options</a></code> class.</p>","class_methods":[{"id":"after_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-class-method","html_id":"after_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-class-method","name":"after_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, name)"}},{"id":"after_validate(proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-class-method","html_id":"after_validate(proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-class-method","name":"after_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, nil)"}},{"id":"after_validate(name=nil,&block:Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options->Nil)-class-method","html_id":"after_validate(name=nil,&amp;block:Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options-&gt;Nil)-class-method","name":"after_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options -> Nil)","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Options::Parser, _2 : ::Contrive::CLI::MainCommand::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__after(proc, name)\n"}},{"id":"around_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-class-method","html_id":"around_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-class-method","name":"around_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, name)"}},{"id":"around_validate(proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-class-method","html_id":"around_validate(proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-class-method","name":"around_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, nil)"}},{"id":"around_validate(name=nil,&block:Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options->Nil)-class-method","html_id":"around_validate(name=nil,&amp;block:Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options-&gt;Nil)-class-method","name":"around_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options -> Nil)","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Options::Parser, _2 : ::Contrive::CLI::MainCommand::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__around(proc, name)\n"}},{"id":"before_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-class-method","html_id":"before_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-class-method","name":"before_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, name)"}},{"id":"before_validate(proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-class-method","html_id":"before_validate(proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-class-method","name":"before_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, nil)"}},{"id":"before_validate(name=nil,&block:Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options->Nil)-class-method","html_id":"before_validate(name=nil,&amp;block:Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options-&gt;Nil)-class-method","name":"before_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options -> Nil)","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Options::Parser, _2 : ::Contrive::CLI::MainCommand::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__before(proc, name)\n"}},{"id":"on_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-class-method","html_id":"on_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-class-method","name":"on_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, name)"}},{"id":"on_validate(proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-class-method","html_id":"on_validate(proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-class-method","name":"on_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, nil)"}},{"id":"on_validate(name=nil,&block:Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options->Nil)-class-method","html_id":"on_validate(name=nil,&amp;block:Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options-&gt;Nil)-class-method","name":"on_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options -> Nil)","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Options::Parser, _2 : ::Contrive::CLI::MainCommand::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__on(proc, name)\n"}}],"constructors":[],"instance_methods":[{"id":"after_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-instance-method","html_id":"after_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-instance-method","name":"after_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, name)"}},{"id":"after_validate(proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-instance-method","html_id":"after_validate(proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-instance-method","name":"after_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, nil)"}},{"id":"after_validate(name=nil,&block:Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options->Nil)-instance-method","html_id":"after_validate(name=nil,&amp;block:Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options-&gt;Nil)-instance-method","name":"after_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options -> Nil)","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Options::Parser, _2 : ::Contrive::CLI::MainCommand::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__after(proc, name)\n"}},{"id":"around_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-instance-method","html_id":"around_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-instance-method","name":"around_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, name)"}},{"id":"around_validate(proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-instance-method","html_id":"around_validate(proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-instance-method","name":"around_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, nil)"}},{"id":"around_validate(name=nil,&block:Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options->Nil)-instance-method","html_id":"around_validate(name=nil,&amp;block:Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options-&gt;Nil)-instance-method","name":"around_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options -> Nil)","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Options::Parser, _2 : ::Contrive::CLI::MainCommand::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__around(proc, name)\n"}},{"id":"before_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-instance-method","html_id":"before_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-instance-method","name":"before_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, name)"}},{"id":"before_validate(proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-instance-method","html_id":"before_validate(proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-instance-method","name":"before_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, nil)"}},{"id":"before_validate(name=nil,&block:Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options->Nil)-instance-method","html_id":"before_validate(name=nil,&amp;block:Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options-&gt;Nil)-instance-method","name":"before_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options -> Nil)","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Options::Parser, _2 : ::Contrive::CLI::MainCommand::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__before(proc, name)\n"}},{"id":"callback_results_for_validate-instance-method","html_id":"callback_results_for_validate-instance-method","name":"callback_results_for_validate","doc":"Returns callback results of the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Returns callback results of the validate group.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"callback_results_for_validate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@callback_results[\"validate\"]? || (@callback_results[\"validate\"] = ::Callback::ResultSet(::Nil).new)).as(::Callback::ResultSet(::Nil))"}},{"id":"data:Contrive::CLI::MainCommand::Options-instance-method","html_id":"data:Contrive::CLI::MainCommand::Options-instance-method","name":"data","doc":"Returns a target model instance.","summary":"<p>Returns a target model instance.</p>","abstract":false,"args":[],"args_string":" : Contrive::CLI::MainCommand::Options","source_link":null,"def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Contrive::CLI::MainCommand::Options","visibility":"Public","body":"@data.as(::Contrive::CLI::MainCommand::Options)"}},{"id":"on_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-instance-method","html_id":"on_validate(name,proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-instance-method","name":"on_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, name)"}},{"id":"on_validate(proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-instance-method","html_id":"on_validate(proc:::Proc(Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options,Nil))-instance-method","name":"on_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, nil)"}},{"id":"on_validate(name=nil,&block:Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options->Nil)-instance-method","html_id":"on_validate(name=nil,&amp;block:Contrive::CLI::MainCommand::Options::Parser,Contrive::CLI::MainCommand::Options-&gt;Nil)-instance-method","name":"on_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Contrive::CLI::MainCommand::Options::Parser, Contrive::CLI::MainCommand::Options -> Nil)","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Contrive::CLI::MainCommand::Options::Parser, ::Contrive::CLI::MainCommand::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Contrive::CLI::MainCommand::Options::Parser, _2 : ::Contrive::CLI::MainCommand::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__on(proc, name)\n"}},{"id":"run_callbacks_for_validate(*args,&)-instance-method","html_id":"run_callbacks_for_validate(*args,&amp;)-instance-method","name":"run_callbacks_for_validate","doc":"Invokes all callbacks of the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Invokes all callbacks of the validate group.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, &)","source_link":null,"def":{"name":"run_callbacks_for_validate","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"results = renew_callback_results_for_validate\nrun_callbacks_for_validate__before(results, self, *args)\nrun_callbacks_for_validate__around(results, self, *args)\nrun_callbacks_for_validate__on(results, self, *args)\nresult = yield results\nrun_callbacks_for_validate__around(results, self, *args)\nrun_callbacks_for_validate__after(results, self, *args)\nresult\n"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Omniauth","path":"Contrive/CLI/Omniauth.html","kind":"class","full_name":"Contrive::CLI::Omniauth","name":"Omniauth","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Generator","kind":"class","full_name":"Contrive::CLI::Generator","name":"Generator"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Generator","kind":"class","full_name":"Contrive::CLI::Generator","name":"Generator"},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers","kind":"module","full_name":"Contrive::CLI::Helpers","name":"Helpers"},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers/Jennifer/Migration","kind":"module","full_name":"Contrive::CLI::Helpers::Jennifer::Migration","name":"Migration"},{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Helpers/Migration","kind":"module","full_name":"Contrive::CLI::Helpers::Migration","name":"Migration"},{"html_id":"github.com/andrewc910/contrive/Teeplate/FileTree","kind":"class","full_name":"Teeplate::FileTree","name":"FileTree"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/cli/generators/omniauth.cr","line_number":5,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/omniauth.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/CLI","kind":"module","full_name":"Contrive::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,fields,orm:String)-class-method","html_id":"new(name,fields,orm:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"","external_name":"orm","restriction":"String"}],"args_string":"(name, fields, orm : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/omniauth.cr#L11","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"","external_name":"orm","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, fields, orm)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"____collect_files(____files)-instance-method","html_id":"____collect_files(____files)-instance-method","name":"____collect_files","doc":":nodoc:","summary":"<p>:nodoc:</p>","abstract":false,"args":[{"name":"____files","doc":null,"default_value":"","external_name":"____files","restriction":""}],"args_string":"(____files)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/omniauth.cr#L7","def":{"name":"____collect_files","args":[{"name":"____files","doc":null,"default_value":"","external_name":"____files","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io = IO::Memory.new\n__ecr0(io)\n____files << (::Teeplate::StringData.new(\"src/controllers/omniauth/session_controller.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr2(io)\n____files << (::Teeplate::StringData.new(\"src/controllers/omniauth/#{@name}_controller.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr4(io)\n____files << (::Teeplate::StringData.new(\"db/migrations/#{@timestamp}_add_omniauth_to_#{@name}.#{@migration_extension}\", io.to_s, File::Permissions.from_value(436)))\n"}},{"id":"__ecr0(____io)-instance-method","html_id":"__ecr0(____io)-instance-method","name":"__ecr0","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/omniauth.cr#L7","def":{"name":"__ecr0","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/omniauth/src/controllers/omniauth/session_controller.cr.ecr\", \"____io\")"}},{"id":"__ecr2(____io)-instance-method","html_id":"__ecr2(____io)-instance-method","name":"__ecr2","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/omniauth.cr#L7","def":{"name":"__ecr2","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/omniauth/src/controllers/omniauth/{{name}}_controller.cr.ecr\", \"____io\")"}},{"id":"__ecr4(____io)-instance-method","html_id":"__ecr4(____io)-instance-method","name":"__ecr4","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/omniauth.cr#L7","def":{"name":"__ecr4","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/andrew/workspace/crystal/contrive/src/contrive/cli/templates/omniauth/db/migrations/{{timestamp}}_add_omniauth_to_{{name}}.{{migration_extension}}.ecr\", \"____io\")"}},{"id":"fields:Array(Field)-instance-method","html_id":"fields:Array(Field)-instance-method","name":"fields","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Field)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/omniauth.cr#L9","def":{"name":"fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Field)","visibility":"Public","body":"@fields"}},{"id":"fields=(fields:Array(Field))-instance-method","html_id":"fields=(fields:Array(Field))-instance-method","name":"fields=","doc":null,"summary":null,"abstract":false,"args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"args_string":"(fields : Array(Field))","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/omniauth.cr#L9","def":{"name":"fields=","args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fields = fields"}},{"id":"pre_render(directory,**args)-instance-method","html_id":"pre_render(directory,**args)-instance-method","name":"pre_render","doc":null,"summary":null,"abstract":false,"args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"args_string":"(directory, **args)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators/omniauth.cr#L18","def":{"name":"pre_render","args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_routes\ninject_require_omniauth\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/andrewc910/contrive/Contrive/Configuration","path":"Contrive/Configuration.html","kind":"class","full_name":"Contrive::Configuration","name":"Configuration","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/configuration.cr","line_number":2,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/configuration.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/andrewc910/contrive/Contrive/ContriveController","kind":"class","full_name":"Contrive::ContriveController","name":"ContriveController"}],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive","kind":"module","full_name":"Contrive","name":"Contrive"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"confirmable_enabled:Bool-instance-method","html_id":"confirmable_enabled:Bool-instance-method","name":"confirmable_enabled","doc":"Used in the controllers/session","summary":"<p>Used in the controllers/session</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/configuration.cr#L4","def":{"name":"confirmable_enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@confirmable_enabled"}},{"id":"confirmable_enabled=(confirmable_enabled:Bool)-instance-method","html_id":"confirmable_enabled=(confirmable_enabled:Bool)-instance-method","name":"confirmable_enabled=","doc":"Used in the controllers/session","summary":"<p>Used in the controllers/session</p>","abstract":false,"args":[{"name":"confirmable_enabled","doc":null,"default_value":"","external_name":"confirmable_enabled","restriction":"Bool"}],"args_string":"(confirmable_enabled : Bool)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/configuration.cr#L4","def":{"name":"confirmable_enabled=","args":[{"name":"confirmable_enabled","doc":null,"default_value":"","external_name":"confirmable_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@confirmable_enabled = confirmable_enabled"}},{"id":"parent_controller-instance-method","html_id":"parent_controller-instance-method","name":"parent_controller","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/configuration.cr#L10","def":{"name":"parent_controller","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@parent_controller"}},{"id":"parent_controller=(parent_controller=Amber::Controller::Base)-instance-method","html_id":"parent_controller=(parent_controller=Amber::Controller::Base)-instance-method","name":"parent_controller=","doc":null,"summary":null,"abstract":false,"args":[{"name":"parent_controller","doc":null,"default_value":"Amber::Controller::Base","external_name":"parent_controller","restriction":""}],"args_string":"(parent_controller = <span class=\"t\">Amber</span><span class=\"t\">::</span><span class=\"t\">Controller</span><span class=\"t\">::</span><span class=\"t\">Base</span>)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/configuration.cr#L6","def":{"name":"parent_controller=","args":[{"name":"parent_controller","doc":null,"default_value":"Amber::Controller::Base","external_name":"parent_controller","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@parent_controller = parent_controller"}}],"macros":[],"types":[]},{"html_id":"github.com/andrewc910/contrive/Contrive/Confirmable","path":"Contrive/Confirmable.html","kind":"module","full_name":"Contrive::Confirmable","name":"Confirmable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"contrive/confirmable/confirmable.cr","line_number":3,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/confirmable/confirmable.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive","kind":"module","full_name":"Contrive","name":"Contrive"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"with_confirmation(skip_validation=false)-macro","html_id":"with_confirmation(skip_validation=false)-macro","name":"with_confirmation","doc":"Adds methods to set token & send confirmation email.\n- 'before_create' - generates token and saves it to user;\n- 'after_create' - sends out user email","summary":"<p>Adds methods to set token & send confirmation email.</p>","abstract":false,"args":[{"name":"skip_validation","doc":null,"default_value":"false","external_name":"skip_validation","restriction":""}],"args_string":"(skip_validation = <span class=\"n\">false</span>)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/confirmable/confirmable.cr#L7","def":{"name":"with_confirmation","args":[{"name":"skip_validation","doc":null,"default_value":"false","external_name":"skip_validation","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if !skip_validation %}\n      before_create :generate_confirmation_token\n      after_create :send_register_email\n    {% end %}\n\n\n    def generate_confirmation_token\n      self.token = UUID.random.to_s\n    \nend\n\n    def token=(token)\n      @token = token\n    \nend\n\n    def confirmed=(val)\n      @confirmed = val\n    \nend\n\n    def send_register_email\n      return false if self.token.nil?\n      return false if self.email.nil?\n      ConfirmationMailer.new(\"name\", self.email, self.token).deliver\n    \nend\n  \n"}}],"types":[]},{"html_id":"github.com/andrewc910/contrive/Contrive/ContriveController","path":"Contrive/ContriveController.html","kind":"class","full_name":"Contrive::ContriveController","name":"ContriveController","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Contrive/Configuration","kind":"class","full_name":"Contrive::Configuration","name":"Configuration"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Contrive/Configuration","kind":"class","full_name":"Contrive::Configuration","name":"Configuration"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/controllers/contrive_controller.cr","line_number":7,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/controllers/contrive_controller.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive","kind":"module","full_name":"Contrive","name":"Contrive"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/andrewc910/contrive/Contrive/Controllers","path":"Contrive/Controllers.html","kind":"module","full_name":"Contrive::Controllers","name":"Controllers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"contrive/controllers/resource.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/controllers/resource.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive","kind":"module","full_name":"Contrive","name":"Contrive"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/andrewc910/contrive/Contrive/Controllers/Resource","path":"Contrive/Controllers/Resource.html","kind":"module","full_name":"Contrive::Controllers::Resource","name":"Resource","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"contrive/controllers/resource.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/controllers/resource.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/Controllers","kind":"module","full_name":"Contrive::Controllers","name":"Controllers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"generate_resource(resource)-instance-method","html_id":"generate_resource(resource)-instance-method","name":"generate_resource","doc":null,"summary":null,"abstract":false,"args":[{"name":"resource","doc":null,"default_value":"","external_name":"resource","restriction":""}],"args_string":"(resource)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/controllers/resource.cr#L3","def":{"name":"generate_resource","args":[{"name":"resource","doc":null,"default_value":"","external_name":"resource","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Contrive.configuration.confirmable_enabled ? with_confirmable(resource) : without_confirmable(resource)"}}],"macros":[],"types":[]},{"html_id":"github.com/andrewc910/contrive/Contrive/Controllers/Session","path":"Contrive/Controllers/Session.html","kind":"module","full_name":"Contrive::Controllers::Session","name":"Session","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"contrive/controllers/session.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/controllers/session.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/Controllers","kind":"module","full_name":"Contrive::Controllers","name":"Controllers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"authenticate(user,given_password)-instance-method","html_id":"authenticate(user,given_password)-instance-method","name":"authenticate","doc":null,"summary":null,"abstract":false,"args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""},{"name":"given_password","doc":null,"default_value":"","external_name":"given_password","restriction":""}],"args_string":"(user, given_password)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/controllers/session.cr#L33","def":{"name":"authenticate","args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""},{"name":"given_password","doc":null,"default_value":"","external_name":"given_password","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"user.authenticate(given_password)"}},{"id":"create_session(user,email:String,password:String)-instance-method","html_id":"create_session(user,email:String,password:String)-instance-method","name":"create_session","doc":null,"summary":null,"abstract":false,"args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""},{"name":"email","doc":null,"default_value":"","external_name":"email","restriction":"String"},{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"}],"args_string":"(user, email : String, password : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/controllers/session.cr#L2","def":{"name":"create_session","args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""},{"name":"email","doc":null,"default_value":"","external_name":"email","restriction":"String"},{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if Contrive.configuration.confirmable_enabled\n  if user && user.confirmed?\n  else\n    flash[:warning] = \"Please activate your account\"\n    return redirect_to(\"/\")\n  end\nend\nif user && (authenticate(user, params[\"password\"].to_s))\n  session[:user_id] = user.id\n  flash[:info] = \"Successfully logged in\"\n  redirect_to(\"/\")\nelse\n  flash[:danger] = \"Invalid email or password\"\n  user = User.new\n  render(\"new.ecr\")\nend\n"}},{"id":"omniauth_register(params,callback_url)-instance-method","html_id":"omniauth_register(params,callback_url)-instance-method","name":"omniauth_register","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},{"name":"callback_url","doc":null,"default_value":"","external_name":"callback_url","restriction":""}],"args_string":"(params, callback_url)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/controllers/session.cr#L29","def":{"name":"omniauth_register","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},{"name":"callback_url","doc":null,"default_value":"","external_name":"callback_url","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Contrive::OmniAuth::Provider.user(params[:provider], {\"code\" => params[:code]}, callback_url)"}},{"id":"omniauth_session(params)-instance-method","html_id":"omniauth_session(params)-instance-method","name":"omniauth_session","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"args_string":"(params)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/controllers/session.cr#L22","def":{"name":"omniauth_session","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"url = \"http://localhost:3000/omniauth/#{params[:provider]}/callback\"\nfakeuser = Contrive::OmniAuth::Provider.user(params[:provider], {\"code\" => params[:code]}, url)\nUser.where do\n  _uid == fakeuser.uid\nend.first\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth","path":"Contrive/OmniAuth.html","kind":"module","full_name":"Contrive::OmniAuth","name":"OmniAuth","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"contrive/omniauth/configuration.cr","line_number":2,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr"},{"filename":"contrive/omniauth.cr","line_number":9,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive","kind":"module","full_name":"Contrive","name":"Contrive"},"doc":null,"summary":null,"class_methods":[{"id":"config(provider,key,secret)-class-method","html_id":"config(provider,key,secret)-class-method","name":"config","doc":null,"summary":null,"abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":""},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"secret","doc":null,"default_value":"","external_name":"secret","restriction":""}],"args_string":"(provider, key, secret)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L14","def":{"name":"config","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":""},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"secret","doc":null,"default_value":"","external_name":"secret","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@configuration.providers[provider] = [key, secret]"}},{"id":"configuration-class-method","html_id":"configuration-class-method","name":"configuration","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L10","def":{"name":"configuration","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@configuration"}},{"id":"make(provider,redirect_uri)-class-method","html_id":"make(provider,redirect_uri)-class-method","name":"make","doc":null,"summary":null,"abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":""},{"name":"redirect_uri","doc":null,"default_value":"","external_name":"redirect_uri","restriction":""}],"args_string":"(provider, redirect_uri)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L6","def":{"name":"make","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":""},{"name":"redirect_uri","doc":null,"default_value":"","external_name":"redirect_uri","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Contrive::OmniAuth::Engine.new(provider, redirect_uri)"}},{"id":"setup(&)-class-method","html_id":"setup(&amp;)-class-method","name":"setup","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L18","def":{"name":"setup","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"yield @@configuration"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Configuration","path":"Contrive/OmniAuth/Configuration.html","kind":"class","full_name":"Contrive::OmniAuth::Configuration","name":"Configuration","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/omniauth/configuration.cr","line_number":22,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth","kind":"module","full_name":"Contrive::OmniAuth","name":"OmniAuth"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L43","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](provider:String)-instance-method","html_id":"[](provider:String)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"}],"args_string":"(provider : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L47","def":{"name":"[]","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.providers[provider]"}},{"id":"confirmable_enabled:Bool-instance-method","html_id":"confirmable_enabled:Bool-instance-method","name":"confirmable_enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L26","def":{"name":"confirmable_enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@confirmable_enabled"}},{"id":"confirmable_enabled=(confirmable_enabled:Bool)-instance-method","html_id":"confirmable_enabled=(confirmable_enabled:Bool)-instance-method","name":"confirmable_enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"confirmable_enabled","doc":null,"default_value":"","external_name":"confirmable_enabled","restriction":"Bool"}],"args_string":"(confirmable_enabled : Bool)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L26","def":{"name":"confirmable_enabled=","args":[{"name":"confirmable_enabled","doc":null,"default_value":"","external_name":"confirmable_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@confirmable_enabled = confirmable_enabled"}},{"id":"facebook_id:String-instance-method","html_id":"facebook_id:String-instance-method","name":"facebook_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L31","def":{"name":"facebook_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@facebook_id"}},{"id":"facebook_id=(facebook_id:String)-instance-method","html_id":"facebook_id=(facebook_id:String)-instance-method","name":"facebook_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"facebook_id","doc":null,"default_value":"","external_name":"facebook_id","restriction":"String"}],"args_string":"(facebook_id : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L31","def":{"name":"facebook_id=","args":[{"name":"facebook_id","doc":null,"default_value":"","external_name":"facebook_id","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@facebook_id = facebook_id"}},{"id":"facebook_secret_key:String-instance-method","html_id":"facebook_secret_key:String-instance-method","name":"facebook_secret_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L32","def":{"name":"facebook_secret_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@facebook_secret_key"}},{"id":"facebook_secret_key=(facebook_secret_key:String)-instance-method","html_id":"facebook_secret_key=(facebook_secret_key:String)-instance-method","name":"facebook_secret_key=","doc":null,"summary":null,"abstract":false,"args":[{"name":"facebook_secret_key","doc":null,"default_value":"","external_name":"facebook_secret_key","restriction":"String"}],"args_string":"(facebook_secret_key : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L32","def":{"name":"facebook_secret_key=","args":[{"name":"facebook_secret_key","doc":null,"default_value":"","external_name":"facebook_secret_key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@facebook_secret_key = facebook_secret_key"}},{"id":"github_id:String-instance-method","html_id":"github_id:String-instance-method","name":"github_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L34","def":{"name":"github_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@github_id"}},{"id":"github_id=(github_id:String)-instance-method","html_id":"github_id=(github_id:String)-instance-method","name":"github_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"github_id","doc":null,"default_value":"","external_name":"github_id","restriction":"String"}],"args_string":"(github_id : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L34","def":{"name":"github_id=","args":[{"name":"github_id","doc":null,"default_value":"","external_name":"github_id","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@github_id = github_id"}},{"id":"github_secret_key:String-instance-method","html_id":"github_secret_key:String-instance-method","name":"github_secret_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L35","def":{"name":"github_secret_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@github_secret_key"}},{"id":"github_secret_key=(github_secret_key:String)-instance-method","html_id":"github_secret_key=(github_secret_key:String)-instance-method","name":"github_secret_key=","doc":null,"summary":null,"abstract":false,"args":[{"name":"github_secret_key","doc":null,"default_value":"","external_name":"github_secret_key","restriction":"String"}],"args_string":"(github_secret_key : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L35","def":{"name":"github_secret_key=","args":[{"name":"github_secret_key","doc":null,"default_value":"","external_name":"github_secret_key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@github_secret_key = github_secret_key"}},{"id":"google_id:String-instance-method","html_id":"google_id:String-instance-method","name":"google_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L28","def":{"name":"google_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@google_id"}},{"id":"google_id=(google_id:String)-instance-method","html_id":"google_id=(google_id:String)-instance-method","name":"google_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"google_id","doc":null,"default_value":"","external_name":"google_id","restriction":"String"}],"args_string":"(google_id : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L28","def":{"name":"google_id=","args":[{"name":"google_id","doc":null,"default_value":"","external_name":"google_id","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@google_id = google_id"}},{"id":"google_secret_key:String-instance-method","html_id":"google_secret_key:String-instance-method","name":"google_secret_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L29","def":{"name":"google_secret_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@google_secret_key"}},{"id":"google_secret_key=(google_secret_key:String)-instance-method","html_id":"google_secret_key=(google_secret_key:String)-instance-method","name":"google_secret_key=","doc":null,"summary":null,"abstract":false,"args":[{"name":"google_secret_key","doc":null,"default_value":"","external_name":"google_secret_key","restriction":"String"}],"args_string":"(google_secret_key : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L29","def":{"name":"google_secret_key=","args":[{"name":"google_secret_key","doc":null,"default_value":"","external_name":"google_secret_key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@google_secret_key = google_secret_key"}},{"id":"providers:Hash(String,Array(String))-instance-method","html_id":"providers:Hash(String,Array(String))-instance-method","name":"providers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, Array(String))","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L23","def":{"name":"providers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@providers"}},{"id":"providers=(providers)-instance-method","html_id":"providers=(providers)-instance-method","name":"providers=","doc":null,"summary":null,"abstract":false,"args":[{"name":"providers","doc":null,"default_value":"","external_name":"providers","restriction":""}],"args_string":"(providers)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L24","def":{"name":"providers=","args":[{"name":"providers","doc":null,"default_value":"","external_name":"providers","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@providers = providers"}},{"id":"twitter_id:String-instance-method","html_id":"twitter_id:String-instance-method","name":"twitter_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L37","def":{"name":"twitter_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@twitter_id"}},{"id":"twitter_id=(twitter_id:String)-instance-method","html_id":"twitter_id=(twitter_id:String)-instance-method","name":"twitter_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"twitter_id","doc":null,"default_value":"","external_name":"twitter_id","restriction":"String"}],"args_string":"(twitter_id : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L37","def":{"name":"twitter_id=","args":[{"name":"twitter_id","doc":null,"default_value":"","external_name":"twitter_id","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@twitter_id = twitter_id"}},{"id":"twitter_secret_key:String-instance-method","html_id":"twitter_secret_key:String-instance-method","name":"twitter_secret_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L38","def":{"name":"twitter_secret_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@twitter_secret_key"}},{"id":"twitter_secret_key=(twitter_secret_key:String)-instance-method","html_id":"twitter_secret_key=(twitter_secret_key:String)-instance-method","name":"twitter_secret_key=","doc":null,"summary":null,"abstract":false,"args":[{"name":"twitter_secret_key","doc":null,"default_value":"","external_name":"twitter_secret_key","restriction":"String"}],"args_string":"(twitter_secret_key : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L38","def":{"name":"twitter_secret_key=","args":[{"name":"twitter_secret_key","doc":null,"default_value":"","external_name":"twitter_secret_key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@twitter_secret_key = twitter_secret_key"}},{"id":"vk_id:String-instance-method","html_id":"vk_id:String-instance-method","name":"vk_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L40","def":{"name":"vk_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@vk_id"}},{"id":"vk_id=(vk_id:String)-instance-method","html_id":"vk_id=(vk_id:String)-instance-method","name":"vk_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"vk_id","doc":null,"default_value":"","external_name":"vk_id","restriction":"String"}],"args_string":"(vk_id : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L40","def":{"name":"vk_id=","args":[{"name":"vk_id","doc":null,"default_value":"","external_name":"vk_id","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@vk_id = vk_id"}},{"id":"vk_secret_key:String-instance-method","html_id":"vk_secret_key:String-instance-method","name":"vk_secret_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L41","def":{"name":"vk_secret_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@vk_secret_key"}},{"id":"vk_secret_key=(vk_secret_key:String)-instance-method","html_id":"vk_secret_key=(vk_secret_key:String)-instance-method","name":"vk_secret_key=","doc":null,"summary":null,"abstract":false,"args":[{"name":"vk_secret_key","doc":null,"default_value":"","external_name":"vk_secret_key","restriction":"String"}],"args_string":"(vk_secret_key : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/configuration.cr#L41","def":{"name":"vk_secret_key=","args":[{"name":"vk_secret_key","doc":null,"default_value":"","external_name":"vk_secret_key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@vk_secret_key = vk_secret_key"}}],"macros":[],"types":[]},{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Engine","path":"Contrive/OmniAuth/Engine.html","kind":"class","full_name":"Contrive::OmniAuth::Engine","name":"Engine","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/omniauth/engine.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/engine.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth","kind":"module","full_name":"Contrive::OmniAuth","name":"OmniAuth"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(provider:String,redirect_uri:String)-class-method","html_id":"new(provider:String,redirect_uri:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"},{"name":"redirect_uri","doc":null,"default_value":"","external_name":"redirect_uri","restriction":"String"}],"args_string":"(provider : String, redirect_uri : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/engine.cr#L2","def":{"name":"new","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"},{"name":"redirect_uri","doc":null,"default_value":"","external_name":"redirect_uri","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(provider, redirect_uri)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"authorize_uri(scope=nil)-instance-method","html_id":"authorize_uri(scope=nil)-instance-method","name":"authorize_uri","doc":null,"summary":null,"abstract":false,"args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"args_string":"(scope = <span class=\"n\">nil</span>)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/engine.cr#L11","def":{"name":"authorize_uri","args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"provider.authorize_uri(scope)"}},{"id":"provider:Provider-instance-method","html_id":"provider:Provider-instance-method","name":"provider","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Provider","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/engine.cr#L9","def":{"name":"provider","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Provider","visibility":"Public","body":"@provider"}},{"id":"user(params:Enumerable(::Tuple(String,String))):User-instance-method","html_id":"user(params:Enumerable(::Tuple(String,String))):User-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Enumerable(::Tuple(String, String))"}],"args_string":"(params : Enumerable(::Tuple(String, String))) : User","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/engine.cr#L15","def":{"name":"user","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Enumerable(::Tuple(String, String))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"User","visibility":"Public","body":"provider.user(params.to_h)"}}],"macros":[],"types":[]},{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider","path":"Contrive/OmniAuth/Provider.html","kind":"class","full_name":"Contrive::OmniAuth::Provider","name":"Provider","abstract":true,"superclass":{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/omniauth/provider.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/provider.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Facebook","kind":"class","full_name":"Contrive::OmniAuth::Provider::Facebook","name":"Facebook"},{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Github","kind":"class","full_name":"Contrive::OmniAuth::Provider::Github","name":"Github"},{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Google","kind":"class","full_name":"Contrive::OmniAuth::Provider::Google","name":"Google"},{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Twitter","kind":"class","full_name":"Contrive::OmniAuth::Provider::Twitter","name":"Twitter"},{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Vk","kind":"class","full_name":"Contrive::OmniAuth::Provider::Vk","name":"Vk"}],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth","kind":"module","full_name":"Contrive::OmniAuth","name":"OmniAuth"},"doc":null,"summary":null,"class_methods":[{"id":"authorize_uri(provider:String,url:String)-class-method","html_id":"authorize_uri(provider:String,url:String)-class-method","name":"authorize_uri","doc":null,"summary":null,"abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(provider : String, url : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/provider.cr#L12","def":{"name":"authorize_uri","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Contrive::OmniAuth.make(provider, url)).authorize_uri(scope: \"email\")"}},{"id":"user(provider:String,params:Hash(String,String),url:String)-class-method","html_id":"user(provider:String,params:Hash(String,String),url:String)-class-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(provider : String, params : Hash(String, String), url : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/provider.cr#L16","def":{"name":"user","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Contrive::OmniAuth.make(provider, url)).user(params)"}}],"constructors":[{"id":"new(redirect_uri:String,key:String,secret:String)-class-method","html_id":"new(redirect_uri:String,key:String,secret:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"redirect_uri","doc":null,"default_value":"","external_name":"redirect_uri","restriction":"String"},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"secret","doc":null,"default_value":"","external_name":"secret","restriction":"String"}],"args_string":"(redirect_uri : String, key : String, secret : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/provider.cr#L9","def":{"name":"new","args":[{"name":"redirect_uri","doc":null,"default_value":"","external_name":"redirect_uri","restriction":"String"},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"secret","doc":null,"default_value":"","external_name":"secret","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(redirect_uri, key, secret)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"authorize_uri(scope=nil)-instance-method","html_id":"authorize_uri(scope=nil)-instance-method","name":"authorize_uri","doc":null,"summary":null,"abstract":true,"args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"args_string":"(scope = <span class=\"n\">nil</span>)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/provider.cr#L6","def":{"name":"authorize_uri","args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"key:String-instance-method","html_id":"key:String-instance-method","name":"key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/provider.cr#L3","def":{"name":"key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@key"}},{"id":"redirect_uri:String-instance-method","html_id":"redirect_uri:String-instance-method","name":"redirect_uri","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/provider.cr#L2","def":{"name":"redirect_uri","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@redirect_uri"}},{"id":"secret:String-instance-method","html_id":"secret:String-instance-method","name":"secret","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/provider.cr#L4","def":{"name":"secret","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@secret"}},{"id":"user(params:Hash(String,String))-instance-method","html_id":"user(params:Hash(String,String))-instance-method","name":"user","doc":null,"summary":null,"abstract":true,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"args_string":"(params : Hash(String, String))","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/provider.cr#L7","def":{"name":"user","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Facebook","path":"Contrive/OmniAuth/Provider/Facebook.html","kind":"class","full_name":"Contrive::OmniAuth::Provider::Facebook","name":"Facebook","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider","kind":"class","full_name":"Contrive::OmniAuth::Provider","name":"Provider"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider","kind":"class","full_name":"Contrive::OmniAuth::Provider","name":"Provider"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/omniauth/providers/facebook.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/facebook.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider","kind":"class","full_name":"Contrive::OmniAuth::Provider","name":"Provider"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"authorize_uri(scope=nil)-instance-method","html_id":"authorize_uri(scope=nil)-instance-method","name":"authorize_uri","doc":null,"summary":null,"abstract":false,"args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"args_string":"(scope = <span class=\"n\">nil</span>)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/facebook.cr#L2","def":{"name":"authorize_uri","args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"scope || (scope = \"email\")\nclient.get_authorize_uri(scope)\n"}},{"id":"user(params:Hash(String,String))-instance-method","html_id":"user(params:Hash(String,String))-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"args_string":"(params : Hash(String, String))","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/facebook.cr#L7","def":{"name":"user","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"fetch_fb_user(params[\"code\"])"}}],"macros":[],"types":[{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Facebook/FbUser","path":"Contrive/OmniAuth/Provider/Facebook/FbUser.html","kind":"class","full_name":"Contrive::OmniAuth::Provider::Facebook::FbUser","name":"FbUser","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/User","kind":"class","full_name":"Contrive::OmniAuth::User","name":"User"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/User","kind":"class","full_name":"Contrive::OmniAuth::User","name":"User"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/omniauth/providers/facebook.cr","line_number":11,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/facebook.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Facebook","kind":"class","full_name":"Contrive::OmniAuth::Provider::Facebook","name":"Facebook"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_94:JSON::PullParser)-class-method","html_id":"new(__temp_94:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_94","doc":null,"default_value":"","external_name":"__temp_94","restriction":"::JSON::PullParser"}],"args_string":"(__temp_94 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_94","doc":null,"default_value":"","external_name":"__temp_94","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_94)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"about:::Union(String,Nil)-instance-method","html_id":"about:::Union(String,Nil)-instance-method","name":"about","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"about","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@about"}},{"id":"about=(_about:::Union(String,Nil))-instance-method","html_id":"about=(_about:::Union(String,Nil))-instance-method","name":"about=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_about","doc":null,"default_value":"","external_name":"_about","restriction":"::Union(String, ::Nil)"}],"args_string":"(_about : ::Union(String, Nil))","source_link":null,"def":{"name":"about=","args":[{"name":"_about","doc":null,"default_value":"","external_name":"_about","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@about = _about"}},{"id":"access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil-instance-method","html_id":"access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil-instance-method","name":"access_token","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OAuth::AccessToken | Nil | OAuth2::AccessToken | Nil","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/facebook.cr#L13","def":{"name":"access_token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OAuth::AccessToken | ::Nil | OAuth2::AccessToken | ::Nil","visibility":"Public","body":"@access_token"}},{"id":"access_token=(access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil)-instance-method","html_id":"access_token=(access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil)-instance-method","name":"access_token=","doc":null,"summary":null,"abstract":false,"args":[{"name":"access_token","doc":null,"default_value":"","external_name":"access_token","restriction":"OAuth::AccessToken | ::Nil | OAuth2::AccessToken | ::Nil"}],"args_string":"(access_token : OAuth::AccessToken | Nil | OAuth2::AccessToken | Nil)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/facebook.cr#L13","def":{"name":"access_token=","args":[{"name":"access_token","doc":null,"default_value":"","external_name":"access_token","restriction":"OAuth::AccessToken | ::Nil | OAuth2::AccessToken | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@access_token = access_token"}},{"id":"description-instance-method","html_id":"description-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/facebook.cr#L28","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.about"}},{"id":"email:String-instance-method","html_id":"email:String-instance-method","name":"email","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"email","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@email"}},{"id":"email=(_email:String)-instance-method","html_id":"email=(_email:String)-instance-method","name":"email=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_email","doc":null,"default_value":"","external_name":"_email","restriction":"String"}],"args_string":"(_email : String)","source_link":null,"def":{"name":"email=","args":[{"name":"_email","doc":null,"default_value":"","external_name":"_email","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@email = _email"}},{"id":"first_name:::Union(String,Nil)-instance-method","html_id":"first_name:::Union(String,Nil)-instance-method","name":"first_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"first_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@first_name"}},{"id":"first_name=(_first_name:::Union(String,Nil))-instance-method","html_id":"first_name=(_first_name:::Union(String,Nil))-instance-method","name":"first_name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_first_name","doc":null,"default_value":"","external_name":"_first_name","restriction":"::Union(String, ::Nil)"}],"args_string":"(_first_name : ::Union(String, Nil))","source_link":null,"def":{"name":"first_name=","args":[{"name":"_first_name","doc":null,"default_value":"","external_name":"_first_name","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@first_name = _first_name"}},{"id":"image-instance-method","html_id":"image-instance-method","name":"image","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/facebook.cr#L38","def":{"name":"image","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.picture_url"}},{"id":"last_name:::Union(String,Nil)-instance-method","html_id":"last_name:::Union(String,Nil)-instance-method","name":"last_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"last_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@last_name"}},{"id":"last_name=(_last_name:::Union(String,Nil))-instance-method","html_id":"last_name=(_last_name:::Union(String,Nil))-instance-method","name":"last_name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_last_name","doc":null,"default_value":"","external_name":"_last_name","restriction":"::Union(String, ::Nil)"}],"args_string":"(_last_name : ::Union(String, Nil))","source_link":null,"def":{"name":"last_name=","args":[{"name":"_last_name","doc":null,"default_value":"","external_name":"_last_name","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@last_name = _last_name"}},{"id":"location:::Union(String,Nil)-instance-method","html_id":"location:::Union(String,Nil)-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"location","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@location"}},{"id":"location=(_location:::Union(String,Nil))-instance-method","html_id":"location=(_location:::Union(String,Nil))-instance-method","name":"location=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_location","doc":null,"default_value":"","external_name":"_location","restriction":"::Union(String, ::Nil)"}],"args_string":"(_location : ::Union(String, Nil))","source_link":null,"def":{"name":"location=","args":[{"name":"_location","doc":null,"default_value":"","external_name":"_location","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@location = _location"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"picture_url:String?-instance-method","html_id":"picture_url:String?-instance-method","name":"picture_url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/facebook.cr#L14","def":{"name":"picture_url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@picture_url"}},{"id":"picture_url=(picture_url:String?)-instance-method","html_id":"picture_url=(picture_url:String?)-instance-method","name":"picture_url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"picture_url","doc":null,"default_value":"","external_name":"picture_url","restriction":"String | ::Nil"}],"args_string":"(picture_url : String?)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/facebook.cr#L14","def":{"name":"picture_url=","args":[{"name":"picture_url","doc":null,"default_value":"","external_name":"picture_url","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@picture_url = picture_url"}},{"id":"provider:String-instance-method","html_id":"provider:String-instance-method","name":"provider","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/facebook.cr#L15","def":{"name":"provider","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@provider"}},{"id":"provider=(provider:String)-instance-method","html_id":"provider=(provider:String)-instance-method","name":"provider=","doc":null,"summary":null,"abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"}],"args_string":"(provider : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/facebook.cr#L15","def":{"name":"provider=","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@provider = provider"}},{"id":"raw_json:String?-instance-method","html_id":"raw_json:String?-instance-method","name":"raw_json","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/facebook.cr#L12","def":{"name":"raw_json","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@raw_json"}},{"id":"raw_json=(raw_json:String?)-instance-method","html_id":"raw_json=(raw_json:String?)-instance-method","name":"raw_json=","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw_json","doc":null,"default_value":"","external_name":"raw_json","restriction":"String | ::Nil"}],"args_string":"(raw_json : String?)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/facebook.cr#L12","def":{"name":"raw_json=","args":[{"name":"raw_json","doc":null,"default_value":"","external_name":"raw_json","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw_json = raw_json"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _uid = @uid\n  if _uid.nil?\n  else\n    json.field(\"id\") do\n      _uid.to_json(json)\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _last_name = @last_name\n  if _last_name.nil?\n  else\n    json.field(\"last_name\") do\n      _last_name.to_json(json)\n    end\n  end\n  _first_name = @first_name\n  if _first_name.nil?\n  else\n    json.field(\"first_name\") do\n      _first_name.to_json(json)\n    end\n  end\n  _email = @email\n  if _email.nil?\n  else\n    json.field(\"email\") do\n      _email.to_json(json)\n    end\n  end\n  _location = @location\n  if _location.nil?\n  else\n    json.field(\"location\") do\n      _location.to_json(json)\n    end\n  end\n  _about = @about\n  if _about.nil?\n  else\n    json.field(\"about\") do\n      _about.to_json(json)\n    end\n  end\n  _website = @website\n  if _website.nil?\n  else\n    json.field(\"website\") do\n      _website.to_json(json)\n    end\n  end\nend"}},{"id":"uid:String-instance-method","html_id":"uid:String-instance-method","name":"uid","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"uid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@uid"}},{"id":"uid=(_uid:String)-instance-method","html_id":"uid=(_uid:String)-instance-method","name":"uid=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_uid","doc":null,"default_value":"","external_name":"_uid","restriction":"String"}],"args_string":"(_uid : String)","source_link":null,"def":{"name":"uid=","args":[{"name":"_uid","doc":null,"default_value":"","external_name":"_uid","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@uid = _uid"}},{"id":"urls-instance-method","html_id":"urls-instance-method","name":"urls","doc":"abstract def nickname\nabstract def image","summary":"<p>abstract def nickname abstract def image</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/facebook.cr#L32","def":{"name":"urls","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"urls = {} of String => String\nif self.website\n  urls[\"web\"] = self.website.as(String)\nend\nurls.empty? ? Nil : urls\n"}},{"id":"website:::Union(String,Nil)-instance-method","html_id":"website:::Union(String,Nil)-instance-method","name":"website","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"website","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@website"}},{"id":"website=(_website:::Union(String,Nil))-instance-method","html_id":"website=(_website:::Union(String,Nil))-instance-method","name":"website=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_website","doc":null,"default_value":"","external_name":"_website","restriction":"::Union(String, ::Nil)"}],"args_string":"(_website : ::Union(String, Nil))","source_link":null,"def":{"name":"website=","args":[{"name":"_website","doc":null,"default_value":"","external_name":"_website","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@website = _website"}}],"macros":[],"types":[]}]},{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Github","path":"Contrive/OmniAuth/Provider/Github.html","kind":"class","full_name":"Contrive::OmniAuth::Provider::Github","name":"Github","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider","kind":"class","full_name":"Contrive::OmniAuth::Provider","name":"Provider"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider","kind":"class","full_name":"Contrive::OmniAuth::Provider","name":"Provider"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/omniauth/providers/github.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/github.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider","kind":"class","full_name":"Contrive::OmniAuth::Provider","name":"Provider"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"authorize_uri(scope=nil)-instance-method","html_id":"authorize_uri(scope=nil)-instance-method","name":"authorize_uri","doc":null,"summary":null,"abstract":false,"args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"args_string":"(scope = <span class=\"n\">nil</span>)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/github.cr#L2","def":{"name":"authorize_uri","args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"scope || (scope = \"user:email\")\nclient.get_authorize_uri(scope)\n"}},{"id":"user(params:Hash(String,String))-instance-method","html_id":"user(params:Hash(String,String))-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"args_string":"(params : Hash(String, String))","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/github.cr#L7","def":{"name":"user","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"fetch_gh_user(params[\"code\"])"}}],"macros":[],"types":[{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Github/GhUser","path":"Contrive/OmniAuth/Provider/Github/GhUser.html","kind":"class","full_name":"Contrive::OmniAuth::Provider::Github::GhUser","name":"GhUser","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/User","kind":"class","full_name":"Contrive::OmniAuth::User","name":"User"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/User","kind":"class","full_name":"Contrive::OmniAuth::User","name":"User"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/omniauth/providers/github.cr","line_number":11,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/github.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Github","kind":"class","full_name":"Contrive::OmniAuth::Provider::Github","name":"Github"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_113:JSON::PullParser)-class-method","html_id":"new(__temp_113:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_113","doc":null,"default_value":"","external_name":"__temp_113","restriction":"::JSON::PullParser"}],"args_string":"(__temp_113 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_113","doc":null,"default_value":"","external_name":"__temp_113","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_113)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil-instance-method","html_id":"access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil-instance-method","name":"access_token","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OAuth::AccessToken | Nil | OAuth2::AccessToken | Nil","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/github.cr#L13","def":{"name":"access_token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OAuth::AccessToken | ::Nil | OAuth2::AccessToken | ::Nil","visibility":"Public","body":"@access_token"}},{"id":"access_token=(access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil)-instance-method","html_id":"access_token=(access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil)-instance-method","name":"access_token=","doc":null,"summary":null,"abstract":false,"args":[{"name":"access_token","doc":null,"default_value":"","external_name":"access_token","restriction":"OAuth::AccessToken | ::Nil | OAuth2::AccessToken | ::Nil"}],"args_string":"(access_token : OAuth::AccessToken | Nil | OAuth2::AccessToken | Nil)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/github.cr#L13","def":{"name":"access_token=","args":[{"name":"access_token","doc":null,"default_value":"","external_name":"access_token","restriction":"OAuth::AccessToken | ::Nil | OAuth2::AccessToken | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@access_token = access_token"}},{"id":"avatar_url:::Union(String,Nil)-instance-method","html_id":"avatar_url:::Union(String,Nil)-instance-method","name":"avatar_url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"avatar_url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@avatar_url"}},{"id":"avatar_url=(_avatar_url:::Union(String,Nil))-instance-method","html_id":"avatar_url=(_avatar_url:::Union(String,Nil))-instance-method","name":"avatar_url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_avatar_url","doc":null,"default_value":"","external_name":"_avatar_url","restriction":"::Union(String, ::Nil)"}],"args_string":"(_avatar_url : ::Union(String, Nil))","source_link":null,"def":{"name":"avatar_url=","args":[{"name":"_avatar_url","doc":null,"default_value":"","external_name":"_avatar_url","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@avatar_url = _avatar_url"}},{"id":"bio:::Union(String,Nil)-instance-method","html_id":"bio:::Union(String,Nil)-instance-method","name":"bio","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"bio","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@bio"}},{"id":"bio=(_bio:::Union(String,Nil))-instance-method","html_id":"bio=(_bio:::Union(String,Nil))-instance-method","name":"bio=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_bio","doc":null,"default_value":"","external_name":"_bio","restriction":"::Union(String, ::Nil)"}],"args_string":"(_bio : ::Union(String, Nil))","source_link":null,"def":{"name":"bio=","args":[{"name":"_bio","doc":null,"default_value":"","external_name":"_bio","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bio = _bio"}},{"id":"blog:::Union(String,Nil)-instance-method","html_id":"blog:::Union(String,Nil)-instance-method","name":"blog","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"blog","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@blog"}},{"id":"blog=(_blog:::Union(String,Nil))-instance-method","html_id":"blog=(_blog:::Union(String,Nil))-instance-method","name":"blog=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_blog","doc":null,"default_value":"","external_name":"_blog","restriction":"::Union(String, ::Nil)"}],"args_string":"(_blog : ::Union(String, Nil))","source_link":null,"def":{"name":"blog=","args":[{"name":"_blog","doc":null,"default_value":"","external_name":"_blog","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@blog = _blog"}},{"id":"description-instance-method","html_id":"description-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/github.cr#L32","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.bio"}},{"id":"email:String-instance-method","html_id":"email:String-instance-method","name":"email","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"email","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@email"}},{"id":"email=(_email:String)-instance-method","html_id":"email=(_email:String)-instance-method","name":"email=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_email","doc":null,"default_value":"","external_name":"_email","restriction":"String"}],"args_string":"(_email : String)","source_link":null,"def":{"name":"email=","args":[{"name":"_email","doc":null,"default_value":"","external_name":"_email","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@email = _email"}},{"id":"html_url:::Union(String,Nil)-instance-method","html_id":"html_url:::Union(String,Nil)-instance-method","name":"html_url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"html_url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@html_url"}},{"id":"html_url=(_html_url:::Union(String,Nil))-instance-method","html_id":"html_url=(_html_url:::Union(String,Nil))-instance-method","name":"html_url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_html_url","doc":null,"default_value":"","external_name":"_html_url","restriction":"::Union(String, ::Nil)"}],"args_string":"(_html_url : ::Union(String, Nil))","source_link":null,"def":{"name":"html_url=","args":[{"name":"_html_url","doc":null,"default_value":"","external_name":"_html_url","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@html_url = _html_url"}},{"id":"image-instance-method","html_id":"image-instance-method","name":"image","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/github.cr#L36","def":{"name":"image","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.avatar_url"}},{"id":"location:::Union(String,Nil)-instance-method","html_id":"location:::Union(String,Nil)-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"location","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@location"}},{"id":"location=(_location:::Union(String,Nil))-instance-method","html_id":"location=(_location:::Union(String,Nil))-instance-method","name":"location=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_location","doc":null,"default_value":"","external_name":"_location","restriction":"::Union(String, ::Nil)"}],"args_string":"(_location : ::Union(String, Nil))","source_link":null,"def":{"name":"location=","args":[{"name":"_location","doc":null,"default_value":"","external_name":"_location","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@location = _location"}},{"id":"login:String-instance-method","html_id":"login:String-instance-method","name":"login","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"login","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@login"}},{"id":"login=(_login:String)-instance-method","html_id":"login=(_login:String)-instance-method","name":"login=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_login","doc":null,"default_value":"","external_name":"_login","restriction":"String"}],"args_string":"(_login : String)","source_link":null,"def":{"name":"login=","args":[{"name":"_login","doc":null,"default_value":"","external_name":"_login","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@login = _login"}},{"id":"name:::Union(String,Nil)-instance-method","html_id":"name:::Union(String,Nil)-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@name"}},{"id":"name=(_name:::Union(String,Nil))-instance-method","html_id":"name=(_name:::Union(String,Nil))-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"::Union(String, ::Nil)"}],"args_string":"(_name : ::Union(String, Nil))","source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"nickname-instance-method","html_id":"nickname-instance-method","name":"nickname","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/github.cr#L28","def":{"name":"nickname","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.login"}},{"id":"provider:String-instance-method","html_id":"provider:String-instance-method","name":"provider","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/github.cr#L14","def":{"name":"provider","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@provider"}},{"id":"provider=(provider:String)-instance-method","html_id":"provider=(provider:String)-instance-method","name":"provider=","doc":null,"summary":null,"abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"}],"args_string":"(provider : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/github.cr#L14","def":{"name":"provider=","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@provider = provider"}},{"id":"raw_json:String?-instance-method","html_id":"raw_json:String?-instance-method","name":"raw_json","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/github.cr#L12","def":{"name":"raw_json","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@raw_json"}},{"id":"raw_json=(raw_json:String?)-instance-method","html_id":"raw_json=(raw_json:String?)-instance-method","name":"raw_json=","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw_json","doc":null,"default_value":"","external_name":"raw_json","restriction":"String | ::Nil"}],"args_string":"(raw_json : String?)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/github.cr#L12","def":{"name":"raw_json=","args":[{"name":"raw_json","doc":null,"default_value":"","external_name":"raw_json","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw_json = raw_json"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _uid = @uid\n  if _uid.nil?\n  else\n    json.field(\"id\") do\n      if _uid\n        String::RawConverter.to_json(_uid, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _email = @email\n  if _email.nil?\n  else\n    json.field(\"email\") do\n      _email.to_json(json)\n    end\n  end\n  _login = @login\n  if _login.nil?\n  else\n    json.field(\"login\") do\n      _login.to_json(json)\n    end\n  end\n  _location = @location\n  if _location.nil?\n  else\n    json.field(\"location\") do\n      _location.to_json(json)\n    end\n  end\n  _bio = @bio\n  if _bio.nil?\n  else\n    json.field(\"bio\") do\n      _bio.to_json(json)\n    end\n  end\n  _avatar_url = @avatar_url\n  if _avatar_url.nil?\n  else\n    json.field(\"avatar_url\") do\n      _avatar_url.to_json(json)\n    end\n  end\n  _blog = @blog\n  if _blog.nil?\n  else\n    json.field(\"blog\") do\n      _blog.to_json(json)\n    end\n  end\n  _html_url = @html_url\n  if _html_url.nil?\n  else\n    json.field(\"html_url\") do\n      _html_url.to_json(json)\n    end\n  end\nend"}},{"id":"uid:String-instance-method","html_id":"uid:String-instance-method","name":"uid","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"uid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@uid"}},{"id":"uid=(_uid:String)-instance-method","html_id":"uid=(_uid:String)-instance-method","name":"uid=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_uid","doc":null,"default_value":"","external_name":"_uid","restriction":"String"}],"args_string":"(_uid : String)","source_link":null,"def":{"name":"uid=","args":[{"name":"_uid","doc":null,"default_value":"","external_name":"_uid","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@uid = _uid"}},{"id":"urls-instance-method","html_id":"urls-instance-method","name":"urls","doc":"abstract def nickname\nabstract def image","summary":"<p>abstract def nickname abstract def image</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/github.cr#L40","def":{"name":"urls","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"urls = {} of String => String\nif self.blog\n  urls[\"blog\"] = self.blog.as(String)\nend\nif self.html_url\n  urls[\"github\"] = self.html_url.as(String)\nend\nurls.empty? ? Nil : urls\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Google","path":"Contrive/OmniAuth/Provider/Google.html","kind":"class","full_name":"Contrive::OmniAuth::Provider::Google","name":"Google","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider","kind":"class","full_name":"Contrive::OmniAuth::Provider","name":"Provider"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider","kind":"class","full_name":"Contrive::OmniAuth::Provider","name":"Provider"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/omniauth/providers/google.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/google.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider","kind":"class","full_name":"Contrive::OmniAuth::Provider","name":"Provider"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"authorize_uri(scope=nil)-instance-method","html_id":"authorize_uri(scope=nil)-instance-method","name":"authorize_uri","doc":null,"summary":null,"abstract":false,"args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"args_string":"(scope = <span class=\"n\">nil</span>)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/google.cr#L2","def":{"name":"authorize_uri","args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"defaults = [\"https://www.googleapis.com/auth/user.emails.read\", \"https://www.googleapis.com/auth/user.phonenumbers.read\", \"https://www.googleapis.com/auth/user.addresses.read\", \"https://www.googleapis.com/auth/plus.login\", \"https://www.googleapis.com/auth/contacts.readonly\"]\nscope || (scope = defaults.join(\" \"))\nclient = OAuth2::Client.new(\"accounts.google.com\", key, secret, authorize_uri: \"/o/oauth2/v2/auth\", redirect_uri: redirect_uri)\nclient.get_authorize_uri(scope)\n"}},{"id":"user(params:Hash(String,String))-instance-method","html_id":"user(params:Hash(String,String))-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"args_string":"(params : Hash(String, String))","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/google.cr#L24","def":{"name":"user","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"client = OAuth2::Client.new(\"www.googleapis.com\", key, secret, token_uri: \"/oauth2/v4/token\", redirect_uri: redirect_uri)\naccess_token = client.get_access_token_using_authorization_code(params[\"code\"])\napi = HTTP::Client.new(\"people.googleapis.com\", tls: true)\naccess_token.authenticate(api)\nfields = [\"addresses\", \"biographies\", \"bragging_rights\", \"cover_photos\", \"email_addresses\", \"im_clients\", \"interests\", \"names\", \"nicknames\", \"phone_numbers\", \"photos\", \"urls\"].join(\",\")\nraw_json = (api.get(\"/v1/people/me?personFields=#{fields}\")).body\nbuild_user(raw_json, access_token)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Twitter","path":"Contrive/OmniAuth/Provider/Twitter.html","kind":"class","full_name":"Contrive::OmniAuth::Provider::Twitter","name":"Twitter","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider","kind":"class","full_name":"Contrive::OmniAuth::Provider","name":"Provider"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider","kind":"class","full_name":"Contrive::OmniAuth::Provider","name":"Provider"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/omniauth/providers/twitter.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/twitter.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider","kind":"class","full_name":"Contrive::OmniAuth::Provider","name":"Provider"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"authorize_uri(scope=nil)-instance-method","html_id":"authorize_uri(scope=nil)-instance-method","name":"authorize_uri","doc":null,"summary":null,"abstract":false,"args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"args_string":"(scope = <span class=\"n\">nil</span>)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/twitter.cr#L2","def":{"name":"authorize_uri","args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request_token = consumer.get_request_token(redirect_uri)\nconsumer.get_authorize_uri(request_token, redirect_uri)\n"}},{"id":"user(params:Hash(String,String))-instance-method","html_id":"user(params:Hash(String,String))-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"args_string":"(params : Hash(String, String))","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/twitter.cr#L7","def":{"name":"user","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"fetch_tw_user(params[\"oauth_token\"], params[\"oauth_verifier\"])"}}],"macros":[],"types":[{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Twitter/TwUser","path":"Contrive/OmniAuth/Provider/Twitter/TwUser.html","kind":"class","full_name":"Contrive::OmniAuth::Provider::Twitter::TwUser","name":"TwUser","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/User","kind":"class","full_name":"Contrive::OmniAuth::User","name":"User"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/User","kind":"class","full_name":"Contrive::OmniAuth::User","name":"User"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/omniauth/providers/twitter.cr","line_number":11,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/twitter.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Twitter","kind":"class","full_name":"Contrive::OmniAuth::Provider::Twitter","name":"Twitter"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_134:JSON::PullParser)-class-method","html_id":"new(__temp_134:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_134","doc":null,"default_value":"","external_name":"__temp_134","restriction":"::JSON::PullParser"}],"args_string":"(__temp_134 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_134","doc":null,"default_value":"","external_name":"__temp_134","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_134)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil-instance-method","html_id":"access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil-instance-method","name":"access_token","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OAuth::AccessToken | Nil | OAuth2::AccessToken | Nil","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/twitter.cr#L13","def":{"name":"access_token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OAuth::AccessToken | ::Nil | OAuth2::AccessToken | ::Nil","visibility":"Public","body":"@access_token"}},{"id":"access_token=(access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil)-instance-method","html_id":"access_token=(access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil)-instance-method","name":"access_token=","doc":null,"summary":null,"abstract":false,"args":[{"name":"access_token","doc":null,"default_value":"","external_name":"access_token","restriction":"OAuth::AccessToken | ::Nil | OAuth2::AccessToken | ::Nil"}],"args_string":"(access_token : OAuth::AccessToken | Nil | OAuth2::AccessToken | Nil)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/twitter.cr#L13","def":{"name":"access_token=","args":[{"name":"access_token","doc":null,"default_value":"","external_name":"access_token","restriction":"OAuth::AccessToken | ::Nil | OAuth2::AccessToken | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@access_token = access_token"}},{"id":"description:::Union(String,Nil)-instance-method","html_id":"description:::Union(String,Nil)-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@description"}},{"id":"description=(_description:::Union(String,Nil))-instance-method","html_id":"description=(_description:::Union(String,Nil))-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"::Union(String, ::Nil)"}],"args_string":"(_description : ::Union(String, Nil))","source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"email:String-instance-method","html_id":"email:String-instance-method","name":"email","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"email","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@email"}},{"id":"email=(_email:String)-instance-method","html_id":"email=(_email:String)-instance-method","name":"email=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_email","doc":null,"default_value":"","external_name":"_email","restriction":"String"}],"args_string":"(_email : String)","source_link":null,"def":{"name":"email=","args":[{"name":"_email","doc":null,"default_value":"","external_name":"_email","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@email = _email"}},{"id":"image-instance-method","html_id":"image-instance-method","name":"image","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/twitter.cr#L31","def":{"name":"image","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.profile_image_url"}},{"id":"location:::Union(String,Nil)-instance-method","html_id":"location:::Union(String,Nil)-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"location","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@location"}},{"id":"location=(_location:::Union(String,Nil))-instance-method","html_id":"location=(_location:::Union(String,Nil))-instance-method","name":"location=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_location","doc":null,"default_value":"","external_name":"_location","restriction":"::Union(String, ::Nil)"}],"args_string":"(_location : ::Union(String, Nil))","source_link":null,"def":{"name":"location=","args":[{"name":"_location","doc":null,"default_value":"","external_name":"_location","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@location = _location"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"nickname-instance-method","html_id":"nickname-instance-method","name":"nickname","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/twitter.cr#L27","def":{"name":"nickname","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.screen_name"}},{"id":"profile_image_url:::Union(String,Nil)-instance-method","html_id":"profile_image_url:::Union(String,Nil)-instance-method","name":"profile_image_url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"profile_image_url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@profile_image_url"}},{"id":"profile_image_url=(_profile_image_url:::Union(String,Nil))-instance-method","html_id":"profile_image_url=(_profile_image_url:::Union(String,Nil))-instance-method","name":"profile_image_url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_profile_image_url","doc":null,"default_value":"","external_name":"_profile_image_url","restriction":"::Union(String, ::Nil)"}],"args_string":"(_profile_image_url : ::Union(String, Nil))","source_link":null,"def":{"name":"profile_image_url=","args":[{"name":"_profile_image_url","doc":null,"default_value":"","external_name":"_profile_image_url","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@profile_image_url = _profile_image_url"}},{"id":"provider:String-instance-method","html_id":"provider:String-instance-method","name":"provider","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/twitter.cr#L14","def":{"name":"provider","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@provider"}},{"id":"provider=(provider:String)-instance-method","html_id":"provider=(provider:String)-instance-method","name":"provider=","doc":null,"summary":null,"abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"}],"args_string":"(provider : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/twitter.cr#L14","def":{"name":"provider=","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@provider = provider"}},{"id":"raw_json:String?-instance-method","html_id":"raw_json:String?-instance-method","name":"raw_json","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/twitter.cr#L12","def":{"name":"raw_json","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@raw_json"}},{"id":"raw_json=(raw_json:String?)-instance-method","html_id":"raw_json=(raw_json:String?)-instance-method","name":"raw_json=","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw_json","doc":null,"default_value":"","external_name":"raw_json","restriction":"String | ::Nil"}],"args_string":"(raw_json : String?)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/twitter.cr#L12","def":{"name":"raw_json=","args":[{"name":"raw_json","doc":null,"default_value":"","external_name":"raw_json","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw_json = raw_json"}},{"id":"screen_name:String-instance-method","html_id":"screen_name:String-instance-method","name":"screen_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"screen_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@screen_name"}},{"id":"screen_name=(_screen_name:String)-instance-method","html_id":"screen_name=(_screen_name:String)-instance-method","name":"screen_name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_screen_name","doc":null,"default_value":"","external_name":"_screen_name","restriction":"String"}],"args_string":"(_screen_name : String)","source_link":null,"def":{"name":"screen_name=","args":[{"name":"_screen_name","doc":null,"default_value":"","external_name":"_screen_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@screen_name = _screen_name"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _uid = @uid\n  if _uid.nil?\n  else\n    json.field(\"id\") do\n      if _uid\n        String::RawConverter.to_json(_uid, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _screen_name = @screen_name\n  if _screen_name.nil?\n  else\n    json.field(\"screen_name\") do\n      _screen_name.to_json(json)\n    end\n  end\n  _location = @location\n  if _location.nil?\n  else\n    json.field(\"location\") do\n      _location.to_json(json)\n    end\n  end\n  _description = @description\n  if _description.nil?\n  else\n    json.field(\"description\") do\n      _description.to_json(json)\n    end\n  end\n  _url = @url\n  if _url.nil?\n  else\n    json.field(\"url\") do\n      _url.to_json(json)\n    end\n  end\n  _profile_image_url = @profile_image_url\n  if _profile_image_url.nil?\n  else\n    json.field(\"profile_image_url\") do\n      _profile_image_url.to_json(json)\n    end\n  end\n  _email = @email\n  if _email.nil?\n  else\n    json.field(\"email\") do\n      _email.to_json(json)\n    end\n  end\nend"}},{"id":"uid:String-instance-method","html_id":"uid:String-instance-method","name":"uid","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"uid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@uid"}},{"id":"uid=(_uid:String)-instance-method","html_id":"uid=(_uid:String)-instance-method","name":"uid=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_uid","doc":null,"default_value":"","external_name":"_uid","restriction":"String"}],"args_string":"(_uid : String)","source_link":null,"def":{"name":"uid=","args":[{"name":"_uid","doc":null,"default_value":"","external_name":"_uid","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@uid = _uid"}},{"id":"url:::Union(String,Nil)-instance-method","html_id":"url:::Union(String,Nil)-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@url"}},{"id":"url=(_url:::Union(String,Nil))-instance-method","html_id":"url=(_url:::Union(String,Nil))-instance-method","name":"url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"::Union(String, ::Nil)"}],"args_string":"(_url : ::Union(String, Nil))","source_link":null,"def":{"name":"url=","args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = _url"}},{"id":"urls-instance-method","html_id":"urls-instance-method","name":"urls","doc":"abstract def nickname\nabstract def image","summary":"<p>abstract def nickname abstract def image</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/twitter.cr#L35","def":{"name":"urls","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{\"twitter\" => self.url}"}}],"macros":[],"types":[]}]},{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Vk","path":"Contrive/OmniAuth/Provider/Vk.html","kind":"class","full_name":"Contrive::OmniAuth::Provider::Vk","name":"Vk","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider","kind":"class","full_name":"Contrive::OmniAuth::Provider","name":"Provider"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider","kind":"class","full_name":"Contrive::OmniAuth::Provider","name":"Provider"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/omniauth/providers/vk.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/vk.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider","kind":"class","full_name":"Contrive::OmniAuth::Provider","name":"Provider"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"authorize_uri(scope=nil)-instance-method","html_id":"authorize_uri(scope=nil)-instance-method","name":"authorize_uri","doc":null,"summary":null,"abstract":false,"args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"args_string":"(scope = <span class=\"n\">nil</span>)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/vk.cr#L2","def":{"name":"authorize_uri","args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@scope = \"email\"\nclient.get_authorize_uri(@scope)\n"}},{"id":"user(params:Hash(String,String))-instance-method","html_id":"user(params:Hash(String,String))-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"args_string":"(params : Hash(String, String))","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/vk.cr#L7","def":{"name":"user","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"fetch_vk_user(params[\"code\"])"}}],"macros":[],"types":[{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Vk/VkResponse","path":"Contrive/OmniAuth/Provider/Vk/VkResponse.html","kind":"class","full_name":"Contrive::OmniAuth::Provider::Vk::VkResponse","name":"VkResponse","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/omniauth/providers/vk.cr","line_number":71,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/vk.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Vk","kind":"class","full_name":"Contrive::OmniAuth::Provider::Vk","name":"Vk"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_183:JSON::PullParser)-class-method","html_id":"new(__temp_183:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_183","doc":null,"default_value":"","external_name":"__temp_183","restriction":"::JSON::PullParser"}],"args_string":"(__temp_183 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_183","doc":null,"default_value":"","external_name":"__temp_183","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_183)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"response:Array(VkUser)-instance-method","html_id":"response:Array(VkUser)-instance-method","name":"response","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(VkUser)","source_link":null,"def":{"name":"response","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(VkUser)","visibility":"Public","body":"@response"}},{"id":"response=(_response:Array(VkUser))-instance-method","html_id":"response=(_response:Array(VkUser))-instance-method","name":"response=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_response","doc":null,"default_value":"","external_name":"_response","restriction":"Array(VkUser)"}],"args_string":"(_response : Array(VkUser))","source_link":null,"def":{"name":"response=","args":[{"name":"_response","doc":null,"default_value":"","external_name":"_response","restriction":"Array(VkUser)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@response = _response"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _response = @response\n  if _response.nil?\n  else\n    json.field(\"response\") do\n      _response.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Vk/VkTitle","path":"Contrive/OmniAuth/Provider/Vk/VkTitle.html","kind":"class","full_name":"Contrive::OmniAuth::Provider::Vk::VkTitle","name":"VkTitle","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/omniauth/providers/vk.cr","line_number":11,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/vk.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Vk","kind":"class","full_name":"Contrive::OmniAuth::Provider::Vk","name":"Vk"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_153:JSON::PullParser)-class-method","html_id":"new(__temp_153:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_153","doc":null,"default_value":"","external_name":"__temp_153","restriction":"::JSON::PullParser"}],"args_string":"(__temp_153 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_153","doc":null,"default_value":"","external_name":"__temp_153","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_153)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"title:String-instance-method","html_id":"title:String-instance-method","name":"title","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"title","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@title"}},{"id":"title=(_title:String)-instance-method","html_id":"title=(_title:String)-instance-method","name":"title=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_title","doc":null,"default_value":"","external_name":"_title","restriction":"String"}],"args_string":"(_title : String)","source_link":null,"def":{"name":"title=","args":[{"name":"_title","doc":null,"default_value":"","external_name":"_title","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@title = _title"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _title = @title\n  if _title.nil?\n  else\n    json.field(\"title\") do\n      _title.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Vk/VkUser","path":"Contrive/OmniAuth/Provider/Vk/VkUser.html","kind":"class","full_name":"Contrive::OmniAuth::Provider::Vk::VkUser","name":"VkUser","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/User","kind":"class","full_name":"Contrive::OmniAuth::User","name":"User"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/User","kind":"class","full_name":"Contrive::OmniAuth::User","name":"User"},{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/omniauth/providers/vk.cr","line_number":17,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/vk.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Vk","kind":"class","full_name":"Contrive::OmniAuth::Provider::Vk","name":"Vk"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_158:JSON::PullParser)-class-method","html_id":"new(__temp_158:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_158","doc":null,"default_value":"","external_name":"__temp_158","restriction":"::JSON::PullParser"}],"args_string":"(__temp_158 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_158","doc":null,"default_value":"","external_name":"__temp_158","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_158)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"about:::Union(String,Nil)-instance-method","html_id":"about:::Union(String,Nil)-instance-method","name":"about","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"about","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@about"}},{"id":"about=(_about:::Union(String,Nil))-instance-method","html_id":"about=(_about:::Union(String,Nil))-instance-method","name":"about=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_about","doc":null,"default_value":"","external_name":"_about","restriction":"::Union(String, ::Nil)"}],"args_string":"(_about : ::Union(String, Nil))","source_link":null,"def":{"name":"about=","args":[{"name":"_about","doc":null,"default_value":"","external_name":"_about","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@about = _about"}},{"id":"access_token:OAuth2::AccessToken?-instance-method","html_id":"access_token:OAuth2::AccessToken?-instance-method","name":"access_token","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OAuth2::AccessToken?","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/vk.cr#L19","def":{"name":"access_token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OAuth2::AccessToken | ::Nil","visibility":"Public","body":"@access_token"}},{"id":"access_token=(access_token:OAuth2::AccessToken?)-instance-method","html_id":"access_token=(access_token:OAuth2::AccessToken?)-instance-method","name":"access_token=","doc":null,"summary":null,"abstract":false,"args":[{"name":"access_token","doc":null,"default_value":"","external_name":"access_token","restriction":"OAuth2::AccessToken | ::Nil"}],"args_string":"(access_token : OAuth2::AccessToken?)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/vk.cr#L19","def":{"name":"access_token=","args":[{"name":"access_token","doc":null,"default_value":"","external_name":"access_token","restriction":"OAuth2::AccessToken | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@access_token = access_token"}},{"id":"city:::Union(VkTitle,Nil)-instance-method","html_id":"city:::Union(VkTitle,Nil)-instance-method","name":"city","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(VkTitle, Nil)","source_link":null,"def":{"name":"city","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(VkTitle, ::Nil)","visibility":"Public","body":"@city"}},{"id":"city=(_city:::Union(VkTitle,Nil))-instance-method","html_id":"city=(_city:::Union(VkTitle,Nil))-instance-method","name":"city=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_city","doc":null,"default_value":"","external_name":"_city","restriction":"::Union(VkTitle, ::Nil)"}],"args_string":"(_city : ::Union(VkTitle, Nil))","source_link":null,"def":{"name":"city=","args":[{"name":"_city","doc":null,"default_value":"","external_name":"_city","restriction":"::Union(VkTitle, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@city = _city"}},{"id":"country:::Union(VkTitle,Nil)-instance-method","html_id":"country:::Union(VkTitle,Nil)-instance-method","name":"country","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(VkTitle, Nil)","source_link":null,"def":{"name":"country","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(VkTitle, ::Nil)","visibility":"Public","body":"@country"}},{"id":"country=(_country:::Union(VkTitle,Nil))-instance-method","html_id":"country=(_country:::Union(VkTitle,Nil))-instance-method","name":"country=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_country","doc":null,"default_value":"","external_name":"_country","restriction":"::Union(VkTitle, ::Nil)"}],"args_string":"(_country : ::Union(VkTitle, Nil))","source_link":null,"def":{"name":"country=","args":[{"name":"_country","doc":null,"default_value":"","external_name":"_country","restriction":"::Union(VkTitle, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@country = _country"}},{"id":"description-instance-method","html_id":"description-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/vk.cr#L45","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.about"}},{"id":"domain:::Union(String,Nil)-instance-method","html_id":"domain:::Union(String,Nil)-instance-method","name":"domain","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"domain","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@domain"}},{"id":"domain=(_domain:::Union(String,Nil))-instance-method","html_id":"domain=(_domain:::Union(String,Nil))-instance-method","name":"domain=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_domain","doc":null,"default_value":"","external_name":"_domain","restriction":"::Union(String, ::Nil)"}],"args_string":"(_domain : ::Union(String, Nil))","source_link":null,"def":{"name":"domain=","args":[{"name":"_domain","doc":null,"default_value":"","external_name":"_domain","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@domain = _domain"}},{"id":"email:String?-instance-method","html_id":"email:String?-instance-method","name":"email","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/vk.cr#L21","def":{"name":"email","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@email"}},{"id":"email=(email:String?)-instance-method","html_id":"email=(email:String?)-instance-method","name":"email=","doc":null,"summary":null,"abstract":false,"args":[{"name":"email","doc":null,"default_value":"","external_name":"email","restriction":"String | ::Nil"}],"args_string":"(email : String?)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/vk.cr#L21","def":{"name":"email=","args":[{"name":"email","doc":null,"default_value":"","external_name":"email","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@email = email"}},{"id":"first_name:::Union(String,Nil)-instance-method","html_id":"first_name:::Union(String,Nil)-instance-method","name":"first_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"first_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@first_name"}},{"id":"first_name=(_first_name:::Union(String,Nil))-instance-method","html_id":"first_name=(_first_name:::Union(String,Nil))-instance-method","name":"first_name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_first_name","doc":null,"default_value":"","external_name":"_first_name","restriction":"::Union(String, ::Nil)"}],"args_string":"(_first_name : ::Union(String, Nil))","source_link":null,"def":{"name":"first_name=","args":[{"name":"_first_name","doc":null,"default_value":"","external_name":"_first_name","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@first_name = _first_name"}},{"id":"home_phone:::Union(String,Nil)-instance-method","html_id":"home_phone:::Union(String,Nil)-instance-method","name":"home_phone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"home_phone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@home_phone"}},{"id":"home_phone=(_home_phone:::Union(String,Nil))-instance-method","html_id":"home_phone=(_home_phone:::Union(String,Nil))-instance-method","name":"home_phone=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_home_phone","doc":null,"default_value":"","external_name":"_home_phone","restriction":"::Union(String, ::Nil)"}],"args_string":"(_home_phone : ::Union(String, Nil))","source_link":null,"def":{"name":"home_phone=","args":[{"name":"_home_phone","doc":null,"default_value":"","external_name":"_home_phone","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@home_phone = _home_phone"}},{"id":"image-instance-method","html_id":"image-instance-method","name":"image","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/vk.cr#L49","def":{"name":"image","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.photo_max_orig"}},{"id":"last_name:::Union(String,Nil)-instance-method","html_id":"last_name:::Union(String,Nil)-instance-method","name":"last_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"last_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@last_name"}},{"id":"last_name=(_last_name:::Union(String,Nil))-instance-method","html_id":"last_name=(_last_name:::Union(String,Nil))-instance-method","name":"last_name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_last_name","doc":null,"default_value":"","external_name":"_last_name","restriction":"::Union(String, ::Nil)"}],"args_string":"(_last_name : ::Union(String, Nil))","source_link":null,"def":{"name":"last_name=","args":[{"name":"_last_name","doc":null,"default_value":"","external_name":"_last_name","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@last_name = _last_name"}},{"id":"location-instance-method","html_id":"location-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/vk.cr#L57","def":{"name":"location","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"location = [] of String\nif self.city\n  location << self.city.not_nil!.title\nend\nif self.country\n  location << self.country.not_nil!.title\nend\nlocation.empty? ? Nil : location.join(\", \")\n"}},{"id":"mobile_phone:::Union(String,Nil)-instance-method","html_id":"mobile_phone:::Union(String,Nil)-instance-method","name":"mobile_phone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"mobile_phone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@mobile_phone"}},{"id":"mobile_phone=(_mobile_phone:::Union(String,Nil))-instance-method","html_id":"mobile_phone=(_mobile_phone:::Union(String,Nil))-instance-method","name":"mobile_phone=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_mobile_phone","doc":null,"default_value":"","external_name":"_mobile_phone","restriction":"::Union(String, ::Nil)"}],"args_string":"(_mobile_phone : ::Union(String, Nil))","source_link":null,"def":{"name":"mobile_phone=","args":[{"name":"_mobile_phone","doc":null,"default_value":"","external_name":"_mobile_phone","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mobile_phone = _mobile_phone"}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/vk.cr#L41","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{last_name} #{first_name}\""}},{"id":"nickname-instance-method","html_id":"nickname-instance-method","name":"nickname","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/vk.cr#L37","def":{"name":"nickname","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.domain"}},{"id":"phone-instance-method","html_id":"phone-instance-method","name":"phone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/vk.cr#L53","def":{"name":"phone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.mobile_phone || self.home_phone"}},{"id":"photo_max_orig:::Union(String,Nil)-instance-method","html_id":"photo_max_orig:::Union(String,Nil)-instance-method","name":"photo_max_orig","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"photo_max_orig","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@photo_max_orig"}},{"id":"photo_max_orig=(_photo_max_orig:::Union(String,Nil))-instance-method","html_id":"photo_max_orig=(_photo_max_orig:::Union(String,Nil))-instance-method","name":"photo_max_orig=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_photo_max_orig","doc":null,"default_value":"","external_name":"_photo_max_orig","restriction":"::Union(String, ::Nil)"}],"args_string":"(_photo_max_orig : ::Union(String, Nil))","source_link":null,"def":{"name":"photo_max_orig=","args":[{"name":"_photo_max_orig","doc":null,"default_value":"","external_name":"_photo_max_orig","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@photo_max_orig = _photo_max_orig"}},{"id":"provider:String-instance-method","html_id":"provider:String-instance-method","name":"provider","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/vk.cr#L20","def":{"name":"provider","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@provider"}},{"id":"provider=(provider:String)-instance-method","html_id":"provider=(provider:String)-instance-method","name":"provider=","doc":null,"summary":null,"abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"}],"args_string":"(provider : String)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/vk.cr#L20","def":{"name":"provider=","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@provider = provider"}},{"id":"raw_json:String?-instance-method","html_id":"raw_json:String?-instance-method","name":"raw_json","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/vk.cr#L18","def":{"name":"raw_json","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@raw_json"}},{"id":"raw_json=(raw_json:String?)-instance-method","html_id":"raw_json=(raw_json:String?)-instance-method","name":"raw_json=","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw_json","doc":null,"default_value":"","external_name":"raw_json","restriction":"String | ::Nil"}],"args_string":"(raw_json : String?)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/vk.cr#L18","def":{"name":"raw_json=","args":[{"name":"raw_json","doc":null,"default_value":"","external_name":"raw_json","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw_json = raw_json"}},{"id":"site:::Union(String,Nil)-instance-method","html_id":"site:::Union(String,Nil)-instance-method","name":"site","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"site","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@site"}},{"id":"site=(_site:::Union(String,Nil))-instance-method","html_id":"site=(_site:::Union(String,Nil))-instance-method","name":"site=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_site","doc":null,"default_value":"","external_name":"_site","restriction":"::Union(String, ::Nil)"}],"args_string":"(_site : ::Union(String, Nil))","source_link":null,"def":{"name":"site=","args":[{"name":"_site","doc":null,"default_value":"","external_name":"_site","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@site = _site"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _uid = @uid\n  if _uid.nil?\n  else\n    json.field(\"id\") do\n      if _uid\n        String::RawConverter.to_json(_uid, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _last_name = @last_name\n  if _last_name.nil?\n  else\n    json.field(\"last_name\") do\n      _last_name.to_json(json)\n    end\n  end\n  _first_name = @first_name\n  if _first_name.nil?\n  else\n    json.field(\"first_name\") do\n      _first_name.to_json(json)\n    end\n  end\n  _site = @site\n  if _site.nil?\n  else\n    json.field(\"site\") do\n      _site.to_json(json)\n    end\n  end\n  _city = @city\n  if _city.nil?\n  else\n    json.field(\"city\") do\n      _city.to_json(json)\n    end\n  end\n  _country = @country\n  if _country.nil?\n  else\n    json.field(\"country\") do\n      _country.to_json(json)\n    end\n  end\n  _domain = @domain\n  if _domain.nil?\n  else\n    json.field(\"domain\") do\n      _domain.to_json(json)\n    end\n  end\n  _about = @about\n  if _about.nil?\n  else\n    json.field(\"about\") do\n      _about.to_json(json)\n    end\n  end\n  _photo_max_orig = @photo_max_orig\n  if _photo_max_orig.nil?\n  else\n    json.field(\"photo_max_orig\") do\n      _photo_max_orig.to_json(json)\n    end\n  end\n  _mobile_phone = @mobile_phone\n  if _mobile_phone.nil?\n  else\n    json.field(\"mobile_phone\") do\n      _mobile_phone.to_json(json)\n    end\n  end\n  _home_phone = @home_phone\n  if _home_phone.nil?\n  else\n    json.field(\"home_phone\") do\n      _home_phone.to_json(json)\n    end\n  end\nend"}},{"id":"uid:String-instance-method","html_id":"uid:String-instance-method","name":"uid","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"uid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@uid"}},{"id":"uid=(_uid:String)-instance-method","html_id":"uid=(_uid:String)-instance-method","name":"uid=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_uid","doc":null,"default_value":"","external_name":"_uid","restriction":"String"}],"args_string":"(_uid : String)","source_link":null,"def":{"name":"uid=","args":[{"name":"_uid","doc":null,"default_value":"","external_name":"_uid","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@uid = _uid"}},{"id":"urls-instance-method","html_id":"urls-instance-method","name":"urls","doc":"abstract def nickname\nabstract def image","summary":"<p>abstract def nickname abstract def image</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/providers/vk.cr#L64","def":{"name":"urls","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"urls = {} of String => String\nif self.site\n  urls[\"web\"] = self.site.not_nil!\nend\nurls.empty? ? Nil : urls\n"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Providers","path":"Contrive/OmniAuth/Providers.html","kind":"module","full_name":"Contrive::OmniAuth::Providers","name":"Providers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"contrive/omniauth/provider.cr","line_number":21,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/provider.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ACCEPTABLE_PROVIDERS","name":"ACCEPTABLE_PROVIDERS","value":"Hash(String, Contrive::OmniAuth::Provider.class).new","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth","kind":"module","full_name":"Contrive::OmniAuth","name":"OmniAuth"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"include_providers(*providers)-macro","html_id":"include_providers(*providers)-macro","name":"include_providers","doc":null,"summary":null,"abstract":false,"args":[{"name":"providers","doc":null,"default_value":"","external_name":"providers","restriction":""}],"args_string":"(*providers)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/provider.cr#L23","def":{"name":"include_providers","args":[{"name":"providers","doc":null,"default_value":"","external_name":"providers","restriction":""}],"double_splat":null,"splat_index":0,"block_arg":null,"visibility":"Public","body":"    \n{% for i in providers %}\n      ACCEPTABLE_PROVIDERS[{{ \"#{i.id}\" }}] = Contrive::OmniAuth::Provider::{{ i.capitalize.id }}\n      Contrive::OmniAuth.config({{ \"#{i.id}\" }},\n                                Contrive::OmniAuth.configuration.{{ i.id }}_id,\n                                Contrive::OmniAuth.configuration.{{ i.id }}_secret_key)\n    {% end %}\n\n  \n"}}],"types":[]},{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/User","path":"Contrive/OmniAuth/User.html","kind":"class","full_name":"Contrive::OmniAuth::User","name":"User","abstract":true,"superclass":{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"contrive/omniauth/user.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/user.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Facebook/FbUser","kind":"class","full_name":"Contrive::OmniAuth::Provider::Facebook::FbUser","name":"FbUser"},{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Github/GhUser","kind":"class","full_name":"Contrive::OmniAuth::Provider::Github::GhUser","name":"GhUser"},{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Twitter/TwUser","kind":"class","full_name":"Contrive::OmniAuth::Provider::Twitter::TwUser","name":"TwUser"},{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth/Provider/Vk/VkUser","kind":"class","full_name":"Contrive::OmniAuth::Provider::Vk::VkUser","name":"VkUser"}],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Contrive/OmniAuth","kind":"module","full_name":"Contrive::OmniAuth","name":"OmniAuth"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"access_token-instance-method","html_id":"access_token-instance-method","name":"access_token","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/user.cr#L7","def":{"name":"access_token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"description-instance-method","html_id":"description-instance-method","name":"description","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/user.cr#L8","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"email-instance-method","html_id":"email-instance-method","name":"email","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/user.cr#L3","def":{"name":"email","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/user.cr#L5","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"provider-instance-method","html_id":"provider-instance-method","name":"provider","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/user.cr#L4","def":{"name":"provider","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"raw_json-instance-method","html_id":"raw_json-instance-method","name":"raw_json","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/user.cr#L6","def":{"name":"raw_json","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"uid-instance-method","html_id":"uid-instance-method","name":"uid","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/user.cr#L2","def":{"name":"uid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"urls-instance-method","html_id":"urls-instance-method","name":"urls","doc":"abstract def nickname\nabstract def image","summary":"<p>abstract def nickname abstract def image</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/omniauth/user.cr#L11","def":{"name":"urls","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/andrewc910/contrive/Teeplate","path":"Teeplate.html","kind":"module","full_name":"Teeplate","name":"Teeplate","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/teeplate/src/version.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/lib/teeplate/src/version.cr"},{"filename":"lib/teeplate/src/lib/as_data_entry.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/lib/teeplate/src/lib/as_data_entry.cr"},{"filename":"lib/teeplate/src/lib/base64_data.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/lib/teeplate/src/lib/base64_data.cr"},{"filename":"lib/teeplate/src/lib/exceptions.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/lib/teeplate/src/lib/exceptions.cr"},{"filename":"lib/teeplate/src/lib/file_data.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/lib/teeplate/src/lib/file_data.cr"},{"filename":"lib/teeplate/src/lib/file_entry_collector.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/lib/teeplate/src/lib/file_entry_collector.cr"},{"filename":"lib/teeplate/src/lib/file_tree.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/lib/teeplate/src/lib/file_tree.cr"},{"filename":"lib/teeplate/src/lib/renderer.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/lib/teeplate/src/lib/renderer.cr"},{"filename":"lib/teeplate/src/lib/rendering_entry.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/lib/teeplate/src/lib/rendering_entry.cr"},{"filename":"lib/teeplate/src/lib/string_data.cr","line_number":1,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/lib/teeplate/src/lib/string_data.cr"},{"filename":"contrive/cli/generators.cr","line_number":299,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/andrewc910/contrive/Teeplate/FileTree","path":"Teeplate/FileTree.html","kind":"class","full_name":"Teeplate::FileTree","name":"FileTree","abstract":true,"superclass":{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/teeplate/src/lib/file_tree.cr","line_number":3,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/lib/teeplate/src/lib/file_tree.cr"},{"filename":"contrive/cli/generators.cr","line_number":300,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/andrewc910/contrive/Contrive/CLI/Generator","kind":"class","full_name":"Contrive::CLI::Generator","name":"Generator"}],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Teeplate","kind":"module","full_name":"Teeplate","name":"Teeplate"},"doc":"Collects template files from a local directory.","summary":"<p>Collects template files from a local directory.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"class_name-instance-method","html_id":"class_name-instance-method","name":"class_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr#L325","def":{"name":"class_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@class_name || (@class_name = @name.camelcase)"}},{"id":"display_name-instance-method","html_id":"display_name-instance-method","name":"display_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr#L329","def":{"name":"display_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@display_name || (@display_name = generate_display_name)"}},{"id":"display_name_plural-instance-method","html_id":"display_name_plural-instance-method","name":"display_name_plural","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr#L333","def":{"name":"display_name_plural","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@display_name_plural || (@display_name_plural = Inflector.pluralize(display_name))"}},{"id":"filter(entries)-instance-method","html_id":"filter(entries)-instance-method","name":"filter","doc":"Override to filter files rendered","summary":"<p>Override to filter files rendered</p>","abstract":false,"args":[{"name":"entries","doc":null,"default_value":"","external_name":"entries","restriction":""}],"args_string":"(entries)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr#L317","def":{"name":"filter","args":[{"name":"entries","doc":null,"default_value":"","external_name":"entries","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"entries"}},{"id":"name_plural-instance-method","html_id":"name_plural-instance-method","name":"name_plural","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr#L321","def":{"name":"name_plural","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name_plural || (@name_plural = Inflector.pluralize(@name))"}},{"id":"render(out_dir,force:Bool=false,interactive:Bool=false,interact:Bool=false,list:Bool=false,color:Bool=false,per_entry:Bool=false,quit:Bool=true)-instance-method","html_id":"render(out_dir,force:Bool=false,interactive:Bool=false,interact:Bool=false,list:Bool=false,color:Bool=false,per_entry:Bool=false,quit:Bool=true)-instance-method","name":"render","doc":"Renders all collected file entries.\n\nFor more information about the arguments, see `Renderer`.","summary":"<p>Renders all collected file entries.</p>","abstract":false,"args":[{"name":"out_dir","doc":null,"default_value":"","external_name":"out_dir","restriction":""},{"name":"force","doc":null,"default_value":"false","external_name":"force","restriction":"Bool"},{"name":"interactive","doc":null,"default_value":"false","external_name":"interactive","restriction":"Bool"},{"name":"interact","doc":null,"default_value":"false","external_name":"interact","restriction":"Bool"},{"name":"list","doc":null,"default_value":"false","external_name":"list","restriction":"Bool"},{"name":"color","doc":null,"default_value":"false","external_name":"color","restriction":"Bool"},{"name":"per_entry","doc":null,"default_value":"false","external_name":"per_entry","restriction":"Bool"},{"name":"quit","doc":null,"default_value":"true","external_name":"quit","restriction":"Bool"}],"args_string":"(out_dir, force : Bool = <span class=\"n\">false</span>, interactive : Bool = <span class=\"n\">false</span>, interact : Bool = <span class=\"n\">false</span>, list : Bool = <span class=\"n\">false</span>, color : Bool = <span class=\"n\">false</span>, per_entry : Bool = <span class=\"n\">false</span>, quit : Bool = <span class=\"n\">true</span>)","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr#L309","def":{"name":"render","args":[{"name":"out_dir","doc":null,"default_value":"","external_name":"out_dir","restriction":""},{"name":"force","doc":null,"default_value":"false","external_name":"force","restriction":"Bool"},{"name":"interactive","doc":null,"default_value":"false","external_name":"interactive","restriction":"Bool"},{"name":"interact","doc":null,"default_value":"false","external_name":"interact","restriction":"Bool"},{"name":"list","doc":null,"default_value":"false","external_name":"list","restriction":"Bool"},{"name":"color","doc":null,"default_value":"false","external_name":"color","restriction":"Bool"},{"name":"per_entry","doc":null,"default_value":"false","external_name":"per_entry","restriction":"Bool"},{"name":"quit","doc":null,"default_value":"true","external_name":"quit","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"renderer = Renderer.new(out_dir, force: force, interact: interactive || interact, list: list, color: color, per_entry: per_entry, quit: quit)\nrenderer << (filter(file_entries))\nrenderer.render\nrenderer\n"}}],"macros":[],"types":[]},{"html_id":"github.com/andrewc910/contrive/Teeplate/RenderingEntry","path":"Teeplate/RenderingEntry.html","kind":"class","full_name":"Teeplate::RenderingEntry","name":"RenderingEntry","abstract":false,"superclass":{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/andrewc910/contrive/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/andrewc910/contrive/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/teeplate/src/lib/rendering_entry.cr","line_number":2,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/lib/teeplate/src/lib/rendering_entry.cr"},{"filename":"contrive/cli/generators.cr","line_number":274,"url":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr"}],"repository_name":"github.com/andrewc910/contrive","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/andrewc910/contrive/Teeplate","kind":"module","full_name":"Teeplate","name":"Teeplate"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"appends?-instance-method","html_id":"appends?-instance-method","name":"appends?","doc":":nodec:","summary":"<p>:nodec:</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr#L275","def":{"name":"appends?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data.path.includes?(\"+\")"}},{"id":"forces?-instance-method","html_id":"forces?-instance-method","name":"forces?","doc":"Tests if this entry forces overwriting.\n\nThis condition is determined by the renderer's setting by default.\nOverride this method if the condition should be determined regardless of the renderer's setting.","summary":"<p>Tests if this entry forces overwriting.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr#L279","def":{"name":"forces?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(appends? || @data.forces?) || @renderer.forces?"}},{"id":"local_path-instance-method","html_id":"local_path-instance-method","name":"local_path","doc":"Returns an output path relative to the base location.\n\nIt returns the data entry's path by default.\nOverride this method if this path should be different from the data entry's path.","summary":"<p>Returns an output path relative to the base location.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/contrive/blob/4f1b33464df5b9f354b76ba3dddd365315d880b5/src/contrive/cli/generators.cr#L283","def":{"name":"local_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@local_path || (@local_path = if appends?\n  @data.path.gsub(\"+\", \"\")\nelse\n  @data.path\nend)"}}],"macros":[],"types":[]}]}]}}